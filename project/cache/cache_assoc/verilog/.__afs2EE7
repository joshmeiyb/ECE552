$date
	Mon Apr 18 19:26:54 2022
$end
$version
	ModelSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end

$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end

$scope task end_simulation $end
$upscope $end

$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end

$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module m0 $end
$var parameter 32 $! memtype $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 16 %! DataOut [15:0] $end
$var reg 1 &! Done $end
$var reg 1 '! Stall $end
$var reg 1 (! CacheHit $end
$var reg 1 )! err $end
$var wire 1 *! cache_data_in [15] $end
$var wire 1 +! cache_data_in [14] $end
$var wire 1 ,! cache_data_in [13] $end
$var wire 1 -! cache_data_in [12] $end
$var wire 1 .! cache_data_in [11] $end
$var wire 1 /! cache_data_in [10] $end
$var wire 1 0! cache_data_in [9] $end
$var wire 1 1! cache_data_in [8] $end
$var wire 1 2! cache_data_in [7] $end
$var wire 1 3! cache_data_in [6] $end
$var wire 1 4! cache_data_in [5] $end
$var wire 1 5! cache_data_in [4] $end
$var wire 1 6! cache_data_in [3] $end
$var wire 1 7! cache_data_in [2] $end
$var wire 1 8! cache_data_in [1] $end
$var wire 1 9! cache_data_in [0] $end
$var wire 1 :! cache_offset_in [2] $end
$var wire 1 ;! cache_offset_in [1] $end
$var wire 1 <! cache_offset_in [0] $end
$var wire 1 =! cache_hit_out_0 $end
$var wire 1 >! cache_dirty_out_0 $end
$var wire 1 ?! cache_valid_out_0 $end
$var wire 1 @! cache_tag_out_0 [4] $end
$var wire 1 A! cache_tag_out_0 [3] $end
$var wire 1 B! cache_tag_out_0 [2] $end
$var wire 1 C! cache_tag_out_0 [1] $end
$var wire 1 D! cache_tag_out_0 [0] $end
$var wire 1 E! cache_data_out_0 [15] $end
$var wire 1 F! cache_data_out_0 [14] $end
$var wire 1 G! cache_data_out_0 [13] $end
$var wire 1 H! cache_data_out_0 [12] $end
$var wire 1 I! cache_data_out_0 [11] $end
$var wire 1 J! cache_data_out_0 [10] $end
$var wire 1 K! cache_data_out_0 [9] $end
$var wire 1 L! cache_data_out_0 [8] $end
$var wire 1 M! cache_data_out_0 [7] $end
$var wire 1 N! cache_data_out_0 [6] $end
$var wire 1 O! cache_data_out_0 [5] $end
$var wire 1 P! cache_data_out_0 [4] $end
$var wire 1 Q! cache_data_out_0 [3] $end
$var wire 1 R! cache_data_out_0 [2] $end
$var wire 1 S! cache_data_out_0 [1] $end
$var wire 1 T! cache_data_out_0 [0] $end
$var wire 1 U! cache_err_0 $end
$var wire 1 V! cache_hit_out_1 $end
$var wire 1 W! cache_dirty_out_1 $end
$var wire 1 X! cache_valid_out_1 $end
$var wire 1 Y! cache_tag_out_1 [4] $end
$var wire 1 Z! cache_tag_out_1 [3] $end
$var wire 1 [! cache_tag_out_1 [2] $end
$var wire 1 \! cache_tag_out_1 [1] $end
$var wire 1 ]! cache_tag_out_1 [0] $end
$var wire 1 ^! cache_data_out_1 [15] $end
$var wire 1 _! cache_data_out_1 [14] $end
$var wire 1 `! cache_data_out_1 [13] $end
$var wire 1 a! cache_data_out_1 [12] $end
$var wire 1 b! cache_data_out_1 [11] $end
$var wire 1 c! cache_data_out_1 [10] $end
$var wire 1 d! cache_data_out_1 [9] $end
$var wire 1 e! cache_data_out_1 [8] $end
$var wire 1 f! cache_data_out_1 [7] $end
$var wire 1 g! cache_data_out_1 [6] $end
$var wire 1 h! cache_data_out_1 [5] $end
$var wire 1 i! cache_data_out_1 [4] $end
$var wire 1 j! cache_data_out_1 [3] $end
$var wire 1 k! cache_data_out_1 [2] $end
$var wire 1 l! cache_data_out_1 [1] $end
$var wire 1 m! cache_data_out_1 [0] $end
$var wire 1 n! cache_err_1 $end
$var wire 1 o! mem_addr [15] $end
$var wire 1 p! mem_addr [14] $end
$var wire 1 q! mem_addr [13] $end
$var wire 1 r! mem_addr [12] $end
$var wire 1 s! mem_addr [11] $end
$var wire 1 t! mem_addr [10] $end
$var wire 1 u! mem_addr [9] $end
$var wire 1 v! mem_addr [8] $end
$var wire 1 w! mem_addr [7] $end
$var wire 1 x! mem_addr [6] $end
$var wire 1 y! mem_addr [5] $end
$var wire 1 z! mem_addr [4] $end
$var wire 1 {! mem_addr [3] $end
$var wire 1 |! mem_addr [2] $end
$var wire 1 }! mem_addr [1] $end
$var wire 1 ~! mem_addr [0] $end
$var wire 1 !" mem_data_out [15] $end
$var wire 1 "" mem_data_out [14] $end
$var wire 1 #" mem_data_out [13] $end
$var wire 1 $" mem_data_out [12] $end
$var wire 1 %" mem_data_out [11] $end
$var wire 1 &" mem_data_out [10] $end
$var wire 1 '" mem_data_out [9] $end
$var wire 1 (" mem_data_out [8] $end
$var wire 1 )" mem_data_out [7] $end
$var wire 1 *" mem_data_out [6] $end
$var wire 1 +" mem_data_out [5] $end
$var wire 1 ," mem_data_out [4] $end
$var wire 1 -" mem_data_out [3] $end
$var wire 1 ." mem_data_out [2] $end
$var wire 1 /" mem_data_out [1] $end
$var wire 1 0" mem_data_out [0] $end
$var wire 1 1" mem_stall $end
$var wire 1 2" mem_busy [3] $end
$var wire 1 3" mem_busy [2] $end
$var wire 1 4" mem_busy [1] $end
$var wire 1 5" mem_busy [0] $end
$var wire 1 6" mem_err $end
$var wire 1 7" comp $end
$var wire 1 8" cache_write $end
$var wire 1 9" cache_offset_out [2] $end
$var wire 1 :" cache_offset_out [1] $end
$var wire 1 ;" cache_offset_out [0] $end
$var wire 1 <" cache_offset_select $end
$var wire 1 =" cache_data_in_select $end
$var wire 1 >" tag_select $end
$var wire 1 ?" mem_offset [2] $end
$var wire 1 @" mem_offset [1] $end
$var wire 1 A" mem_offset [0] $end
$var wire 1 B" mem_wr $end
$var wire 1 C" mem_rd $end
$var wire 1 D" cache_valid_in $end
$var wire 1 E" cache_ctrl_err $end
$var wire 1 F" enable $end
$var wire 1 G" cache_hit $end
$var wire 1 H" done $end
$var wire 1 I" stall_out $end
$var wire 1 J" victimway_in $end
$var wire 1 K" victimway_out $end
$var wire 1 L" flip_victimway $end
$var wire 1 M" cache_way_select $end
$var reg 1 N" enable_0 $end
$var reg 1 O" enable_1 $end
$var wire 1 P" DataOut_temp [15] $end
$var wire 1 Q" DataOut_temp [14] $end
$var wire 1 R" DataOut_temp [13] $end
$var wire 1 S" DataOut_temp [12] $end
$var wire 1 T" DataOut_temp [11] $end
$var wire 1 U" DataOut_temp [10] $end
$var wire 1 V" DataOut_temp [9] $end
$var wire 1 W" DataOut_temp [8] $end
$var wire 1 X" DataOut_temp [7] $end
$var wire 1 Y" DataOut_temp [6] $end
$var wire 1 Z" DataOut_temp [5] $end
$var wire 1 [" DataOut_temp [4] $end
$var wire 1 \" DataOut_temp [3] $end
$var wire 1 ]" DataOut_temp [2] $end
$var wire 1 ^" DataOut_temp [1] $end
$var wire 1 _" DataOut_temp [0] $end
$var wire 1 `" cache_tag_out_temp [4] $end
$var wire 1 a" cache_tag_out_temp [3] $end
$var wire 1 b" cache_tag_out_temp [2] $end
$var wire 1 c" cache_tag_out_temp [1] $end
$var wire 1 d" cache_tag_out_temp [0] $end
$var wire 1 e" cache_hit_out_temp $end
$var wire 1 f" cache_dirty_out_temp $end
$var wire 1 g" cache_valid_out_temp $end
$var wire 1 h" cache_err_temp $end

$scope module victimway $end
$var wire 1 K" q $end
$var wire 1 J" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i" state $end
$upscope $end

$scope module c0 $end
$var parameter 32 j" cache_id $end
$var wire 1 k" enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 :! offset [2] $end
$var wire 1 ;! offset [1] $end
$var wire 1 <! offset [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 7" comp $end
$var wire 1 8" write $end
$var wire 1 D" valid_in $end
$var wire 1 @! tag_out [4] $end
$var wire 1 A! tag_out [3] $end
$var wire 1 B! tag_out [2] $end
$var wire 1 C! tag_out [1] $end
$var wire 1 D! tag_out [0] $end
$var wire 1 E! data_out [15] $end
$var wire 1 F! data_out [14] $end
$var wire 1 G! data_out [13] $end
$var wire 1 H! data_out [12] $end
$var wire 1 I! data_out [11] $end
$var wire 1 J! data_out [10] $end
$var wire 1 K! data_out [9] $end
$var wire 1 L! data_out [8] $end
$var wire 1 M! data_out [7] $end
$var wire 1 N! data_out [6] $end
$var wire 1 O! data_out [5] $end
$var wire 1 P! data_out [4] $end
$var wire 1 Q! data_out [3] $end
$var wire 1 R! data_out [2] $end
$var wire 1 S! data_out [1] $end
$var wire 1 T! data_out [0] $end
$var wire 1 =! hit $end
$var wire 1 >! dirty $end
$var wire 1 ?! valid $end
$var wire 1 U! err $end
$var wire 1 l" ram0_id [4] $end
$var wire 1 m" ram0_id [3] $end
$var wire 1 n" ram0_id [2] $end
$var wire 1 o" ram0_id [1] $end
$var wire 1 p" ram0_id [0] $end
$var wire 1 q" ram1_id [4] $end
$var wire 1 r" ram1_id [3] $end
$var wire 1 s" ram1_id [2] $end
$var wire 1 t" ram1_id [1] $end
$var wire 1 u" ram1_id [0] $end
$var wire 1 v" ram2_id [4] $end
$var wire 1 w" ram2_id [3] $end
$var wire 1 x" ram2_id [2] $end
$var wire 1 y" ram2_id [1] $end
$var wire 1 z" ram2_id [0] $end
$var wire 1 {" ram3_id [4] $end
$var wire 1 |" ram3_id [3] $end
$var wire 1 }" ram3_id [2] $end
$var wire 1 ~" ram3_id [1] $end
$var wire 1 !# ram3_id [0] $end
$var wire 1 "# ram4_id [4] $end
$var wire 1 ## ram4_id [3] $end
$var wire 1 $# ram4_id [2] $end
$var wire 1 %# ram4_id [1] $end
$var wire 1 &# ram4_id [0] $end
$var wire 1 '# ram5_id [4] $end
$var wire 1 (# ram5_id [3] $end
$var wire 1 )# ram5_id [2] $end
$var wire 1 *# ram5_id [1] $end
$var wire 1 +# ram5_id [0] $end
$var wire 1 ,# w0 [15] $end
$var wire 1 -# w0 [14] $end
$var wire 1 .# w0 [13] $end
$var wire 1 /# w0 [12] $end
$var wire 1 0# w0 [11] $end
$var wire 1 1# w0 [10] $end
$var wire 1 2# w0 [9] $end
$var wire 1 3# w0 [8] $end
$var wire 1 4# w0 [7] $end
$var wire 1 5# w0 [6] $end
$var wire 1 6# w0 [5] $end
$var wire 1 7# w0 [4] $end
$var wire 1 8# w0 [3] $end
$var wire 1 9# w0 [2] $end
$var wire 1 :# w0 [1] $end
$var wire 1 ;# w0 [0] $end
$var wire 1 <# w1 [15] $end
$var wire 1 =# w1 [14] $end
$var wire 1 ># w1 [13] $end
$var wire 1 ?# w1 [12] $end
$var wire 1 @# w1 [11] $end
$var wire 1 A# w1 [10] $end
$var wire 1 B# w1 [9] $end
$var wire 1 C# w1 [8] $end
$var wire 1 D# w1 [7] $end
$var wire 1 E# w1 [6] $end
$var wire 1 F# w1 [5] $end
$var wire 1 G# w1 [4] $end
$var wire 1 H# w1 [3] $end
$var wire 1 I# w1 [2] $end
$var wire 1 J# w1 [1] $end
$var wire 1 K# w1 [0] $end
$var wire 1 L# w2 [15] $end
$var wire 1 M# w2 [14] $end
$var wire 1 N# w2 [13] $end
$var wire 1 O# w2 [12] $end
$var wire 1 P# w2 [11] $end
$var wire 1 Q# w2 [10] $end
$var wire 1 R# w2 [9] $end
$var wire 1 S# w2 [8] $end
$var wire 1 T# w2 [7] $end
$var wire 1 U# w2 [6] $end
$var wire 1 V# w2 [5] $end
$var wire 1 W# w2 [4] $end
$var wire 1 X# w2 [3] $end
$var wire 1 Y# w2 [2] $end
$var wire 1 Z# w2 [1] $end
$var wire 1 [# w2 [0] $end
$var wire 1 \# w3 [15] $end
$var wire 1 ]# w3 [14] $end
$var wire 1 ^# w3 [13] $end
$var wire 1 _# w3 [12] $end
$var wire 1 `# w3 [11] $end
$var wire 1 a# w3 [10] $end
$var wire 1 b# w3 [9] $end
$var wire 1 c# w3 [8] $end
$var wire 1 d# w3 [7] $end
$var wire 1 e# w3 [6] $end
$var wire 1 f# w3 [5] $end
$var wire 1 g# w3 [4] $end
$var wire 1 h# w3 [3] $end
$var wire 1 i# w3 [2] $end
$var wire 1 j# w3 [1] $end
$var wire 1 k# w3 [0] $end
$var wire 1 l# go $end
$var wire 1 m# match $end
$var wire 1 n# wr_word0 $end
$var wire 1 o# wr_word1 $end
$var wire 1 p# wr_word2 $end
$var wire 1 q# wr_word3 $end
$var wire 1 r# wr_dirty $end
$var wire 1 s# wr_tag $end
$var wire 1 t# wr_valid $end
$var wire 1 u# dirty_in $end
$var wire 1 v# dirtybit $end
$var wire 1 w# validbit $end

$scope module mem_w0 $end
$var parameter 32 x# Size $end
$var wire 1 ,# data_out [15] $end
$var wire 1 -# data_out [14] $end
$var wire 1 .# data_out [13] $end
$var wire 1 /# data_out [12] $end
$var wire 1 0# data_out [11] $end
$var wire 1 1# data_out [10] $end
$var wire 1 2# data_out [9] $end
$var wire 1 3# data_out [8] $end
$var wire 1 4# data_out [7] $end
$var wire 1 5# data_out [6] $end
$var wire 1 6# data_out [5] $end
$var wire 1 7# data_out [4] $end
$var wire 1 8# data_out [3] $end
$var wire 1 9# data_out [2] $end
$var wire 1 :# data_out [1] $end
$var wire 1 ;# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 n# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 l" file_id [4] $end
$var wire 1 m" file_id [3] $end
$var wire 1 n" file_id [2] $end
$var wire 1 o" file_id [1] $end
$var wire 1 p" file_id [0] $end
$var integer 32 y# mcd $end
$var integer 32 z# i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 {# Size $end
$var wire 1 <# data_out [15] $end
$var wire 1 =# data_out [14] $end
$var wire 1 ># data_out [13] $end
$var wire 1 ?# data_out [12] $end
$var wire 1 @# data_out [11] $end
$var wire 1 A# data_out [10] $end
$var wire 1 B# data_out [9] $end
$var wire 1 C# data_out [8] $end
$var wire 1 D# data_out [7] $end
$var wire 1 E# data_out [6] $end
$var wire 1 F# data_out [5] $end
$var wire 1 G# data_out [4] $end
$var wire 1 H# data_out [3] $end
$var wire 1 I# data_out [2] $end
$var wire 1 J# data_out [1] $end
$var wire 1 K# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 o# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 q" file_id [4] $end
$var wire 1 r" file_id [3] $end
$var wire 1 s" file_id [2] $end
$var wire 1 t" file_id [1] $end
$var wire 1 u" file_id [0] $end
$var integer 32 |# mcd $end
$var integer 32 }# i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 ~# Size $end
$var wire 1 L# data_out [15] $end
$var wire 1 M# data_out [14] $end
$var wire 1 N# data_out [13] $end
$var wire 1 O# data_out [12] $end
$var wire 1 P# data_out [11] $end
$var wire 1 Q# data_out [10] $end
$var wire 1 R# data_out [9] $end
$var wire 1 S# data_out [8] $end
$var wire 1 T# data_out [7] $end
$var wire 1 U# data_out [6] $end
$var wire 1 V# data_out [5] $end
$var wire 1 W# data_out [4] $end
$var wire 1 X# data_out [3] $end
$var wire 1 Y# data_out [2] $end
$var wire 1 Z# data_out [1] $end
$var wire 1 [# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 p# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 v" file_id [4] $end
$var wire 1 w" file_id [3] $end
$var wire 1 x" file_id [2] $end
$var wire 1 y" file_id [1] $end
$var wire 1 z" file_id [0] $end
$var integer 32 !$ mcd $end
$var integer 32 "$ i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 #$ Size $end
$var wire 1 \# data_out [15] $end
$var wire 1 ]# data_out [14] $end
$var wire 1 ^# data_out [13] $end
$var wire 1 _# data_out [12] $end
$var wire 1 `# data_out [11] $end
$var wire 1 a# data_out [10] $end
$var wire 1 b# data_out [9] $end
$var wire 1 c# data_out [8] $end
$var wire 1 d# data_out [7] $end
$var wire 1 e# data_out [6] $end
$var wire 1 f# data_out [5] $end
$var wire 1 g# data_out [4] $end
$var wire 1 h# data_out [3] $end
$var wire 1 i# data_out [2] $end
$var wire 1 j# data_out [1] $end
$var wire 1 k# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 q# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 {" file_id [4] $end
$var wire 1 |" file_id [3] $end
$var wire 1 }" file_id [2] $end
$var wire 1 ~" file_id [1] $end
$var wire 1 !# file_id [0] $end
$var integer 32 $$ mcd $end
$var integer 32 %$ i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 &$ Size $end
$var wire 1 @! data_out [4] $end
$var wire 1 A! data_out [3] $end
$var wire 1 B! data_out [2] $end
$var wire 1 C! data_out [1] $end
$var wire 1 D! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 s# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 "# file_id [4] $end
$var wire 1 ## file_id [3] $end
$var wire 1 $# file_id [2] $end
$var wire 1 %# file_id [1] $end
$var wire 1 &# file_id [0] $end
$var integer 32 '$ mcd $end
$var integer 32 ($ i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 )$ Size $end
$var wire 1 v# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 u# data_in [0] $end
$var wire 1 r# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 '# file_id [4] $end
$var wire 1 (# file_id [3] $end
$var wire 1 )# file_id [2] $end
$var wire 1 *# file_id [1] $end
$var wire 1 +# file_id [0] $end
$var integer 32 *$ mcd $end
$var integer 32 +$ i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 w# data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 D" data_in $end
$var wire 1 t# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 l" file_id [4] $end
$var wire 1 m" file_id [3] $end
$var wire 1 n" file_id [2] $end
$var wire 1 o" file_id [1] $end
$var wire 1 p" file_id [0] $end
$var integer 32 ,$ mcd $end
$var integer 32 -$ i $end
$upscope $end
$upscope $end

$scope module c1 $end
$var parameter 32 .$ cache_id $end
$var wire 1 /$ enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 :! offset [2] $end
$var wire 1 ;! offset [1] $end
$var wire 1 <! offset [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 7" comp $end
$var wire 1 8" write $end
$var wire 1 D" valid_in $end
$var wire 1 Y! tag_out [4] $end
$var wire 1 Z! tag_out [3] $end
$var wire 1 [! tag_out [2] $end
$var wire 1 \! tag_out [1] $end
$var wire 1 ]! tag_out [0] $end
$var wire 1 ^! data_out [15] $end
$var wire 1 _! data_out [14] $end
$var wire 1 `! data_out [13] $end
$var wire 1 a! data_out [12] $end
$var wire 1 b! data_out [11] $end
$var wire 1 c! data_out [10] $end
$var wire 1 d! data_out [9] $end
$var wire 1 e! data_out [8] $end
$var wire 1 f! data_out [7] $end
$var wire 1 g! data_out [6] $end
$var wire 1 h! data_out [5] $end
$var wire 1 i! data_out [4] $end
$var wire 1 j! data_out [3] $end
$var wire 1 k! data_out [2] $end
$var wire 1 l! data_out [1] $end
$var wire 1 m! data_out [0] $end
$var wire 1 V! hit $end
$var wire 1 W! dirty $end
$var wire 1 X! valid $end
$var wire 1 n! err $end
$var wire 1 0$ ram0_id [4] $end
$var wire 1 1$ ram0_id [3] $end
$var wire 1 2$ ram0_id [2] $end
$var wire 1 3$ ram0_id [1] $end
$var wire 1 4$ ram0_id [0] $end
$var wire 1 5$ ram1_id [4] $end
$var wire 1 6$ ram1_id [3] $end
$var wire 1 7$ ram1_id [2] $end
$var wire 1 8$ ram1_id [1] $end
$var wire 1 9$ ram1_id [0] $end
$var wire 1 :$ ram2_id [4] $end
$var wire 1 ;$ ram2_id [3] $end
$var wire 1 <$ ram2_id [2] $end
$var wire 1 =$ ram2_id [1] $end
$var wire 1 >$ ram2_id [0] $end
$var wire 1 ?$ ram3_id [4] $end
$var wire 1 @$ ram3_id [3] $end
$var wire 1 A$ ram3_id [2] $end
$var wire 1 B$ ram3_id [1] $end
$var wire 1 C$ ram3_id [0] $end
$var wire 1 D$ ram4_id [4] $end
$var wire 1 E$ ram4_id [3] $end
$var wire 1 F$ ram4_id [2] $end
$var wire 1 G$ ram4_id [1] $end
$var wire 1 H$ ram4_id [0] $end
$var wire 1 I$ ram5_id [4] $end
$var wire 1 J$ ram5_id [3] $end
$var wire 1 K$ ram5_id [2] $end
$var wire 1 L$ ram5_id [1] $end
$var wire 1 M$ ram5_id [0] $end
$var wire 1 N$ w0 [15] $end
$var wire 1 O$ w0 [14] $end
$var wire 1 P$ w0 [13] $end
$var wire 1 Q$ w0 [12] $end
$var wire 1 R$ w0 [11] $end
$var wire 1 S$ w0 [10] $end
$var wire 1 T$ w0 [9] $end
$var wire 1 U$ w0 [8] $end
$var wire 1 V$ w0 [7] $end
$var wire 1 W$ w0 [6] $end
$var wire 1 X$ w0 [5] $end
$var wire 1 Y$ w0 [4] $end
$var wire 1 Z$ w0 [3] $end
$var wire 1 [$ w0 [2] $end
$var wire 1 \$ w0 [1] $end
$var wire 1 ]$ w0 [0] $end
$var wire 1 ^$ w1 [15] $end
$var wire 1 _$ w1 [14] $end
$var wire 1 `$ w1 [13] $end
$var wire 1 a$ w1 [12] $end
$var wire 1 b$ w1 [11] $end
$var wire 1 c$ w1 [10] $end
$var wire 1 d$ w1 [9] $end
$var wire 1 e$ w1 [8] $end
$var wire 1 f$ w1 [7] $end
$var wire 1 g$ w1 [6] $end
$var wire 1 h$ w1 [5] $end
$var wire 1 i$ w1 [4] $end
$var wire 1 j$ w1 [3] $end
$var wire 1 k$ w1 [2] $end
$var wire 1 l$ w1 [1] $end
$var wire 1 m$ w1 [0] $end
$var wire 1 n$ w2 [15] $end
$var wire 1 o$ w2 [14] $end
$var wire 1 p$ w2 [13] $end
$var wire 1 q$ w2 [12] $end
$var wire 1 r$ w2 [11] $end
$var wire 1 s$ w2 [10] $end
$var wire 1 t$ w2 [9] $end
$var wire 1 u$ w2 [8] $end
$var wire 1 v$ w2 [7] $end
$var wire 1 w$ w2 [6] $end
$var wire 1 x$ w2 [5] $end
$var wire 1 y$ w2 [4] $end
$var wire 1 z$ w2 [3] $end
$var wire 1 {$ w2 [2] $end
$var wire 1 |$ w2 [1] $end
$var wire 1 }$ w2 [0] $end
$var wire 1 ~$ w3 [15] $end
$var wire 1 !% w3 [14] $end
$var wire 1 "% w3 [13] $end
$var wire 1 #% w3 [12] $end
$var wire 1 $% w3 [11] $end
$var wire 1 %% w3 [10] $end
$var wire 1 &% w3 [9] $end
$var wire 1 '% w3 [8] $end
$var wire 1 (% w3 [7] $end
$var wire 1 )% w3 [6] $end
$var wire 1 *% w3 [5] $end
$var wire 1 +% w3 [4] $end
$var wire 1 ,% w3 [3] $end
$var wire 1 -% w3 [2] $end
$var wire 1 .% w3 [1] $end
$var wire 1 /% w3 [0] $end
$var wire 1 0% go $end
$var wire 1 1% match $end
$var wire 1 2% wr_word0 $end
$var wire 1 3% wr_word1 $end
$var wire 1 4% wr_word2 $end
$var wire 1 5% wr_word3 $end
$var wire 1 6% wr_dirty $end
$var wire 1 7% wr_tag $end
$var wire 1 8% wr_valid $end
$var wire 1 9% dirty_in $end
$var wire 1 :% dirtybit $end
$var wire 1 ;% validbit $end

$scope module mem_w0 $end
$var parameter 32 <% Size $end
$var wire 1 N$ data_out [15] $end
$var wire 1 O$ data_out [14] $end
$var wire 1 P$ data_out [13] $end
$var wire 1 Q$ data_out [12] $end
$var wire 1 R$ data_out [11] $end
$var wire 1 S$ data_out [10] $end
$var wire 1 T$ data_out [9] $end
$var wire 1 U$ data_out [8] $end
$var wire 1 V$ data_out [7] $end
$var wire 1 W$ data_out [6] $end
$var wire 1 X$ data_out [5] $end
$var wire 1 Y$ data_out [4] $end
$var wire 1 Z$ data_out [3] $end
$var wire 1 [$ data_out [2] $end
$var wire 1 \$ data_out [1] $end
$var wire 1 ]$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 2% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 0$ file_id [4] $end
$var wire 1 1$ file_id [3] $end
$var wire 1 2$ file_id [2] $end
$var wire 1 3$ file_id [1] $end
$var wire 1 4$ file_id [0] $end
$var integer 32 =% mcd $end
$var integer 32 >% i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 ?% Size $end
$var wire 1 ^$ data_out [15] $end
$var wire 1 _$ data_out [14] $end
$var wire 1 `$ data_out [13] $end
$var wire 1 a$ data_out [12] $end
$var wire 1 b$ data_out [11] $end
$var wire 1 c$ data_out [10] $end
$var wire 1 d$ data_out [9] $end
$var wire 1 e$ data_out [8] $end
$var wire 1 f$ data_out [7] $end
$var wire 1 g$ data_out [6] $end
$var wire 1 h$ data_out [5] $end
$var wire 1 i$ data_out [4] $end
$var wire 1 j$ data_out [3] $end
$var wire 1 k$ data_out [2] $end
$var wire 1 l$ data_out [1] $end
$var wire 1 m$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 3% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 5$ file_id [4] $end
$var wire 1 6$ file_id [3] $end
$var wire 1 7$ file_id [2] $end
$var wire 1 8$ file_id [1] $end
$var wire 1 9$ file_id [0] $end
$var integer 32 @% mcd $end
$var integer 32 A% i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 B% Size $end
$var wire 1 n$ data_out [15] $end
$var wire 1 o$ data_out [14] $end
$var wire 1 p$ data_out [13] $end
$var wire 1 q$ data_out [12] $end
$var wire 1 r$ data_out [11] $end
$var wire 1 s$ data_out [10] $end
$var wire 1 t$ data_out [9] $end
$var wire 1 u$ data_out [8] $end
$var wire 1 v$ data_out [7] $end
$var wire 1 w$ data_out [6] $end
$var wire 1 x$ data_out [5] $end
$var wire 1 y$ data_out [4] $end
$var wire 1 z$ data_out [3] $end
$var wire 1 {$ data_out [2] $end
$var wire 1 |$ data_out [1] $end
$var wire 1 }$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 4% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 :$ file_id [4] $end
$var wire 1 ;$ file_id [3] $end
$var wire 1 <$ file_id [2] $end
$var wire 1 =$ file_id [1] $end
$var wire 1 >$ file_id [0] $end
$var integer 32 C% mcd $end
$var integer 32 D% i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 E% Size $end
$var wire 1 ~$ data_out [15] $end
$var wire 1 !% data_out [14] $end
$var wire 1 "% data_out [13] $end
$var wire 1 #% data_out [12] $end
$var wire 1 $% data_out [11] $end
$var wire 1 %% data_out [10] $end
$var wire 1 &% data_out [9] $end
$var wire 1 '% data_out [8] $end
$var wire 1 (% data_out [7] $end
$var wire 1 )% data_out [6] $end
$var wire 1 *% data_out [5] $end
$var wire 1 +% data_out [4] $end
$var wire 1 ,% data_out [3] $end
$var wire 1 -% data_out [2] $end
$var wire 1 .% data_out [1] $end
$var wire 1 /% data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 5% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ?$ file_id [4] $end
$var wire 1 @$ file_id [3] $end
$var wire 1 A$ file_id [2] $end
$var wire 1 B$ file_id [1] $end
$var wire 1 C$ file_id [0] $end
$var integer 32 F% mcd $end
$var integer 32 G% i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 H% Size $end
$var wire 1 Y! data_out [4] $end
$var wire 1 Z! data_out [3] $end
$var wire 1 [! data_out [2] $end
$var wire 1 \! data_out [1] $end
$var wire 1 ]! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 7% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 D$ file_id [4] $end
$var wire 1 E$ file_id [3] $end
$var wire 1 F$ file_id [2] $end
$var wire 1 G$ file_id [1] $end
$var wire 1 H$ file_id [0] $end
$var integer 32 I% mcd $end
$var integer 32 J% i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 K% Size $end
$var wire 1 :% data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 9% data_in [0] $end
$var wire 1 6% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 I$ file_id [4] $end
$var wire 1 J$ file_id [3] $end
$var wire 1 K$ file_id [2] $end
$var wire 1 L$ file_id [1] $end
$var wire 1 M$ file_id [0] $end
$var integer 32 L% mcd $end
$var integer 32 M% i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 ;% data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 D" data_in $end
$var wire 1 8% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 0$ file_id [4] $end
$var wire 1 1$ file_id [3] $end
$var wire 1 2$ file_id [2] $end
$var wire 1 3$ file_id [1] $end
$var wire 1 4$ file_id [0] $end
$var integer 32 N% mcd $end
$var integer 32 O% i $end
$upscope $end
$upscope $end

$scope module mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 o! addr [15] $end
$var wire 1 p! addr [14] $end
$var wire 1 q! addr [13] $end
$var wire 1 r! addr [12] $end
$var wire 1 s! addr [11] $end
$var wire 1 t! addr [10] $end
$var wire 1 u! addr [9] $end
$var wire 1 v! addr [8] $end
$var wire 1 w! addr [7] $end
$var wire 1 x! addr [6] $end
$var wire 1 y! addr [5] $end
$var wire 1 z! addr [4] $end
$var wire 1 {! addr [3] $end
$var wire 1 |! addr [2] $end
$var wire 1 }! addr [1] $end
$var wire 1 ~! addr [0] $end
$var wire 1 P" data_in [15] $end
$var wire 1 Q" data_in [14] $end
$var wire 1 R" data_in [13] $end
$var wire 1 S" data_in [12] $end
$var wire 1 T" data_in [11] $end
$var wire 1 U" data_in [10] $end
$var wire 1 V" data_in [9] $end
$var wire 1 W" data_in [8] $end
$var wire 1 X" data_in [7] $end
$var wire 1 Y" data_in [6] $end
$var wire 1 Z" data_in [5] $end
$var wire 1 [" data_in [4] $end
$var wire 1 \" data_in [3] $end
$var wire 1 ]" data_in [2] $end
$var wire 1 ^" data_in [1] $end
$var wire 1 _" data_in [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 !" data_out [15] $end
$var wire 1 "" data_out [14] $end
$var wire 1 #" data_out [13] $end
$var wire 1 $" data_out [12] $end
$var wire 1 %" data_out [11] $end
$var wire 1 &" data_out [10] $end
$var wire 1 '" data_out [9] $end
$var wire 1 (" data_out [8] $end
$var wire 1 )" data_out [7] $end
$var wire 1 *" data_out [6] $end
$var wire 1 +" data_out [5] $end
$var wire 1 ," data_out [4] $end
$var wire 1 -" data_out [3] $end
$var wire 1 ." data_out [2] $end
$var wire 1 /" data_out [1] $end
$var wire 1 0" data_out [0] $end
$var wire 1 1" stall $end
$var wire 1 2" busy [3] $end
$var wire 1 3" busy [2] $end
$var wire 1 4" busy [1] $end
$var wire 1 5" busy [0] $end
$var wire 1 6" err $end
$var wire 1 P% data0_out [15] $end
$var wire 1 Q% data0_out [14] $end
$var wire 1 R% data0_out [13] $end
$var wire 1 S% data0_out [12] $end
$var wire 1 T% data0_out [11] $end
$var wire 1 U% data0_out [10] $end
$var wire 1 V% data0_out [9] $end
$var wire 1 W% data0_out [8] $end
$var wire 1 X% data0_out [7] $end
$var wire 1 Y% data0_out [6] $end
$var wire 1 Z% data0_out [5] $end
$var wire 1 [% data0_out [4] $end
$var wire 1 \% data0_out [3] $end
$var wire 1 ]% data0_out [2] $end
$var wire 1 ^% data0_out [1] $end
$var wire 1 _% data0_out [0] $end
$var wire 1 `% data1_out [15] $end
$var wire 1 a% data1_out [14] $end
$var wire 1 b% data1_out [13] $end
$var wire 1 c% data1_out [12] $end
$var wire 1 d% data1_out [11] $end
$var wire 1 e% data1_out [10] $end
$var wire 1 f% data1_out [9] $end
$var wire 1 g% data1_out [8] $end
$var wire 1 h% data1_out [7] $end
$var wire 1 i% data1_out [6] $end
$var wire 1 j% data1_out [5] $end
$var wire 1 k% data1_out [4] $end
$var wire 1 l% data1_out [3] $end
$var wire 1 m% data1_out [2] $end
$var wire 1 n% data1_out [1] $end
$var wire 1 o% data1_out [0] $end
$var wire 1 p% data2_out [15] $end
$var wire 1 q% data2_out [14] $end
$var wire 1 r% data2_out [13] $end
$var wire 1 s% data2_out [12] $end
$var wire 1 t% data2_out [11] $end
$var wire 1 u% data2_out [10] $end
$var wire 1 v% data2_out [9] $end
$var wire 1 w% data2_out [8] $end
$var wire 1 x% data2_out [7] $end
$var wire 1 y% data2_out [6] $end
$var wire 1 z% data2_out [5] $end
$var wire 1 {% data2_out [4] $end
$var wire 1 |% data2_out [3] $end
$var wire 1 }% data2_out [2] $end
$var wire 1 ~% data2_out [1] $end
$var wire 1 !& data2_out [0] $end
$var wire 1 "& data3_out [15] $end
$var wire 1 #& data3_out [14] $end
$var wire 1 $& data3_out [13] $end
$var wire 1 %& data3_out [12] $end
$var wire 1 && data3_out [11] $end
$var wire 1 '& data3_out [10] $end
$var wire 1 (& data3_out [9] $end
$var wire 1 )& data3_out [8] $end
$var wire 1 *& data3_out [7] $end
$var wire 1 +& data3_out [6] $end
$var wire 1 ,& data3_out [5] $end
$var wire 1 -& data3_out [4] $end
$var wire 1 .& data3_out [3] $end
$var wire 1 /& data3_out [2] $end
$var wire 1 0& data3_out [1] $end
$var wire 1 1& data3_out [0] $end
$var wire 1 2& err0 $end
$var wire 1 3& err1 $end
$var wire 1 4& err2 $end
$var wire 1 5& err3 $end
$var wire 1 6& sel0 $end
$var wire 1 7& sel1 $end
$var wire 1 8& sel2 $end
$var wire 1 9& sel3 $end
$var wire 1 :& en [3] $end
$var wire 1 ;& en [2] $end
$var wire 1 <& en [1] $end
$var wire 1 =& en [0] $end
$var wire 1 >& bsy0 [3] $end
$var wire 1 ?& bsy0 [2] $end
$var wire 1 @& bsy0 [1] $end
$var wire 1 A& bsy0 [0] $end
$var wire 1 B& bsy1 [3] $end
$var wire 1 C& bsy1 [2] $end
$var wire 1 D& bsy1 [1] $end
$var wire 1 E& bsy1 [0] $end
$var wire 1 F& bsy2 [3] $end
$var wire 1 G& bsy2 [2] $end
$var wire 1 H& bsy2 [1] $end
$var wire 1 I& bsy2 [0] $end

$scope module m0 $end
$var wire 1 P% data_out [15] $end
$var wire 1 Q% data_out [14] $end
$var wire 1 R% data_out [13] $end
$var wire 1 S% data_out [12] $end
$var wire 1 T% data_out [11] $end
$var wire 1 U% data_out [10] $end
$var wire 1 V% data_out [9] $end
$var wire 1 W% data_out [8] $end
$var wire 1 X% data_out [7] $end
$var wire 1 Y% data_out [6] $end
$var wire 1 Z% data_out [5] $end
$var wire 1 [% data_out [4] $end
$var wire 1 \% data_out [3] $end
$var wire 1 ]% data_out [2] $end
$var wire 1 ^% data_out [1] $end
$var wire 1 _% data_out [0] $end
$var wire 1 2& err $end
$var wire 1 P" data_in [15] $end
$var wire 1 Q" data_in [14] $end
$var wire 1 R" data_in [13] $end
$var wire 1 S" data_in [12] $end
$var wire 1 T" data_in [11] $end
$var wire 1 U" data_in [10] $end
$var wire 1 V" data_in [9] $end
$var wire 1 W" data_in [8] $end
$var wire 1 X" data_in [7] $end
$var wire 1 Y" data_in [6] $end
$var wire 1 Z" data_in [5] $end
$var wire 1 [" data_in [4] $end
$var wire 1 \" data_in [3] $end
$var wire 1 ]" data_in [2] $end
$var wire 1 ^" data_in [1] $end
$var wire 1 _" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 =& enable $end
$var wire 1 { create_dump $end
$var wire 1 J& bank_id [1] $end
$var wire 1 K& bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L& loaded $end
$var reg 16 M& largest [15:0] $end
$var wire 1 N& addr_1c [13] $end
$var wire 1 O& addr_1c [12] $end
$var wire 1 P& addr_1c [11] $end
$var wire 1 Q& addr_1c [10] $end
$var wire 1 R& addr_1c [9] $end
$var wire 1 S& addr_1c [8] $end
$var wire 1 T& addr_1c [7] $end
$var wire 1 U& addr_1c [6] $end
$var wire 1 V& addr_1c [5] $end
$var wire 1 W& addr_1c [4] $end
$var wire 1 X& addr_1c [3] $end
$var wire 1 Y& addr_1c [2] $end
$var wire 1 Z& addr_1c [1] $end
$var wire 1 [& addr_1c [0] $end
$var wire 1 \& data_in_1c [15] $end
$var wire 1 ]& data_in_1c [14] $end
$var wire 1 ^& data_in_1c [13] $end
$var wire 1 _& data_in_1c [12] $end
$var wire 1 `& data_in_1c [11] $end
$var wire 1 a& data_in_1c [10] $end
$var wire 1 b& data_in_1c [9] $end
$var wire 1 c& data_in_1c [8] $end
$var wire 1 d& data_in_1c [7] $end
$var wire 1 e& data_in_1c [6] $end
$var wire 1 f& data_in_1c [5] $end
$var wire 1 g& data_in_1c [4] $end
$var wire 1 h& data_in_1c [3] $end
$var wire 1 i& data_in_1c [2] $end
$var wire 1 j& data_in_1c [1] $end
$var wire 1 k& data_in_1c [0] $end
$var wire 1 l& rd0 $end
$var wire 1 m& rd1 $end
$var wire 1 n& rd2 $end
$var wire 1 o& rd3 $end
$var wire 1 p& wr0 $end
$var wire 1 q& wr1 $end
$var wire 1 r& wr2 $end
$var wire 1 s& wr3 $end
$var wire 1 t& busy $end
$var integer 32 u& mcd $end
$var integer 32 v& largeout $end
$var integer 32 w& i $end
$var wire 1 x& data_out_1c [15] $end
$var wire 1 y& data_out_1c [14] $end
$var wire 1 z& data_out_1c [13] $end
$var wire 1 {& data_out_1c [12] $end
$var wire 1 |& data_out_1c [11] $end
$var wire 1 }& data_out_1c [10] $end
$var wire 1 ~& data_out_1c [9] $end
$var wire 1 !' data_out_1c [8] $end
$var wire 1 "' data_out_1c [7] $end
$var wire 1 #' data_out_1c [6] $end
$var wire 1 $' data_out_1c [5] $end
$var wire 1 %' data_out_1c [4] $end
$var wire 1 &' data_out_1c [3] $end
$var wire 1 '' data_out_1c [2] $end
$var wire 1 (' data_out_1c [1] $end
$var wire 1 )' data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 m& q $end
$var wire 1 l& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *' state $end
$upscope $end

$scope module ff1 $end
$var wire 1 q& q $end
$var wire 1 p& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +' state $end
$upscope $end

$scope module ff2 $end
$var wire 1 n& q $end
$var wire 1 m& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,' state $end
$upscope $end

$scope module ff3 $end
$var wire 1 r& q $end
$var wire 1 q& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -' state $end
$upscope $end

$scope module ff4 $end
$var wire 1 o& q $end
$var wire 1 n& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .' state $end
$upscope $end

$scope module ff5 $end
$var wire 1 s& q $end
$var wire 1 r& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /' state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 O& q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0' state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 P& q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1' state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 Q& q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2' state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 R& q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3' state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 S& q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4' state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 T& q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5' state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 U& q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6' state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 V& q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7' state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 W& q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8' state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 X& q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9' state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 Y& q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :' state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 Z& q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;' state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 [& q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <' state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 \& q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =' state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 ]& q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >' state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 ^& q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?' state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 _& q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @' state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 `& q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A' state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 a& q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B' state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 b& q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C' state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 c& q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D' state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 d& q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E' state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 e& q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F' state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 f& q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G' state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 g& q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H' state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 h& q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I' state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 i& q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J' state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 j& q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K' state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 k& q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L' state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 P% q $end
$var wire 1 x& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M' state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 Q% q $end
$var wire 1 y& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N' state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 R% q $end
$var wire 1 z& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O' state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 S% q $end
$var wire 1 {& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P' state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 T% q $end
$var wire 1 |& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q' state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 U% q $end
$var wire 1 }& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R' state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 V% q $end
$var wire 1 ~& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S' state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 W% q $end
$var wire 1 !' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T' state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 X% q $end
$var wire 1 "' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U' state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 Y% q $end
$var wire 1 #' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V' state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 Z% q $end
$var wire 1 $' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W' state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 [% q $end
$var wire 1 %' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X' state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 \% q $end
$var wire 1 &' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y' state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 ]% q $end
$var wire 1 '' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z' state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 ^% q $end
$var wire 1 (' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [' state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 _% q $end
$var wire 1 )' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \' state $end
$upscope $end
$upscope $end

$scope module m1 $end
$var wire 1 `% data_out [15] $end
$var wire 1 a% data_out [14] $end
$var wire 1 b% data_out [13] $end
$var wire 1 c% data_out [12] $end
$var wire 1 d% data_out [11] $end
$var wire 1 e% data_out [10] $end
$var wire 1 f% data_out [9] $end
$var wire 1 g% data_out [8] $end
$var wire 1 h% data_out [7] $end
$var wire 1 i% data_out [6] $end
$var wire 1 j% data_out [5] $end
$var wire 1 k% data_out [4] $end
$var wire 1 l% data_out [3] $end
$var wire 1 m% data_out [2] $end
$var wire 1 n% data_out [1] $end
$var wire 1 o% data_out [0] $end
$var wire 1 3& err $end
$var wire 1 P" data_in [15] $end
$var wire 1 Q" data_in [14] $end
$var wire 1 R" data_in [13] $end
$var wire 1 S" data_in [12] $end
$var wire 1 T" data_in [11] $end
$var wire 1 U" data_in [10] $end
$var wire 1 V" data_in [9] $end
$var wire 1 W" data_in [8] $end
$var wire 1 X" data_in [7] $end
$var wire 1 Y" data_in [6] $end
$var wire 1 Z" data_in [5] $end
$var wire 1 [" data_in [4] $end
$var wire 1 \" data_in [3] $end
$var wire 1 ]" data_in [2] $end
$var wire 1 ^" data_in [1] $end
$var wire 1 _" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 <& enable $end
$var wire 1 { create_dump $end
$var wire 1 ]' bank_id [1] $end
$var wire 1 ^' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _' loaded $end
$var reg 16 `' largest [15:0] $end
$var wire 1 a' addr_1c [13] $end
$var wire 1 b' addr_1c [12] $end
$var wire 1 c' addr_1c [11] $end
$var wire 1 d' addr_1c [10] $end
$var wire 1 e' addr_1c [9] $end
$var wire 1 f' addr_1c [8] $end
$var wire 1 g' addr_1c [7] $end
$var wire 1 h' addr_1c [6] $end
$var wire 1 i' addr_1c [5] $end
$var wire 1 j' addr_1c [4] $end
$var wire 1 k' addr_1c [3] $end
$var wire 1 l' addr_1c [2] $end
$var wire 1 m' addr_1c [1] $end
$var wire 1 n' addr_1c [0] $end
$var wire 1 o' data_in_1c [15] $end
$var wire 1 p' data_in_1c [14] $end
$var wire 1 q' data_in_1c [13] $end
$var wire 1 r' data_in_1c [12] $end
$var wire 1 s' data_in_1c [11] $end
$var wire 1 t' data_in_1c [10] $end
$var wire 1 u' data_in_1c [9] $end
$var wire 1 v' data_in_1c [8] $end
$var wire 1 w' data_in_1c [7] $end
$var wire 1 x' data_in_1c [6] $end
$var wire 1 y' data_in_1c [5] $end
$var wire 1 z' data_in_1c [4] $end
$var wire 1 {' data_in_1c [3] $end
$var wire 1 |' data_in_1c [2] $end
$var wire 1 }' data_in_1c [1] $end
$var wire 1 ~' data_in_1c [0] $end
$var wire 1 !( rd0 $end
$var wire 1 "( rd1 $end
$var wire 1 #( rd2 $end
$var wire 1 $( rd3 $end
$var wire 1 %( wr0 $end
$var wire 1 &( wr1 $end
$var wire 1 '( wr2 $end
$var wire 1 (( wr3 $end
$var wire 1 )( busy $end
$var integer 32 *( mcd $end
$var integer 32 +( largeout $end
$var integer 32 ,( i $end
$var wire 1 -( data_out_1c [15] $end
$var wire 1 .( data_out_1c [14] $end
$var wire 1 /( data_out_1c [13] $end
$var wire 1 0( data_out_1c [12] $end
$var wire 1 1( data_out_1c [11] $end
$var wire 1 2( data_out_1c [10] $end
$var wire 1 3( data_out_1c [9] $end
$var wire 1 4( data_out_1c [8] $end
$var wire 1 5( data_out_1c [7] $end
$var wire 1 6( data_out_1c [6] $end
$var wire 1 7( data_out_1c [5] $end
$var wire 1 8( data_out_1c [4] $end
$var wire 1 9( data_out_1c [3] $end
$var wire 1 :( data_out_1c [2] $end
$var wire 1 ;( data_out_1c [1] $end
$var wire 1 <( data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 "( q $end
$var wire 1 !( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =( state $end
$upscope $end

$scope module ff1 $end
$var wire 1 &( q $end
$var wire 1 %( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >( state $end
$upscope $end

$scope module ff2 $end
$var wire 1 #( q $end
$var wire 1 "( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?( state $end
$upscope $end

$scope module ff3 $end
$var wire 1 '( q $end
$var wire 1 &( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @( state $end
$upscope $end

$scope module ff4 $end
$var wire 1 $( q $end
$var wire 1 #( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A( state $end
$upscope $end

$scope module ff5 $end
$var wire 1 (( q $end
$var wire 1 '( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B( state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 b' q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C( state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 c' q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D( state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 d' q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E( state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 e' q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F( state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 f' q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G( state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 g' q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H( state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 h' q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I( state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 i' q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J( state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 j' q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K( state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 k' q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L( state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 l' q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M( state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 m' q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N( state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 n' q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O( state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 o' q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P( state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 p' q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q( state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 q' q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R( state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 r' q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S( state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 s' q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T( state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 t' q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U( state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 u' q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V( state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 v' q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W( state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 w' q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X( state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 x' q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y( state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 y' q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z( state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 z' q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [( state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 {' q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \( state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 |' q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]( state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 }' q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^( state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 ~' q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _( state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 `% q $end
$var wire 1 -( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `( state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 a% q $end
$var wire 1 .( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a( state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 b% q $end
$var wire 1 /( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b( state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 c% q $end
$var wire 1 0( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c( state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 d% q $end
$var wire 1 1( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d( state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 e% q $end
$var wire 1 2( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e( state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 f% q $end
$var wire 1 3( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f( state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 g% q $end
$var wire 1 4( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g( state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 h% q $end
$var wire 1 5( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h( state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 i% q $end
$var wire 1 6( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i( state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 j% q $end
$var wire 1 7( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j( state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 k% q $end
$var wire 1 8( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k( state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 l% q $end
$var wire 1 9( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l( state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 m% q $end
$var wire 1 :( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m( state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 n% q $end
$var wire 1 ;( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n( state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 o% q $end
$var wire 1 <( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o( state $end
$upscope $end
$upscope $end

$scope module m2 $end
$var wire 1 p% data_out [15] $end
$var wire 1 q% data_out [14] $end
$var wire 1 r% data_out [13] $end
$var wire 1 s% data_out [12] $end
$var wire 1 t% data_out [11] $end
$var wire 1 u% data_out [10] $end
$var wire 1 v% data_out [9] $end
$var wire 1 w% data_out [8] $end
$var wire 1 x% data_out [7] $end
$var wire 1 y% data_out [6] $end
$var wire 1 z% data_out [5] $end
$var wire 1 {% data_out [4] $end
$var wire 1 |% data_out [3] $end
$var wire 1 }% data_out [2] $end
$var wire 1 ~% data_out [1] $end
$var wire 1 !& data_out [0] $end
$var wire 1 4& err $end
$var wire 1 P" data_in [15] $end
$var wire 1 Q" data_in [14] $end
$var wire 1 R" data_in [13] $end
$var wire 1 S" data_in [12] $end
$var wire 1 T" data_in [11] $end
$var wire 1 U" data_in [10] $end
$var wire 1 V" data_in [9] $end
$var wire 1 W" data_in [8] $end
$var wire 1 X" data_in [7] $end
$var wire 1 Y" data_in [6] $end
$var wire 1 Z" data_in [5] $end
$var wire 1 [" data_in [4] $end
$var wire 1 \" data_in [3] $end
$var wire 1 ]" data_in [2] $end
$var wire 1 ^" data_in [1] $end
$var wire 1 _" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 ;& enable $end
$var wire 1 { create_dump $end
$var wire 1 p( bank_id [1] $end
$var wire 1 q( bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r( loaded $end
$var reg 16 s( largest [15:0] $end
$var wire 1 t( addr_1c [13] $end
$var wire 1 u( addr_1c [12] $end
$var wire 1 v( addr_1c [11] $end
$var wire 1 w( addr_1c [10] $end
$var wire 1 x( addr_1c [9] $end
$var wire 1 y( addr_1c [8] $end
$var wire 1 z( addr_1c [7] $end
$var wire 1 {( addr_1c [6] $end
$var wire 1 |( addr_1c [5] $end
$var wire 1 }( addr_1c [4] $end
$var wire 1 ~( addr_1c [3] $end
$var wire 1 !) addr_1c [2] $end
$var wire 1 ") addr_1c [1] $end
$var wire 1 #) addr_1c [0] $end
$var wire 1 $) data_in_1c [15] $end
$var wire 1 %) data_in_1c [14] $end
$var wire 1 &) data_in_1c [13] $end
$var wire 1 ') data_in_1c [12] $end
$var wire 1 () data_in_1c [11] $end
$var wire 1 )) data_in_1c [10] $end
$var wire 1 *) data_in_1c [9] $end
$var wire 1 +) data_in_1c [8] $end
$var wire 1 ,) data_in_1c [7] $end
$var wire 1 -) data_in_1c [6] $end
$var wire 1 .) data_in_1c [5] $end
$var wire 1 /) data_in_1c [4] $end
$var wire 1 0) data_in_1c [3] $end
$var wire 1 1) data_in_1c [2] $end
$var wire 1 2) data_in_1c [1] $end
$var wire 1 3) data_in_1c [0] $end
$var wire 1 4) rd0 $end
$var wire 1 5) rd1 $end
$var wire 1 6) rd2 $end
$var wire 1 7) rd3 $end
$var wire 1 8) wr0 $end
$var wire 1 9) wr1 $end
$var wire 1 :) wr2 $end
$var wire 1 ;) wr3 $end
$var wire 1 <) busy $end
$var integer 32 =) mcd $end
$var integer 32 >) largeout $end
$var integer 32 ?) i $end
$var wire 1 @) data_out_1c [15] $end
$var wire 1 A) data_out_1c [14] $end
$var wire 1 B) data_out_1c [13] $end
$var wire 1 C) data_out_1c [12] $end
$var wire 1 D) data_out_1c [11] $end
$var wire 1 E) data_out_1c [10] $end
$var wire 1 F) data_out_1c [9] $end
$var wire 1 G) data_out_1c [8] $end
$var wire 1 H) data_out_1c [7] $end
$var wire 1 I) data_out_1c [6] $end
$var wire 1 J) data_out_1c [5] $end
$var wire 1 K) data_out_1c [4] $end
$var wire 1 L) data_out_1c [3] $end
$var wire 1 M) data_out_1c [2] $end
$var wire 1 N) data_out_1c [1] $end
$var wire 1 O) data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 5) q $end
$var wire 1 4) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end

$scope module ff1 $end
$var wire 1 9) q $end
$var wire 1 8) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end

$scope module ff2 $end
$var wire 1 6) q $end
$var wire 1 5) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end

$scope module ff3 $end
$var wire 1 :) q $end
$var wire 1 9) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end

$scope module ff4 $end
$var wire 1 7) q $end
$var wire 1 6) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end

$scope module ff5 $end
$var wire 1 ;) q $end
$var wire 1 :) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 u( q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 v( q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 w( q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 x( q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 y( q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 z( q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 {( q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \) state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 |( q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]) state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 }( q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^) state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 ~( q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _) state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 !) q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `) state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 ") q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a) state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 #) q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b) state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 $) q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c) state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 %) q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d) state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 &) q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e) state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 ') q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f) state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 () q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g) state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 )) q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h) state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 *) q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i) state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 +) q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j) state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 ,) q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k) state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 -) q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l) state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 .) q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m) state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 /) q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n) state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 0) q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o) state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 1) q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p) state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 2) q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q) state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 3) q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r) state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 p% q $end
$var wire 1 @) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s) state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 q% q $end
$var wire 1 A) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t) state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 r% q $end
$var wire 1 B) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u) state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 s% q $end
$var wire 1 C) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v) state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 t% q $end
$var wire 1 D) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w) state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 u% q $end
$var wire 1 E) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x) state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 v% q $end
$var wire 1 F) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y) state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 w% q $end
$var wire 1 G) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z) state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 x% q $end
$var wire 1 H) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {) state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 y% q $end
$var wire 1 I) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |) state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 z% q $end
$var wire 1 J) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }) state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 {% q $end
$var wire 1 K) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~) state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 |% q $end
$var wire 1 L) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !* state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 }% q $end
$var wire 1 M) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "* state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 ~% q $end
$var wire 1 N) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #* state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 !& q $end
$var wire 1 O) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $* state $end
$upscope $end
$upscope $end

$scope module m3 $end
$var wire 1 "& data_out [15] $end
$var wire 1 #& data_out [14] $end
$var wire 1 $& data_out [13] $end
$var wire 1 %& data_out [12] $end
$var wire 1 && data_out [11] $end
$var wire 1 '& data_out [10] $end
$var wire 1 (& data_out [9] $end
$var wire 1 )& data_out [8] $end
$var wire 1 *& data_out [7] $end
$var wire 1 +& data_out [6] $end
$var wire 1 ,& data_out [5] $end
$var wire 1 -& data_out [4] $end
$var wire 1 .& data_out [3] $end
$var wire 1 /& data_out [2] $end
$var wire 1 0& data_out [1] $end
$var wire 1 1& data_out [0] $end
$var wire 1 5& err $end
$var wire 1 P" data_in [15] $end
$var wire 1 Q" data_in [14] $end
$var wire 1 R" data_in [13] $end
$var wire 1 S" data_in [12] $end
$var wire 1 T" data_in [11] $end
$var wire 1 U" data_in [10] $end
$var wire 1 V" data_in [9] $end
$var wire 1 W" data_in [8] $end
$var wire 1 X" data_in [7] $end
$var wire 1 Y" data_in [6] $end
$var wire 1 Z" data_in [5] $end
$var wire 1 [" data_in [4] $end
$var wire 1 \" data_in [3] $end
$var wire 1 ]" data_in [2] $end
$var wire 1 ^" data_in [1] $end
$var wire 1 _" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 :& enable $end
$var wire 1 { create_dump $end
$var wire 1 %* bank_id [1] $end
$var wire 1 &* bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '* loaded $end
$var reg 16 (* largest [15:0] $end
$var wire 1 )* addr_1c [13] $end
$var wire 1 ** addr_1c [12] $end
$var wire 1 +* addr_1c [11] $end
$var wire 1 ,* addr_1c [10] $end
$var wire 1 -* addr_1c [9] $end
$var wire 1 .* addr_1c [8] $end
$var wire 1 /* addr_1c [7] $end
$var wire 1 0* addr_1c [6] $end
$var wire 1 1* addr_1c [5] $end
$var wire 1 2* addr_1c [4] $end
$var wire 1 3* addr_1c [3] $end
$var wire 1 4* addr_1c [2] $end
$var wire 1 5* addr_1c [1] $end
$var wire 1 6* addr_1c [0] $end
$var wire 1 7* data_in_1c [15] $end
$var wire 1 8* data_in_1c [14] $end
$var wire 1 9* data_in_1c [13] $end
$var wire 1 :* data_in_1c [12] $end
$var wire 1 ;* data_in_1c [11] $end
$var wire 1 <* data_in_1c [10] $end
$var wire 1 =* data_in_1c [9] $end
$var wire 1 >* data_in_1c [8] $end
$var wire 1 ?* data_in_1c [7] $end
$var wire 1 @* data_in_1c [6] $end
$var wire 1 A* data_in_1c [5] $end
$var wire 1 B* data_in_1c [4] $end
$var wire 1 C* data_in_1c [3] $end
$var wire 1 D* data_in_1c [2] $end
$var wire 1 E* data_in_1c [1] $end
$var wire 1 F* data_in_1c [0] $end
$var wire 1 G* rd0 $end
$var wire 1 H* rd1 $end
$var wire 1 I* rd2 $end
$var wire 1 J* rd3 $end
$var wire 1 K* wr0 $end
$var wire 1 L* wr1 $end
$var wire 1 M* wr2 $end
$var wire 1 N* wr3 $end
$var wire 1 O* busy $end
$var integer 32 P* mcd $end
$var integer 32 Q* largeout $end
$var integer 32 R* i $end
$var wire 1 S* data_out_1c [15] $end
$var wire 1 T* data_out_1c [14] $end
$var wire 1 U* data_out_1c [13] $end
$var wire 1 V* data_out_1c [12] $end
$var wire 1 W* data_out_1c [11] $end
$var wire 1 X* data_out_1c [10] $end
$var wire 1 Y* data_out_1c [9] $end
$var wire 1 Z* data_out_1c [8] $end
$var wire 1 [* data_out_1c [7] $end
$var wire 1 \* data_out_1c [6] $end
$var wire 1 ]* data_out_1c [5] $end
$var wire 1 ^* data_out_1c [4] $end
$var wire 1 _* data_out_1c [3] $end
$var wire 1 `* data_out_1c [2] $end
$var wire 1 a* data_out_1c [1] $end
$var wire 1 b* data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 H* q $end
$var wire 1 G* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c* state $end
$upscope $end

$scope module ff1 $end
$var wire 1 L* q $end
$var wire 1 K* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d* state $end
$upscope $end

$scope module ff2 $end
$var wire 1 I* q $end
$var wire 1 H* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e* state $end
$upscope $end

$scope module ff3 $end
$var wire 1 M* q $end
$var wire 1 L* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f* state $end
$upscope $end

$scope module ff4 $end
$var wire 1 J* q $end
$var wire 1 I* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g* state $end
$upscope $end

$scope module ff5 $end
$var wire 1 N* q $end
$var wire 1 M* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h* state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 ** q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i* state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 +* q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j* state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 ,* q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k* state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 -* q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l* state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 .* q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m* state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 /* q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n* state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 0* q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o* state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 1* q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p* state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 2* q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q* state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 3* q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r* state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 4* q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s* state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 5* q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t* state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 6* q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u* state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 7* q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v* state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 8* q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w* state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 9* q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x* state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 :* q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y* state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 ;* q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z* state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 <* q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {* state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 =* q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |* state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 >* q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }* state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 ?* q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~* state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 @* q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !+ state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 A* q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 B* q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 C* q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 D* q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 E* q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 F* q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 "& q $end
$var wire 1 S* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 #& q $end
$var wire 1 T* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 $& q $end
$var wire 1 U* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 %& q $end
$var wire 1 V* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 && q $end
$var wire 1 W* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 '& q $end
$var wire 1 X* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 (& q $end
$var wire 1 Y* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 )& q $end
$var wire 1 Z* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 *& q $end
$var wire 1 [* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0+ state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 +& q $end
$var wire 1 \* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1+ state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 ,& q $end
$var wire 1 ]* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2+ state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 -& q $end
$var wire 1 ^* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3+ state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 .& q $end
$var wire 1 _* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4+ state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 /& q $end
$var wire 1 `* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5+ state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 0& q $end
$var wire 1 a* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6+ state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 1& q $end
$var wire 1 b* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7+ state $end
$upscope $end
$upscope $end

$scope module b0[3] $end
$var wire 1 >& q $end
$var wire 1 :& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8+ state $end
$upscope $end

$scope module b0[2] $end
$var wire 1 ?& q $end
$var wire 1 ;& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9+ state $end
$upscope $end

$scope module b0[1] $end
$var wire 1 @& q $end
$var wire 1 <& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :+ state $end
$upscope $end

$scope module b0[0] $end
$var wire 1 A& q $end
$var wire 1 =& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;+ state $end
$upscope $end

$scope module b1[3] $end
$var wire 1 B& q $end
$var wire 1 >& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <+ state $end
$upscope $end

$scope module b1[2] $end
$var wire 1 C& q $end
$var wire 1 ?& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =+ state $end
$upscope $end

$scope module b1[1] $end
$var wire 1 D& q $end
$var wire 1 @& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >+ state $end
$upscope $end

$scope module b1[0] $end
$var wire 1 E& q $end
$var wire 1 A& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?+ state $end
$upscope $end

$scope module b2[3] $end
$var wire 1 F& q $end
$var wire 1 B& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @+ state $end
$upscope $end

$scope module b2[2] $end
$var wire 1 G& q $end
$var wire 1 C& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A+ state $end
$upscope $end

$scope module b2[1] $end
$var wire 1 H& q $end
$var wire 1 D& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B+ state $end
$upscope $end

$scope module b2[0] $end
$var wire 1 I& q $end
$var wire 1 E& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C+ state $end
$upscope $end
$upscope $end

$scope module cache_controller $end
$var parameter 5 D+ IDLE $end
$var parameter 5 E+ COMPARE_RD $end
$var parameter 5 F+ COMPARE_WR $end
$var parameter 5 G+ ALLOC_0 $end
$var parameter 5 H+ ALLOC_1 $end
$var parameter 5 I+ ALLOC_2 $end
$var parameter 5 J+ ALLOC_3 $end
$var parameter 5 K+ ALLOC_4 $end
$var parameter 5 L+ ALLOC_5 $end
$var parameter 5 M+ ALLOC_6 $end
$var parameter 5 N+ WB_0 $end
$var parameter 5 O+ WB_1 $end
$var parameter 5 P+ WB_2 $end
$var parameter 5 Q+ WB_3 $end
$var parameter 5 R+ HIT_DONE $end
$var parameter 5 S+ MISS_DONE $end
$var parameter 5 T+ ERROR $end
$var reg 1 U+ comp $end
$var reg 1 V+ cache_write $end
$var reg 3 W+ cache_offset [2:0] $end
$var reg 1 X+ cache_data_in_select $end
$var reg 1 Y+ cache_offset_select $end
$var reg 1 Z+ tag_select $end
$var reg 3 [+ mem_offset [2:0] $end
$var reg 1 \+ mem_wr $end
$var reg 1 ]+ mem_rd $end
$var reg 1 ^+ cache_hit $end
$var reg 1 _+ stall_out $end
$var reg 1 `+ done $end
$var reg 1 a+ valid_in $end
$var reg 1 b+ err $end
$var reg 1 c+ enable $end
$var reg 1 d+ flip_victimway $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 g" valid $end
$var wire 1 f" dirty $end
$var wire 1 1" mem_stall $end
$var wire 1 e" hit $end
$var wire 1 e+ curr_state [4] $end
$var wire 1 f+ curr_state [3] $end
$var wire 1 g+ curr_state [2] $end
$var wire 1 h+ curr_state [1] $end
$var wire 1 i+ curr_state [0] $end
$var reg 5 j+ next_state [4:0] $end

$scope module statereg[4] $end
$var wire 1 e+ q $end
$var wire 1 k+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l+ state $end
$upscope $end

$scope module statereg[3] $end
$var wire 1 f+ q $end
$var wire 1 m+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n+ state $end
$upscope $end

$scope module statereg[2] $end
$var wire 1 g+ q $end
$var wire 1 o+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p+ state $end
$upscope $end

$scope module statereg[1] $end
$var wire 1 h+ q $end
$var wire 1 q+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r+ state $end
$upscope $end

$scope module statereg[0] $end
$var wire 1 i+ q $end
$var wire 1 s+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t+ state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module ref $end
$var wire 1 u+ Addr [15] $end
$var wire 1 v+ Addr [14] $end
$var wire 1 w+ Addr [13] $end
$var wire 1 x+ Addr [12] $end
$var wire 1 y+ Addr [11] $end
$var wire 1 z+ Addr [10] $end
$var wire 1 {+ Addr [9] $end
$var wire 1 |+ Addr [8] $end
$var wire 1 }+ Addr [7] $end
$var wire 1 ~+ Addr [6] $end
$var wire 1 !, Addr [5] $end
$var wire 1 ", Addr [4] $end
$var wire 1 #, Addr [3] $end
$var wire 1 $, Addr [2] $end
$var wire 1 %, Addr [1] $end
$var wire 1 &, Addr [0] $end
$var wire 1 ', DataIn [15] $end
$var wire 1 (, DataIn [14] $end
$var wire 1 ), DataIn [13] $end
$var wire 1 *, DataIn [12] $end
$var wire 1 +, DataIn [11] $end
$var wire 1 ,, DataIn [10] $end
$var wire 1 -, DataIn [9] $end
$var wire 1 ., DataIn [8] $end
$var wire 1 /, DataIn [7] $end
$var wire 1 0, DataIn [6] $end
$var wire 1 1, DataIn [5] $end
$var wire 1 2, DataIn [4] $end
$var wire 1 3, DataIn [3] $end
$var wire 1 4, DataIn [2] $end
$var wire 1 5, DataIn [1] $end
$var wire 1 6, DataIn [0] $end
$var wire 1 7, Rd $end
$var wire 1 8, Wr $end
$var wire 1 9, clk $end
$var wire 1 :, rst $end
$var reg 16 ;, DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 <, loaded $end
$var integer 32 =, i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
b0 4
05
06
b110110101100101011011010010111001100001011001000110010001110010 7
1!!
1"!
b0 %!
0&!
1'!
0(!
0)!
0i"
1N"
xO"
1L&
b1 M&
0*'
0+'
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0,'
0-'
0.'
0/'
1_'
b1 `'
0=(
0>(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0?(
0@(
0A(
0B(
1r(
b1 s(
0P)
0Q)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0R)
0S)
0T)
0U)
1'*
b1 (*
0c*
0d*
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0'+
0&+
0%+
0$+
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
0v*
07+
06+
05+
04+
03+
02+
01+
00+
0/+
0.+
0-+
0,+
0++
0*+
0)+
0(+
0e*
0f*
0g*
0h*
0;+
0:+
09+
08+
0?+
0>+
0=+
0<+
0C+
0B+
0A+
0@+
0U+
0V+
b0 W+
0X+
0Y+
0Z+
b0 [+
0\+
0]+
0^+
1_+
0`+
0a+
0b+
1c+
0d+
b0 j+
0t+
0r+
0p+
0n+
0l+
bx ;,
1<,
0N
1R
bx V
b0 X
b1 $!
b1 j"
b10000 x#
b10000 {#
b10000 ~#
b10000 #$
b101 &$
b1 )$
b11 .$
b10000 <%
b10000 ?%
b10000 B%
b10000 E%
b101 H%
b1 K%
b0 D+
b1 E+
b10 F+
b11 G+
b100 H+
b101 I+
b110 J+
b111 K+
b1000 L+
b1001 M+
b1010 N+
b1011 O+
b1100 P+
b1101 Q+
b1110 R+
b1111 S+
b10000 T+
b1 #!
bx y#
b100000000 z#
bx |#
b100000000 }#
bx !$
b100000000 "$
bx $$
b100000000 %$
bx '$
b100000000 ($
bx *$
b100000000 +$
bx ,$
b100000000 -$
bx =%
b100000000 >%
bx @%
b100000000 A%
bx C%
b100000000 D%
bx F%
b100000000 G%
bx I%
b100000000 J%
bx L%
b100000000 M%
bx N%
b100000000 O%
bx u&
bx v&
b100000000000001 w&
bx *(
bx +(
b100000000000001 ,(
bx =)
bx >)
b100000000000001 ?)
bx P*
bx Q*
b100000000000001 R*
b10000000000000000 =,
b0 O
b0 P
b0 Q
b0 S
b0 T
bx U
bx W
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
01
12
18
19
0:
0|
1}
1~
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0<!
0;!
0:!
0=!
0>!
0?!
0D!
0C!
0B!
0A!
0@!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0U!
0V!
0W!
0X!
0]!
0\!
0[!
0Z!
0Y!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0n!
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
01"
x5"
x4"
x3"
x2"
06"
07"
08"
0;"
0:"
09"
0<"
0="
0>"
0A"
0@"
0?"
0B"
0C"
0D"
0E"
1F"
0G"
0H"
1I"
xJ"
xK"
0L"
0M"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0d"
0c"
0b"
0a"
0`"
0e"
0f"
0g"
0h"
0p"
0o"
0n"
1m"
0l"
1u"
0t"
0s"
1r"
0q"
0z"
1y"
0x"
1w"
0v"
1!#
1~"
0}"
1|"
0{"
0&#
0%#
1$#
1##
0"#
1+#
0*#
1)#
1(#
0'#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0l#
1m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
04$
03$
02$
11$
10$
19$
08$
07$
16$
15$
0>$
1=$
0<$
1;$
1:$
1C$
1B$
0A$
1@$
1?$
0H$
0G$
1F$
1E$
1D$
1M$
0L$
1K$
1J$
1I$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
00%
11%
02%
03%
04%
05%
06%
07%
08%
09%
0:%
0;%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
02&
03&
04&
05&
16&
07&
08&
09&
0=&
0<&
0;&
0:&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
0N&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
0l&
xm&
xn&
xo&
0p&
xq&
xr&
xs&
xt&
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
0a'
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
0!(
x"(
x#(
x$(
0%(
x&(
x'(
x((
x)(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
0t(
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
04)
x5)
x6)
x7)
08)
x9)
x:)
x;)
x<)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
0)*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
0G*
xH*
xI*
xJ*
0K*
xL*
xM*
xN*
xO*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xS*
xA&
x@&
x?&
x>&
xE&
xD&
xC&
xB&
xI&
xH&
xG&
xF&
xi+
xh+
xg+
xf+
xe+
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
08,
07,
06,
05,
04,
03,
02,
01,
00,
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
0',
0&,
0%,
0$,
0#,
0",
0!,
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
x/$
1k"
1&*
1%*
0q(
1p(
1^'
0]'
0K&
0J&
0s+
0q+
0o+
0m+
0k+
19,
1:,
$end
#1
0e+
0f+
0g+
0h+
0i+
0F&
0G&
0H&
0I&
0B&
0C&
0D&
0E&
0>&
0?&
0@&
0A&
0N*
0J*
0M*
0I*
0"&
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
00&
01&
07*
08*
09*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
0E*
0F*
0**
0+*
0,*
0-*
0.*
0/*
00*
01*
02*
03*
04*
05*
06*
0L*
0H*
0;)
07)
0:)
06)
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0$)
0%)
0&)
0')
0()
0))
0*)
0+)
0,)
0-)
0.)
0/)
00)
01)
02)
03)
0u(
0v(
0w(
0x(
0y(
0z(
0{(
0|(
0}(
0~(
0!)
0")
0#)
09)
05)
0((
0$(
0'(
0#(
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0o'
0p'
0q'
0r'
0s'
0t'
0u'
0v'
0w'
0x'
0y'
0z'
0{'
0|'
0}'
0~'
0b'
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0j'
0k'
0l'
0m'
0n'
0&(
0"(
0s&
0o&
0r&
0n&
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
0^%
0_%
0\&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0i&
0j&
0k&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0q&
0m&
0K"
0J"
0t&
0)(
0<)
0O*
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
05"
04"
03"
02"
0_+
0I"
0'!
02
#50
0!!
09,
08
0}
#100
1!!
19,
18
1}
b0 z#
b1 z#
b10 z#
b11 z#
b100 z#
b101 z#
b110 z#
b111 z#
b1000 z#
b1001 z#
b1010 z#
b1011 z#
b1100 z#
b1101 z#
b1110 z#
b1111 z#
b10000 z#
b10001 z#
b10010 z#
b10011 z#
b10100 z#
b10101 z#
b10110 z#
b10111 z#
b11000 z#
b11001 z#
b11010 z#
b11011 z#
b11100 z#
b11101 z#
b11110 z#
b11111 z#
b100000 z#
b100001 z#
b100010 z#
b100011 z#
b100100 z#
b100101 z#
b100110 z#
b100111 z#
b101000 z#
b101001 z#
b101010 z#
b101011 z#
b101100 z#
b101101 z#
b101110 z#
b101111 z#
b110000 z#
b110001 z#
b110010 z#
b110011 z#
b110100 z#
b110101 z#
b110110 z#
b110111 z#
b111000 z#
b111001 z#
b111010 z#
b111011 z#
b111100 z#
b111101 z#
b111110 z#
b111111 z#
b1000000 z#
b1000001 z#
b1000010 z#
b1000011 z#
b1000100 z#
b1000101 z#
b1000110 z#
b1000111 z#
b1001000 z#
b1001001 z#
b1001010 z#
b1001011 z#
b1001100 z#
b1001101 z#
b1001110 z#
b1001111 z#
b1010000 z#
b1010001 z#
b1010010 z#
b1010011 z#
b1010100 z#
b1010101 z#
b1010110 z#
b1010111 z#
b1011000 z#
b1011001 z#
b1011010 z#
b1011011 z#
b1011100 z#
b1011101 z#
b1011110 z#
b1011111 z#
b1100000 z#
b1100001 z#
b1100010 z#
b1100011 z#
b1100100 z#
b1100101 z#
b1100110 z#
b1100111 z#
b1101000 z#
b1101001 z#
b1101010 z#
b1101011 z#
b1101100 z#
b1101101 z#
b1101110 z#
b1101111 z#
b1110000 z#
b1110001 z#
b1110010 z#
b1110011 z#
b1110100 z#
b1110101 z#
b1110110 z#
b1110111 z#
b1111000 z#
b1111001 z#
b1111010 z#
b1111011 z#
b1111100 z#
b1111101 z#
b1111110 z#
b1111111 z#
b10000000 z#
b10000001 z#
b10000010 z#
b10000011 z#
b10000100 z#
b10000101 z#
b10000110 z#
b10000111 z#
b10001000 z#
b10001001 z#
b10001010 z#
b10001011 z#
b10001100 z#
b10001101 z#
b10001110 z#
b10001111 z#
b10010000 z#
b10010001 z#
b10010010 z#
b10010011 z#
b10010100 z#
b10010101 z#
b10010110 z#
b10010111 z#
b10011000 z#
b10011001 z#
b10011010 z#
b10011011 z#
b10011100 z#
b10011101 z#
b10011110 z#
b10011111 z#
b10100000 z#
b10100001 z#
b10100010 z#
b10100011 z#
b10100100 z#
b10100101 z#
b10100110 z#
b10100111 z#
b10101000 z#
b10101001 z#
b10101010 z#
b10101011 z#
b10101100 z#
b10101101 z#
b10101110 z#
b10101111 z#
b10110000 z#
b10110001 z#
b10110010 z#
b10110011 z#
b10110100 z#
b10110101 z#
b10110110 z#
b10110111 z#
b10111000 z#
b10111001 z#
b10111010 z#
b10111011 z#
b10111100 z#
b10111101 z#
b10111110 z#
b10111111 z#
b11000000 z#
b11000001 z#
b11000010 z#
b11000011 z#
b11000100 z#
b11000101 z#
b11000110 z#
b11000111 z#
b11001000 z#
b11001001 z#
b11001010 z#
b11001011 z#
b11001100 z#
b11001101 z#
b11001110 z#
b11001111 z#
b11010000 z#
b11010001 z#
b11010010 z#
b11010011 z#
b11010100 z#
b11010101 z#
b11010110 z#
b11010111 z#
b11011000 z#
b11011001 z#
b11011010 z#
b11011011 z#
b11011100 z#
b11011101 z#
b11011110 z#
b11011111 z#
b11100000 z#
b11100001 z#
b11100010 z#
b11100011 z#
b11100100 z#
b11100101 z#
b11100110 z#
b11100111 z#
b11101000 z#
b11101001 z#
b11101010 z#
b11101011 z#
b11101100 z#
b11101101 z#
b11101110 z#
b11101111 z#
b11110000 z#
b11110001 z#
b11110010 z#
b11110011 z#
b11110100 z#
b11110101 z#
b11110110 z#
b11110111 z#
b11111000 z#
b11111001 z#
b11111010 z#
b11111011 z#
b11111100 z#
b11111101 z#
b11111110 z#
b11111111 z#
b100000000 z#
b0 }#
b1 }#
b10 }#
b11 }#
b100 }#
b101 }#
b110 }#
b111 }#
b1000 }#
b1001 }#
b1010 }#
b1011 }#
b1100 }#
b1101 }#
b1110 }#
b1111 }#
b10000 }#
b10001 }#
b10010 }#
b10011 }#
b10100 }#
b10101 }#
b10110 }#
b10111 }#
b11000 }#
b11001 }#
b11010 }#
b11011 }#
b11100 }#
b11101 }#
b11110 }#
b11111 }#
b100000 }#
b100001 }#
b100010 }#
b100011 }#
b100100 }#
b100101 }#
b100110 }#
b100111 }#
b101000 }#
b101001 }#
b101010 }#
b101011 }#
b101100 }#
b101101 }#
b101110 }#
b101111 }#
b110000 }#
b110001 }#
b110010 }#
b110011 }#
b110100 }#
b110101 }#
b110110 }#
b110111 }#
b111000 }#
b111001 }#
b111010 }#
b111011 }#
b111100 }#
b111101 }#
b111110 }#
b111111 }#
b1000000 }#
b1000001 }#
b1000010 }#
b1000011 }#
b1000100 }#
b1000101 }#
b1000110 }#
b1000111 }#
b1001000 }#
b1001001 }#
b1001010 }#
b1001011 }#
b1001100 }#
b1001101 }#
b1001110 }#
b1001111 }#
b1010000 }#
b1010001 }#
b1010010 }#
b1010011 }#
b1010100 }#
b1010101 }#
b1010110 }#
b1010111 }#
b1011000 }#
b1011001 }#
b1011010 }#
b1011011 }#
b1011100 }#
b1011101 }#
b1011110 }#
b1011111 }#
b1100000 }#
b1100001 }#
b1100010 }#
b1100011 }#
b1100100 }#
b1100101 }#
b1100110 }#
b1100111 }#
b1101000 }#
b1101001 }#
b1101010 }#
b1101011 }#
b1101100 }#
b1101101 }#
b1101110 }#
b1101111 }#
b1110000 }#
b1110001 }#
b1110010 }#
b1110011 }#
b1110100 }#
b1110101 }#
b1110110 }#
b1110111 }#
b1111000 }#
b1111001 }#
b1111010 }#
b1111011 }#
b1111100 }#
b1111101 }#
b1111110 }#
b1111111 }#
b10000000 }#
b10000001 }#
b10000010 }#
b10000011 }#
b10000100 }#
b10000101 }#
b10000110 }#
b10000111 }#
b10001000 }#
b10001001 }#
b10001010 }#
b10001011 }#
b10001100 }#
b10001101 }#
b10001110 }#
b10001111 }#
b10010000 }#
b10010001 }#
b10010010 }#
b10010011 }#
b10010100 }#
b10010101 }#
b10010110 }#
b10010111 }#
b10011000 }#
b10011001 }#
b10011010 }#
b10011011 }#
b10011100 }#
b10011101 }#
b10011110 }#
b10011111 }#
b10100000 }#
b10100001 }#
b10100010 }#
b10100011 }#
b10100100 }#
b10100101 }#
b10100110 }#
b10100111 }#
b10101000 }#
b10101001 }#
b10101010 }#
b10101011 }#
b10101100 }#
b10101101 }#
b10101110 }#
b10101111 }#
b10110000 }#
b10110001 }#
b10110010 }#
b10110011 }#
b10110100 }#
b10110101 }#
b10110110 }#
b10110111 }#
b10111000 }#
b10111001 }#
b10111010 }#
b10111011 }#
b10111100 }#
b10111101 }#
b10111110 }#
b10111111 }#
b11000000 }#
b11000001 }#
b11000010 }#
b11000011 }#
b11000100 }#
b11000101 }#
b11000110 }#
b11000111 }#
b11001000 }#
b11001001 }#
b11001010 }#
b11001011 }#
b11001100 }#
b11001101 }#
b11001110 }#
b11001111 }#
b11010000 }#
b11010001 }#
b11010010 }#
b11010011 }#
b11010100 }#
b11010101 }#
b11010110 }#
b11010111 }#
b11011000 }#
b11011001 }#
b11011010 }#
b11011011 }#
b11011100 }#
b11011101 }#
b11011110 }#
b11011111 }#
b11100000 }#
b11100001 }#
b11100010 }#
b11100011 }#
b11100100 }#
b11100101 }#
b11100110 }#
b11100111 }#
b11101000 }#
b11101001 }#
b11101010 }#
b11101011 }#
b11101100 }#
b11101101 }#
b11101110 }#
b11101111 }#
b11110000 }#
b11110001 }#
b11110010 }#
b11110011 }#
b11110100 }#
b11110101 }#
b11110110 }#
b11110111 }#
b11111000 }#
b11111001 }#
b11111010 }#
b11111011 }#
b11111100 }#
b11111101 }#
b11111110 }#
b11111111 }#
b100000000 }#
b0 "$
b1 "$
b10 "$
b11 "$
b100 "$
b101 "$
b110 "$
b111 "$
b1000 "$
b1001 "$
b1010 "$
b1011 "$
b1100 "$
b1101 "$
b1110 "$
b1111 "$
b10000 "$
b10001 "$
b10010 "$
b10011 "$
b10100 "$
b10101 "$
b10110 "$
b10111 "$
b11000 "$
b11001 "$
b11010 "$
b11011 "$
b11100 "$
b11101 "$
b11110 "$
b11111 "$
b100000 "$
b100001 "$
b100010 "$
b100011 "$
b100100 "$
b100101 "$
b100110 "$
b100111 "$
b101000 "$
b101001 "$
b101010 "$
b101011 "$
b101100 "$
b101101 "$
b101110 "$
b101111 "$
b110000 "$
b110001 "$
b110010 "$
b110011 "$
b110100 "$
b110101 "$
b110110 "$
b110111 "$
b111000 "$
b111001 "$
b111010 "$
b111011 "$
b111100 "$
b111101 "$
b111110 "$
b111111 "$
b1000000 "$
b1000001 "$
b1000010 "$
b1000011 "$
b1000100 "$
b1000101 "$
b1000110 "$
b1000111 "$
b1001000 "$
b1001001 "$
b1001010 "$
b1001011 "$
b1001100 "$
b1001101 "$
b1001110 "$
b1001111 "$
b1010000 "$
b1010001 "$
b1010010 "$
b1010011 "$
b1010100 "$
b1010101 "$
b1010110 "$
b1010111 "$
b1011000 "$
b1011001 "$
b1011010 "$
b1011011 "$
b1011100 "$
b1011101 "$
b1011110 "$
b1011111 "$
b1100000 "$
b1100001 "$
b1100010 "$
b1100011 "$
b1100100 "$
b1100101 "$
b1100110 "$
b1100111 "$
b1101000 "$
b1101001 "$
b1101010 "$
b1101011 "$
b1101100 "$
b1101101 "$
b1101110 "$
b1101111 "$
b1110000 "$
b1110001 "$
b1110010 "$
b1110011 "$
b1110100 "$
b1110101 "$
b1110110 "$
b1110111 "$
b1111000 "$
b1111001 "$
b1111010 "$
b1111011 "$
b1111100 "$
b1111101 "$
b1111110 "$
b1111111 "$
b10000000 "$
b10000001 "$
b10000010 "$
b10000011 "$
b10000100 "$
b10000101 "$
b10000110 "$
b10000111 "$
b10001000 "$
b10001001 "$
b10001010 "$
b10001011 "$
b10001100 "$
b10001101 "$
b10001110 "$
b10001111 "$
b10010000 "$
b10010001 "$
b10010010 "$
b10010011 "$
b10010100 "$
b10010101 "$
b10010110 "$
b10010111 "$
b10011000 "$
b10011001 "$
b10011010 "$
b10011011 "$
b10011100 "$
b10011101 "$
b10011110 "$
b10011111 "$
b10100000 "$
b10100001 "$
b10100010 "$
b10100011 "$
b10100100 "$
b10100101 "$
b10100110 "$
b10100111 "$
b10101000 "$
b10101001 "$
b10101010 "$
b10101011 "$
b10101100 "$
b10101101 "$
b10101110 "$
b10101111 "$
b10110000 "$
b10110001 "$
b10110010 "$
b10110011 "$
b10110100 "$
b10110101 "$
b10110110 "$
b10110111 "$
b10111000 "$
b10111001 "$
b10111010 "$
b10111011 "$
b10111100 "$
b10111101 "$
b10111110 "$
b10111111 "$
b11000000 "$
b11000001 "$
b11000010 "$
b11000011 "$
b11000100 "$
b11000101 "$
b11000110 "$
b11000111 "$
b11001000 "$
b11001001 "$
b11001010 "$
b11001011 "$
b11001100 "$
b11001101 "$
b11001110 "$
b11001111 "$
b11010000 "$
b11010001 "$
b11010010 "$
b11010011 "$
b11010100 "$
b11010101 "$
b11010110 "$
b11010111 "$
b11011000 "$
b11011001 "$
b11011010 "$
b11011011 "$
b11011100 "$
b11011101 "$
b11011110 "$
b11011111 "$
b11100000 "$
b11100001 "$
b11100010 "$
b11100011 "$
b11100100 "$
b11100101 "$
b11100110 "$
b11100111 "$
b11101000 "$
b11101001 "$
b11101010 "$
b11101011 "$
b11101100 "$
b11101101 "$
b11101110 "$
b11101111 "$
b11110000 "$
b11110001 "$
b11110010 "$
b11110011 "$
b11110100 "$
b11110101 "$
b11110110 "$
b11110111 "$
b11111000 "$
b11111001 "$
b11111010 "$
b11111011 "$
b11111100 "$
b11111101 "$
b11111110 "$
b11111111 "$
b100000000 "$
b0 %$
b1 %$
b10 %$
b11 %$
b100 %$
b101 %$
b110 %$
b111 %$
b1000 %$
b1001 %$
b1010 %$
b1011 %$
b1100 %$
b1101 %$
b1110 %$
b1111 %$
b10000 %$
b10001 %$
b10010 %$
b10011 %$
b10100 %$
b10101 %$
b10110 %$
b10111 %$
b11000 %$
b11001 %$
b11010 %$
b11011 %$
b11100 %$
b11101 %$
b11110 %$
b11111 %$
b100000 %$
b100001 %$
b100010 %$
b100011 %$
b100100 %$
b100101 %$
b100110 %$
b100111 %$
b101000 %$
b101001 %$
b101010 %$
b101011 %$
b101100 %$
b101101 %$
b101110 %$
b101111 %$
b110000 %$
b110001 %$
b110010 %$
b110011 %$
b110100 %$
b110101 %$
b110110 %$
b110111 %$
b111000 %$
b111001 %$
b111010 %$
b111011 %$
b111100 %$
b111101 %$
b111110 %$
b111111 %$
b1000000 %$
b1000001 %$
b1000010 %$
b1000011 %$
b1000100 %$
b1000101 %$
b1000110 %$
b1000111 %$
b1001000 %$
b1001001 %$
b1001010 %$
b1001011 %$
b1001100 %$
b1001101 %$
b1001110 %$
b1001111 %$
b1010000 %$
b1010001 %$
b1010010 %$
b1010011 %$
b1010100 %$
b1010101 %$
b1010110 %$
b1010111 %$
b1011000 %$
b1011001 %$
b1011010 %$
b1011011 %$
b1011100 %$
b1011101 %$
b1011110 %$
b1011111 %$
b1100000 %$
b1100001 %$
b1100010 %$
b1100011 %$
b1100100 %$
b1100101 %$
b1100110 %$
b1100111 %$
b1101000 %$
b1101001 %$
b1101010 %$
b1101011 %$
b1101100 %$
b1101101 %$
b1101110 %$
b1101111 %$
b1110000 %$
b1110001 %$
b1110010 %$
b1110011 %$
b1110100 %$
b1110101 %$
b1110110 %$
b1110111 %$
b1111000 %$
b1111001 %$
b1111010 %$
b1111011 %$
b1111100 %$
b1111101 %$
b1111110 %$
b1111111 %$
b10000000 %$
b10000001 %$
b10000010 %$
b10000011 %$
b10000100 %$
b10000101 %$
b10000110 %$
b10000111 %$
b10001000 %$
b10001001 %$
b10001010 %$
b10001011 %$
b10001100 %$
b10001101 %$
b10001110 %$
b10001111 %$
b10010000 %$
b10010001 %$
b10010010 %$
b10010011 %$
b10010100 %$
b10010101 %$
b10010110 %$
b10010111 %$
b10011000 %$
b10011001 %$
b10011010 %$
b10011011 %$
b10011100 %$
b10011101 %$
b10011110 %$
b10011111 %$
b10100000 %$
b10100001 %$
b10100010 %$
b10100011 %$
b10100100 %$
b10100101 %$
b10100110 %$
b10100111 %$
b10101000 %$
b10101001 %$
b10101010 %$
b10101011 %$
b10101100 %$
b10101101 %$
b10101110 %$
b10101111 %$
b10110000 %$
b10110001 %$
b10110010 %$
b10110011 %$
b10110100 %$
b10110101 %$
b10110110 %$
b10110111 %$
b10111000 %$
b10111001 %$
b10111010 %$
b10111011 %$
b10111100 %$
b10111101 %$
b10111110 %$
b10111111 %$
b11000000 %$
b11000001 %$
b11000010 %$
b11000011 %$
b11000100 %$
b11000101 %$
b11000110 %$
b11000111 %$
b11001000 %$
b11001001 %$
b11001010 %$
b11001011 %$
b11001100 %$
b11001101 %$
b11001110 %$
b11001111 %$
b11010000 %$
b11010001 %$
b11010010 %$
b11010011 %$
b11010100 %$
b11010101 %$
b11010110 %$
b11010111 %$
b11011000 %$
b11011001 %$
b11011010 %$
b11011011 %$
b11011100 %$
b11011101 %$
b11011110 %$
b11011111 %$
b11100000 %$
b11100001 %$
b11100010 %$
b11100011 %$
b11100100 %$
b11100101 %$
b11100110 %$
b11100111 %$
b11101000 %$
b11101001 %$
b11101010 %$
b11101011 %$
b11101100 %$
b11101101 %$
b11101110 %$
b11101111 %$
b11110000 %$
b11110001 %$
b11110010 %$
b11110011 %$
b11110100 %$
b11110101 %$
b11110110 %$
b11110111 %$
b11111000 %$
b11111001 %$
b11111010 %$
b11111011 %$
b11111100 %$
b11111101 %$
b11111110 %$
b11111111 %$
b100000000 %$
b0 ($
b1 ($
b10 ($
b11 ($
b100 ($
b101 ($
b110 ($
b111 ($
b1000 ($
b1001 ($
b1010 ($
b1011 ($
b1100 ($
b1101 ($
b1110 ($
b1111 ($
b10000 ($
b10001 ($
b10010 ($
b10011 ($
b10100 ($
b10101 ($
b10110 ($
b10111 ($
b11000 ($
b11001 ($
b11010 ($
b11011 ($
b11100 ($
b11101 ($
b11110 ($
b11111 ($
b100000 ($
b100001 ($
b100010 ($
b100011 ($
b100100 ($
b100101 ($
b100110 ($
b100111 ($
b101000 ($
b101001 ($
b101010 ($
b101011 ($
b101100 ($
b101101 ($
b101110 ($
b101111 ($
b110000 ($
b110001 ($
b110010 ($
b110011 ($
b110100 ($
b110101 ($
b110110 ($
b110111 ($
b111000 ($
b111001 ($
b111010 ($
b111011 ($
b111100 ($
b111101 ($
b111110 ($
b111111 ($
b1000000 ($
b1000001 ($
b1000010 ($
b1000011 ($
b1000100 ($
b1000101 ($
b1000110 ($
b1000111 ($
b1001000 ($
b1001001 ($
b1001010 ($
b1001011 ($
b1001100 ($
b1001101 ($
b1001110 ($
b1001111 ($
b1010000 ($
b1010001 ($
b1010010 ($
b1010011 ($
b1010100 ($
b1010101 ($
b1010110 ($
b1010111 ($
b1011000 ($
b1011001 ($
b1011010 ($
b1011011 ($
b1011100 ($
b1011101 ($
b1011110 ($
b1011111 ($
b1100000 ($
b1100001 ($
b1100010 ($
b1100011 ($
b1100100 ($
b1100101 ($
b1100110 ($
b1100111 ($
b1101000 ($
b1101001 ($
b1101010 ($
b1101011 ($
b1101100 ($
b1101101 ($
b1101110 ($
b1101111 ($
b1110000 ($
b1110001 ($
b1110010 ($
b1110011 ($
b1110100 ($
b1110101 ($
b1110110 ($
b1110111 ($
b1111000 ($
b1111001 ($
b1111010 ($
b1111011 ($
b1111100 ($
b1111101 ($
b1111110 ($
b1111111 ($
b10000000 ($
b10000001 ($
b10000010 ($
b10000011 ($
b10000100 ($
b10000101 ($
b10000110 ($
b10000111 ($
b10001000 ($
b10001001 ($
b10001010 ($
b10001011 ($
b10001100 ($
b10001101 ($
b10001110 ($
b10001111 ($
b10010000 ($
b10010001 ($
b10010010 ($
b10010011 ($
b10010100 ($
b10010101 ($
b10010110 ($
b10010111 ($
b10011000 ($
b10011001 ($
b10011010 ($
b10011011 ($
b10011100 ($
b10011101 ($
b10011110 ($
b10011111 ($
b10100000 ($
b10100001 ($
b10100010 ($
b10100011 ($
b10100100 ($
b10100101 ($
b10100110 ($
b10100111 ($
b10101000 ($
b10101001 ($
b10101010 ($
b10101011 ($
b10101100 ($
b10101101 ($
b10101110 ($
b10101111 ($
b10110000 ($
b10110001 ($
b10110010 ($
b10110011 ($
b10110100 ($
b10110101 ($
b10110110 ($
b10110111 ($
b10111000 ($
b10111001 ($
b10111010 ($
b10111011 ($
b10111100 ($
b10111101 ($
b10111110 ($
b10111111 ($
b11000000 ($
b11000001 ($
b11000010 ($
b11000011 ($
b11000100 ($
b11000101 ($
b11000110 ($
b11000111 ($
b11001000 ($
b11001001 ($
b11001010 ($
b11001011 ($
b11001100 ($
b11001101 ($
b11001110 ($
b11001111 ($
b11010000 ($
b11010001 ($
b11010010 ($
b11010011 ($
b11010100 ($
b11010101 ($
b11010110 ($
b11010111 ($
b11011000 ($
b11011001 ($
b11011010 ($
b11011011 ($
b11011100 ($
b11011101 ($
b11011110 ($
b11011111 ($
b11100000 ($
b11100001 ($
b11100010 ($
b11100011 ($
b11100100 ($
b11100101 ($
b11100110 ($
b11100111 ($
b11101000 ($
b11101001 ($
b11101010 ($
b11101011 ($
b11101100 ($
b11101101 ($
b11101110 ($
b11101111 ($
b11110000 ($
b11110001 ($
b11110010 ($
b11110011 ($
b11110100 ($
b11110101 ($
b11110110 ($
b11110111 ($
b11111000 ($
b11111001 ($
b11111010 ($
b11111011 ($
b11111100 ($
b11111101 ($
b11111110 ($
b11111111 ($
b100000000 ($
b0 +$
b1 +$
b10 +$
b11 +$
b100 +$
b101 +$
b110 +$
b111 +$
b1000 +$
b1001 +$
b1010 +$
b1011 +$
b1100 +$
b1101 +$
b1110 +$
b1111 +$
b10000 +$
b10001 +$
b10010 +$
b10011 +$
b10100 +$
b10101 +$
b10110 +$
b10111 +$
b11000 +$
b11001 +$
b11010 +$
b11011 +$
b11100 +$
b11101 +$
b11110 +$
b11111 +$
b100000 +$
b100001 +$
b100010 +$
b100011 +$
b100100 +$
b100101 +$
b100110 +$
b100111 +$
b101000 +$
b101001 +$
b101010 +$
b101011 +$
b101100 +$
b101101 +$
b101110 +$
b101111 +$
b110000 +$
b110001 +$
b110010 +$
b110011 +$
b110100 +$
b110101 +$
b110110 +$
b110111 +$
b111000 +$
b111001 +$
b111010 +$
b111011 +$
b111100 +$
b111101 +$
b111110 +$
b111111 +$
b1000000 +$
b1000001 +$
b1000010 +$
b1000011 +$
b1000100 +$
b1000101 +$
b1000110 +$
b1000111 +$
b1001000 +$
b1001001 +$
b1001010 +$
b1001011 +$
b1001100 +$
b1001101 +$
b1001110 +$
b1001111 +$
b1010000 +$
b1010001 +$
b1010010 +$
b1010011 +$
b1010100 +$
b1010101 +$
b1010110 +$
b1010111 +$
b1011000 +$
b1011001 +$
b1011010 +$
b1011011 +$
b1011100 +$
b1011101 +$
b1011110 +$
b1011111 +$
b1100000 +$
b1100001 +$
b1100010 +$
b1100011 +$
b1100100 +$
b1100101 +$
b1100110 +$
b1100111 +$
b1101000 +$
b1101001 +$
b1101010 +$
b1101011 +$
b1101100 +$
b1101101 +$
b1101110 +$
b1101111 +$
b1110000 +$
b1110001 +$
b1110010 +$
b1110011 +$
b1110100 +$
b1110101 +$
b1110110 +$
b1110111 +$
b1111000 +$
b1111001 +$
b1111010 +$
b1111011 +$
b1111100 +$
b1111101 +$
b1111110 +$
b1111111 +$
b10000000 +$
b10000001 +$
b10000010 +$
b10000011 +$
b10000100 +$
b10000101 +$
b10000110 +$
b10000111 +$
b10001000 +$
b10001001 +$
b10001010 +$
b10001011 +$
b10001100 +$
b10001101 +$
b10001110 +$
b10001111 +$
b10010000 +$
b10010001 +$
b10010010 +$
b10010011 +$
b10010100 +$
b10010101 +$
b10010110 +$
b10010111 +$
b10011000 +$
b10011001 +$
b10011010 +$
b10011011 +$
b10011100 +$
b10011101 +$
b10011110 +$
b10011111 +$
b10100000 +$
b10100001 +$
b10100010 +$
b10100011 +$
b10100100 +$
b10100101 +$
b10100110 +$
b10100111 +$
b10101000 +$
b10101001 +$
b10101010 +$
b10101011 +$
b10101100 +$
b10101101 +$
b10101110 +$
b10101111 +$
b10110000 +$
b10110001 +$
b10110010 +$
b10110011 +$
b10110100 +$
b10110101 +$
b10110110 +$
b10110111 +$
b10111000 +$
b10111001 +$
b10111010 +$
b10111011 +$
b10111100 +$
b10111101 +$
b10111110 +$
b10111111 +$
b11000000 +$
b11000001 +$
b11000010 +$
b11000011 +$
b11000100 +$
b11000101 +$
b11000110 +$
b11000111 +$
b11001000 +$
b11001001 +$
b11001010 +$
b11001011 +$
b11001100 +$
b11001101 +$
b11001110 +$
b11001111 +$
b11010000 +$
b11010001 +$
b11010010 +$
b11010011 +$
b11010100 +$
b11010101 +$
b11010110 +$
b11010111 +$
b11011000 +$
b11011001 +$
b11011010 +$
b11011011 +$
b11011100 +$
b11011101 +$
b11011110 +$
b11011111 +$
b11100000 +$
b11100001 +$
b11100010 +$
b11100011 +$
b11100100 +$
b11100101 +$
b11100110 +$
b11100111 +$
b11101000 +$
b11101001 +$
b11101010 +$
b11101011 +$
b11101100 +$
b11101101 +$
b11101110 +$
b11101111 +$
b11110000 +$
b11110001 +$
b11110010 +$
b11110011 +$
b11110100 +$
b11110101 +$
b11110110 +$
b11110111 +$
b11111000 +$
b11111001 +$
b11111010 +$
b11111011 +$
b11111100 +$
b11111101 +$
b11111110 +$
b11111111 +$
b100000000 +$
b0 -$
b1 -$
b10 -$
b11 -$
b100 -$
b101 -$
b110 -$
b111 -$
b1000 -$
b1001 -$
b1010 -$
b1011 -$
b1100 -$
b1101 -$
b1110 -$
b1111 -$
b10000 -$
b10001 -$
b10010 -$
b10011 -$
b10100 -$
b10101 -$
b10110 -$
b10111 -$
b11000 -$
b11001 -$
b11010 -$
b11011 -$
b11100 -$
b11101 -$
b11110 -$
b11111 -$
b100000 -$
b100001 -$
b100010 -$
b100011 -$
b100100 -$
b100101 -$
b100110 -$
b100111 -$
b101000 -$
b101001 -$
b101010 -$
b101011 -$
b101100 -$
b101101 -$
b101110 -$
b101111 -$
b110000 -$
b110001 -$
b110010 -$
b110011 -$
b110100 -$
b110101 -$
b110110 -$
b110111 -$
b111000 -$
b111001 -$
b111010 -$
b111011 -$
b111100 -$
b111101 -$
b111110 -$
b111111 -$
b1000000 -$
b1000001 -$
b1000010 -$
b1000011 -$
b1000100 -$
b1000101 -$
b1000110 -$
b1000111 -$
b1001000 -$
b1001001 -$
b1001010 -$
b1001011 -$
b1001100 -$
b1001101 -$
b1001110 -$
b1001111 -$
b1010000 -$
b1010001 -$
b1010010 -$
b1010011 -$
b1010100 -$
b1010101 -$
b1010110 -$
b1010111 -$
b1011000 -$
b1011001 -$
b1011010 -$
b1011011 -$
b1011100 -$
b1011101 -$
b1011110 -$
b1011111 -$
b1100000 -$
b1100001 -$
b1100010 -$
b1100011 -$
b1100100 -$
b1100101 -$
b1100110 -$
b1100111 -$
b1101000 -$
b1101001 -$
b1101010 -$
b1101011 -$
b1101100 -$
b1101101 -$
b1101110 -$
b1101111 -$
b1110000 -$
b1110001 -$
b1110010 -$
b1110011 -$
b1110100 -$
b1110101 -$
b1110110 -$
b1110111 -$
b1111000 -$
b1111001 -$
b1111010 -$
b1111011 -$
b1111100 -$
b1111101 -$
b1111110 -$
b1111111 -$
b10000000 -$
b10000001 -$
b10000010 -$
b10000011 -$
b10000100 -$
b10000101 -$
b10000110 -$
b10000111 -$
b10001000 -$
b10001001 -$
b10001010 -$
b10001011 -$
b10001100 -$
b10001101 -$
b10001110 -$
b10001111 -$
b10010000 -$
b10010001 -$
b10010010 -$
b10010011 -$
b10010100 -$
b10010101 -$
b10010110 -$
b10010111 -$
b10011000 -$
b10011001 -$
b10011010 -$
b10011011 -$
b10011100 -$
b10011101 -$
b10011110 -$
b10011111 -$
b10100000 -$
b10100001 -$
b10100010 -$
b10100011 -$
b10100100 -$
b10100101 -$
b10100110 -$
b10100111 -$
b10101000 -$
b10101001 -$
b10101010 -$
b10101011 -$
b10101100 -$
b10101101 -$
b10101110 -$
b10101111 -$
b10110000 -$
b10110001 -$
b10110010 -$
b10110011 -$
b10110100 -$
b10110101 -$
b10110110 -$
b10110111 -$
b10111000 -$
b10111001 -$
b10111010 -$
b10111011 -$
b10111100 -$
b10111101 -$
b10111110 -$
b10111111 -$
b11000000 -$
b11000001 -$
b11000010 -$
b11000011 -$
b11000100 -$
b11000101 -$
b11000110 -$
b11000111 -$
b11001000 -$
b11001001 -$
b11001010 -$
b11001011 -$
b11001100 -$
b11001101 -$
b11001110 -$
b11001111 -$
b11010000 -$
b11010001 -$
b11010010 -$
b11010011 -$
b11010100 -$
b11010101 -$
b11010110 -$
b11010111 -$
b11011000 -$
b11011001 -$
b11011010 -$
b11011011 -$
b11011100 -$
b11011101 -$
b11011110 -$
b11011111 -$
b11100000 -$
b11100001 -$
b11100010 -$
b11100011 -$
b11100100 -$
b11100101 -$
b11100110 -$
b11100111 -$
b11101000 -$
b11101001 -$
b11101010 -$
b11101011 -$
b11101100 -$
b11101101 -$
b11101110 -$
b11101111 -$
b11110000 -$
b11110001 -$
b11110010 -$
b11110011 -$
b11110100 -$
b11110101 -$
b11110110 -$
b11110111 -$
b11111000 -$
b11111001 -$
b11111010 -$
b11111011 -$
b11111100 -$
b11111101 -$
b11111110 -$
b11111111 -$
b100000000 -$
b0 >%
b1 >%
b10 >%
b11 >%
b100 >%
b101 >%
b110 >%
b111 >%
b1000 >%
b1001 >%
b1010 >%
b1011 >%
b1100 >%
b1101 >%
b1110 >%
b1111 >%
b10000 >%
b10001 >%
b10010 >%
b10011 >%
b10100 >%
b10101 >%
b10110 >%
b10111 >%
b11000 >%
b11001 >%
b11010 >%
b11011 >%
b11100 >%
b11101 >%
b11110 >%
b11111 >%
b100000 >%
b100001 >%
b100010 >%
b100011 >%
b100100 >%
b100101 >%
b100110 >%
b100111 >%
b101000 >%
b101001 >%
b101010 >%
b101011 >%
b101100 >%
b101101 >%
b101110 >%
b101111 >%
b110000 >%
b110001 >%
b110010 >%
b110011 >%
b110100 >%
b110101 >%
b110110 >%
b110111 >%
b111000 >%
b111001 >%
b111010 >%
b111011 >%
b111100 >%
b111101 >%
b111110 >%
b111111 >%
b1000000 >%
b1000001 >%
b1000010 >%
b1000011 >%
b1000100 >%
b1000101 >%
b1000110 >%
b1000111 >%
b1001000 >%
b1001001 >%
b1001010 >%
b1001011 >%
b1001100 >%
b1001101 >%
b1001110 >%
b1001111 >%
b1010000 >%
b1010001 >%
b1010010 >%
b1010011 >%
b1010100 >%
b1010101 >%
b1010110 >%
b1010111 >%
b1011000 >%
b1011001 >%
b1011010 >%
b1011011 >%
b1011100 >%
b1011101 >%
b1011110 >%
b1011111 >%
b1100000 >%
b1100001 >%
b1100010 >%
b1100011 >%
b1100100 >%
b1100101 >%
b1100110 >%
b1100111 >%
b1101000 >%
b1101001 >%
b1101010 >%
b1101011 >%
b1101100 >%
b1101101 >%
b1101110 >%
b1101111 >%
b1110000 >%
b1110001 >%
b1110010 >%
b1110011 >%
b1110100 >%
b1110101 >%
b1110110 >%
b1110111 >%
b1111000 >%
b1111001 >%
b1111010 >%
b1111011 >%
b1111100 >%
b1111101 >%
b1111110 >%
b1111111 >%
b10000000 >%
b10000001 >%
b10000010 >%
b10000011 >%
b10000100 >%
b10000101 >%
b10000110 >%
b10000111 >%
b10001000 >%
b10001001 >%
b10001010 >%
b10001011 >%
b10001100 >%
b10001101 >%
b10001110 >%
b10001111 >%
b10010000 >%
b10010001 >%
b10010010 >%
b10010011 >%
b10010100 >%
b10010101 >%
b10010110 >%
b10010111 >%
b10011000 >%
b10011001 >%
b10011010 >%
b10011011 >%
b10011100 >%
b10011101 >%
b10011110 >%
b10011111 >%
b10100000 >%
b10100001 >%
b10100010 >%
b10100011 >%
b10100100 >%
b10100101 >%
b10100110 >%
b10100111 >%
b10101000 >%
b10101001 >%
b10101010 >%
b10101011 >%
b10101100 >%
b10101101 >%
b10101110 >%
b10101111 >%
b10110000 >%
b10110001 >%
b10110010 >%
b10110011 >%
b10110100 >%
b10110101 >%
b10110110 >%
b10110111 >%
b10111000 >%
b10111001 >%
b10111010 >%
b10111011 >%
b10111100 >%
b10111101 >%
b10111110 >%
b10111111 >%
b11000000 >%
b11000001 >%
b11000010 >%
b11000011 >%
b11000100 >%
b11000101 >%
b11000110 >%
b11000111 >%
b11001000 >%
b11001001 >%
b11001010 >%
b11001011 >%
b11001100 >%
b11001101 >%
b11001110 >%
b11001111 >%
b11010000 >%
b11010001 >%
b11010010 >%
b11010011 >%
b11010100 >%
b11010101 >%
b11010110 >%
b11010111 >%
b11011000 >%
b11011001 >%
b11011010 >%
b11011011 >%
b11011100 >%
b11011101 >%
b11011110 >%
b11011111 >%
b11100000 >%
b11100001 >%
b11100010 >%
b11100011 >%
b11100100 >%
b11100101 >%
b11100110 >%
b11100111 >%
b11101000 >%
b11101001 >%
b11101010 >%
b11101011 >%
b11101100 >%
b11101101 >%
b11101110 >%
b11101111 >%
b11110000 >%
b11110001 >%
b11110010 >%
b11110011 >%
b11110100 >%
b11110101 >%
b11110110 >%
b11110111 >%
b11111000 >%
b11111001 >%
b11111010 >%
b11111011 >%
b11111100 >%
b11111101 >%
b11111110 >%
b11111111 >%
b100000000 >%
b0 A%
b1 A%
b10 A%
b11 A%
b100 A%
b101 A%
b110 A%
b111 A%
b1000 A%
b1001 A%
b1010 A%
b1011 A%
b1100 A%
b1101 A%
b1110 A%
b1111 A%
b10000 A%
b10001 A%
b10010 A%
b10011 A%
b10100 A%
b10101 A%
b10110 A%
b10111 A%
b11000 A%
b11001 A%
b11010 A%
b11011 A%
b11100 A%
b11101 A%
b11110 A%
b11111 A%
b100000 A%
b100001 A%
b100010 A%
b100011 A%
b100100 A%
b100101 A%
b100110 A%
b100111 A%
b101000 A%
b101001 A%
b101010 A%
b101011 A%
b101100 A%
b101101 A%
b101110 A%
b101111 A%
b110000 A%
b110001 A%
b110010 A%
b110011 A%
b110100 A%
b110101 A%
b110110 A%
b110111 A%
b111000 A%
b111001 A%
b111010 A%
b111011 A%
b111100 A%
b111101 A%
b111110 A%
b111111 A%
b1000000 A%
b1000001 A%
b1000010 A%
b1000011 A%
b1000100 A%
b1000101 A%
b1000110 A%
b1000111 A%
b1001000 A%
b1001001 A%
b1001010 A%
b1001011 A%
b1001100 A%
b1001101 A%
b1001110 A%
b1001111 A%
b1010000 A%
b1010001 A%
b1010010 A%
b1010011 A%
b1010100 A%
b1010101 A%
b1010110 A%
b1010111 A%
b1011000 A%
b1011001 A%
b1011010 A%
b1011011 A%
b1011100 A%
b1011101 A%
b1011110 A%
b1011111 A%
b1100000 A%
b1100001 A%
b1100010 A%
b1100011 A%
b1100100 A%
b1100101 A%
b1100110 A%
b1100111 A%
b1101000 A%
b1101001 A%
b1101010 A%
b1101011 A%
b1101100 A%
b1101101 A%
b1101110 A%
b1101111 A%
b1110000 A%
b1110001 A%
b1110010 A%
b1110011 A%
b1110100 A%
b1110101 A%
b1110110 A%
b1110111 A%
b1111000 A%
b1111001 A%
b1111010 A%
b1111011 A%
b1111100 A%
b1111101 A%
b1111110 A%
b1111111 A%
b10000000 A%
b10000001 A%
b10000010 A%
b10000011 A%
b10000100 A%
b10000101 A%
b10000110 A%
b10000111 A%
b10001000 A%
b10001001 A%
b10001010 A%
b10001011 A%
b10001100 A%
b10001101 A%
b10001110 A%
b10001111 A%
b10010000 A%
b10010001 A%
b10010010 A%
b10010011 A%
b10010100 A%
b10010101 A%
b10010110 A%
b10010111 A%
b10011000 A%
b10011001 A%
b10011010 A%
b10011011 A%
b10011100 A%
b10011101 A%
b10011110 A%
b10011111 A%
b10100000 A%
b10100001 A%
b10100010 A%
b10100011 A%
b10100100 A%
b10100101 A%
b10100110 A%
b10100111 A%
b10101000 A%
b10101001 A%
b10101010 A%
b10101011 A%
b10101100 A%
b10101101 A%
b10101110 A%
b10101111 A%
b10110000 A%
b10110001 A%
b10110010 A%
b10110011 A%
b10110100 A%
b10110101 A%
b10110110 A%
b10110111 A%
b10111000 A%
b10111001 A%
b10111010 A%
b10111011 A%
b10111100 A%
b10111101 A%
b10111110 A%
b10111111 A%
b11000000 A%
b11000001 A%
b11000010 A%
b11000011 A%
b11000100 A%
b11000101 A%
b11000110 A%
b11000111 A%
b11001000 A%
b11001001 A%
b11001010 A%
b11001011 A%
b11001100 A%
b11001101 A%
b11001110 A%
b11001111 A%
b11010000 A%
b11010001 A%
b11010010 A%
b11010011 A%
b11010100 A%
b11010101 A%
b11010110 A%
b11010111 A%
b11011000 A%
b11011001 A%
b11011010 A%
b11011011 A%
b11011100 A%
b11011101 A%
b11011110 A%
b11011111 A%
b11100000 A%
b11100001 A%
b11100010 A%
b11100011 A%
b11100100 A%
b11100101 A%
b11100110 A%
b11100111 A%
b11101000 A%
b11101001 A%
b11101010 A%
b11101011 A%
b11101100 A%
b11101101 A%
b11101110 A%
b11101111 A%
b11110000 A%
b11110001 A%
b11110010 A%
b11110011 A%
b11110100 A%
b11110101 A%
b11110110 A%
b11110111 A%
b11111000 A%
b11111001 A%
b11111010 A%
b11111011 A%
b11111100 A%
b11111101 A%
b11111110 A%
b11111111 A%
b100000000 A%
b0 D%
b1 D%
b10 D%
b11 D%
b100 D%
b101 D%
b110 D%
b111 D%
b1000 D%
b1001 D%
b1010 D%
b1011 D%
b1100 D%
b1101 D%
b1110 D%
b1111 D%
b10000 D%
b10001 D%
b10010 D%
b10011 D%
b10100 D%
b10101 D%
b10110 D%
b10111 D%
b11000 D%
b11001 D%
b11010 D%
b11011 D%
b11100 D%
b11101 D%
b11110 D%
b11111 D%
b100000 D%
b100001 D%
b100010 D%
b100011 D%
b100100 D%
b100101 D%
b100110 D%
b100111 D%
b101000 D%
b101001 D%
b101010 D%
b101011 D%
b101100 D%
b101101 D%
b101110 D%
b101111 D%
b110000 D%
b110001 D%
b110010 D%
b110011 D%
b110100 D%
b110101 D%
b110110 D%
b110111 D%
b111000 D%
b111001 D%
b111010 D%
b111011 D%
b111100 D%
b111101 D%
b111110 D%
b111111 D%
b1000000 D%
b1000001 D%
b1000010 D%
b1000011 D%
b1000100 D%
b1000101 D%
b1000110 D%
b1000111 D%
b1001000 D%
b1001001 D%
b1001010 D%
b1001011 D%
b1001100 D%
b1001101 D%
b1001110 D%
b1001111 D%
b1010000 D%
b1010001 D%
b1010010 D%
b1010011 D%
b1010100 D%
b1010101 D%
b1010110 D%
b1010111 D%
b1011000 D%
b1011001 D%
b1011010 D%
b1011011 D%
b1011100 D%
b1011101 D%
b1011110 D%
b1011111 D%
b1100000 D%
b1100001 D%
b1100010 D%
b1100011 D%
b1100100 D%
b1100101 D%
b1100110 D%
b1100111 D%
b1101000 D%
b1101001 D%
b1101010 D%
b1101011 D%
b1101100 D%
b1101101 D%
b1101110 D%
b1101111 D%
b1110000 D%
b1110001 D%
b1110010 D%
b1110011 D%
b1110100 D%
b1110101 D%
b1110110 D%
b1110111 D%
b1111000 D%
b1111001 D%
b1111010 D%
b1111011 D%
b1111100 D%
b1111101 D%
b1111110 D%
b1111111 D%
b10000000 D%
b10000001 D%
b10000010 D%
b10000011 D%
b10000100 D%
b10000101 D%
b10000110 D%
b10000111 D%
b10001000 D%
b10001001 D%
b10001010 D%
b10001011 D%
b10001100 D%
b10001101 D%
b10001110 D%
b10001111 D%
b10010000 D%
b10010001 D%
b10010010 D%
b10010011 D%
b10010100 D%
b10010101 D%
b10010110 D%
b10010111 D%
b10011000 D%
b10011001 D%
b10011010 D%
b10011011 D%
b10011100 D%
b10011101 D%
b10011110 D%
b10011111 D%
b10100000 D%
b10100001 D%
b10100010 D%
b10100011 D%
b10100100 D%
b10100101 D%
b10100110 D%
b10100111 D%
b10101000 D%
b10101001 D%
b10101010 D%
b10101011 D%
b10101100 D%
b10101101 D%
b10101110 D%
b10101111 D%
b10110000 D%
b10110001 D%
b10110010 D%
b10110011 D%
b10110100 D%
b10110101 D%
b10110110 D%
b10110111 D%
b10111000 D%
b10111001 D%
b10111010 D%
b10111011 D%
b10111100 D%
b10111101 D%
b10111110 D%
b10111111 D%
b11000000 D%
b11000001 D%
b11000010 D%
b11000011 D%
b11000100 D%
b11000101 D%
b11000110 D%
b11000111 D%
b11001000 D%
b11001001 D%
b11001010 D%
b11001011 D%
b11001100 D%
b11001101 D%
b11001110 D%
b11001111 D%
b11010000 D%
b11010001 D%
b11010010 D%
b11010011 D%
b11010100 D%
b11010101 D%
b11010110 D%
b11010111 D%
b11011000 D%
b11011001 D%
b11011010 D%
b11011011 D%
b11011100 D%
b11011101 D%
b11011110 D%
b11011111 D%
b11100000 D%
b11100001 D%
b11100010 D%
b11100011 D%
b11100100 D%
b11100101 D%
b11100110 D%
b11100111 D%
b11101000 D%
b11101001 D%
b11101010 D%
b11101011 D%
b11101100 D%
b11101101 D%
b11101110 D%
b11101111 D%
b11110000 D%
b11110001 D%
b11110010 D%
b11110011 D%
b11110100 D%
b11110101 D%
b11110110 D%
b11110111 D%
b11111000 D%
b11111001 D%
b11111010 D%
b11111011 D%
b11111100 D%
b11111101 D%
b11111110 D%
b11111111 D%
b100000000 D%
b0 G%
b1 G%
b10 G%
b11 G%
b100 G%
b101 G%
b110 G%
b111 G%
b1000 G%
b1001 G%
b1010 G%
b1011 G%
b1100 G%
b1101 G%
b1110 G%
b1111 G%
b10000 G%
b10001 G%
b10010 G%
b10011 G%
b10100 G%
b10101 G%
b10110 G%
b10111 G%
b11000 G%
b11001 G%
b11010 G%
b11011 G%
b11100 G%
b11101 G%
b11110 G%
b11111 G%
b100000 G%
b100001 G%
b100010 G%
b100011 G%
b100100 G%
b100101 G%
b100110 G%
b100111 G%
b101000 G%
b101001 G%
b101010 G%
b101011 G%
b101100 G%
b101101 G%
b101110 G%
b101111 G%
b110000 G%
b110001 G%
b110010 G%
b110011 G%
b110100 G%
b110101 G%
b110110 G%
b110111 G%
b111000 G%
b111001 G%
b111010 G%
b111011 G%
b111100 G%
b111101 G%
b111110 G%
b111111 G%
b1000000 G%
b1000001 G%
b1000010 G%
b1000011 G%
b1000100 G%
b1000101 G%
b1000110 G%
b1000111 G%
b1001000 G%
b1001001 G%
b1001010 G%
b1001011 G%
b1001100 G%
b1001101 G%
b1001110 G%
b1001111 G%
b1010000 G%
b1010001 G%
b1010010 G%
b1010011 G%
b1010100 G%
b1010101 G%
b1010110 G%
b1010111 G%
b1011000 G%
b1011001 G%
b1011010 G%
b1011011 G%
b1011100 G%
b1011101 G%
b1011110 G%
b1011111 G%
b1100000 G%
b1100001 G%
b1100010 G%
b1100011 G%
b1100100 G%
b1100101 G%
b1100110 G%
b1100111 G%
b1101000 G%
b1101001 G%
b1101010 G%
b1101011 G%
b1101100 G%
b1101101 G%
b1101110 G%
b1101111 G%
b1110000 G%
b1110001 G%
b1110010 G%
b1110011 G%
b1110100 G%
b1110101 G%
b1110110 G%
b1110111 G%
b1111000 G%
b1111001 G%
b1111010 G%
b1111011 G%
b1111100 G%
b1111101 G%
b1111110 G%
b1111111 G%
b10000000 G%
b10000001 G%
b10000010 G%
b10000011 G%
b10000100 G%
b10000101 G%
b10000110 G%
b10000111 G%
b10001000 G%
b10001001 G%
b10001010 G%
b10001011 G%
b10001100 G%
b10001101 G%
b10001110 G%
b10001111 G%
b10010000 G%
b10010001 G%
b10010010 G%
b10010011 G%
b10010100 G%
b10010101 G%
b10010110 G%
b10010111 G%
b10011000 G%
b10011001 G%
b10011010 G%
b10011011 G%
b10011100 G%
b10011101 G%
b10011110 G%
b10011111 G%
b10100000 G%
b10100001 G%
b10100010 G%
b10100011 G%
b10100100 G%
b10100101 G%
b10100110 G%
b10100111 G%
b10101000 G%
b10101001 G%
b10101010 G%
b10101011 G%
b10101100 G%
b10101101 G%
b10101110 G%
b10101111 G%
b10110000 G%
b10110001 G%
b10110010 G%
b10110011 G%
b10110100 G%
b10110101 G%
b10110110 G%
b10110111 G%
b10111000 G%
b10111001 G%
b10111010 G%
b10111011 G%
b10111100 G%
b10111101 G%
b10111110 G%
b10111111 G%
b11000000 G%
b11000001 G%
b11000010 G%
b11000011 G%
b11000100 G%
b11000101 G%
b11000110 G%
b11000111 G%
b11001000 G%
b11001001 G%
b11001010 G%
b11001011 G%
b11001100 G%
b11001101 G%
b11001110 G%
b11001111 G%
b11010000 G%
b11010001 G%
b11010010 G%
b11010011 G%
b11010100 G%
b11010101 G%
b11010110 G%
b11010111 G%
b11011000 G%
b11011001 G%
b11011010 G%
b11011011 G%
b11011100 G%
b11011101 G%
b11011110 G%
b11011111 G%
b11100000 G%
b11100001 G%
b11100010 G%
b11100011 G%
b11100100 G%
b11100101 G%
b11100110 G%
b11100111 G%
b11101000 G%
b11101001 G%
b11101010 G%
b11101011 G%
b11101100 G%
b11101101 G%
b11101110 G%
b11101111 G%
b11110000 G%
b11110001 G%
b11110010 G%
b11110011 G%
b11110100 G%
b11110101 G%
b11110110 G%
b11110111 G%
b11111000 G%
b11111001 G%
b11111010 G%
b11111011 G%
b11111100 G%
b11111101 G%
b11111110 G%
b11111111 G%
b100000000 G%
b0 J%
b1 J%
b10 J%
b11 J%
b100 J%
b101 J%
b110 J%
b111 J%
b1000 J%
b1001 J%
b1010 J%
b1011 J%
b1100 J%
b1101 J%
b1110 J%
b1111 J%
b10000 J%
b10001 J%
b10010 J%
b10011 J%
b10100 J%
b10101 J%
b10110 J%
b10111 J%
b11000 J%
b11001 J%
b11010 J%
b11011 J%
b11100 J%
b11101 J%
b11110 J%
b11111 J%
b100000 J%
b100001 J%
b100010 J%
b100011 J%
b100100 J%
b100101 J%
b100110 J%
b100111 J%
b101000 J%
b101001 J%
b101010 J%
b101011 J%
b101100 J%
b101101 J%
b101110 J%
b101111 J%
b110000 J%
b110001 J%
b110010 J%
b110011 J%
b110100 J%
b110101 J%
b110110 J%
b110111 J%
b111000 J%
b111001 J%
b111010 J%
b111011 J%
b111100 J%
b111101 J%
b111110 J%
b111111 J%
b1000000 J%
b1000001 J%
b1000010 J%
b1000011 J%
b1000100 J%
b1000101 J%
b1000110 J%
b1000111 J%
b1001000 J%
b1001001 J%
b1001010 J%
b1001011 J%
b1001100 J%
b1001101 J%
b1001110 J%
b1001111 J%
b1010000 J%
b1010001 J%
b1010010 J%
b1010011 J%
b1010100 J%
b1010101 J%
b1010110 J%
b1010111 J%
b1011000 J%
b1011001 J%
b1011010 J%
b1011011 J%
b1011100 J%
b1011101 J%
b1011110 J%
b1011111 J%
b1100000 J%
b1100001 J%
b1100010 J%
b1100011 J%
b1100100 J%
b1100101 J%
b1100110 J%
b1100111 J%
b1101000 J%
b1101001 J%
b1101010 J%
b1101011 J%
b1101100 J%
b1101101 J%
b1101110 J%
b1101111 J%
b1110000 J%
b1110001 J%
b1110010 J%
b1110011 J%
b1110100 J%
b1110101 J%
b1110110 J%
b1110111 J%
b1111000 J%
b1111001 J%
b1111010 J%
b1111011 J%
b1111100 J%
b1111101 J%
b1111110 J%
b1111111 J%
b10000000 J%
b10000001 J%
b10000010 J%
b10000011 J%
b10000100 J%
b10000101 J%
b10000110 J%
b10000111 J%
b10001000 J%
b10001001 J%
b10001010 J%
b10001011 J%
b10001100 J%
b10001101 J%
b10001110 J%
b10001111 J%
b10010000 J%
b10010001 J%
b10010010 J%
b10010011 J%
b10010100 J%
b10010101 J%
b10010110 J%
b10010111 J%
b10011000 J%
b10011001 J%
b10011010 J%
b10011011 J%
b10011100 J%
b10011101 J%
b10011110 J%
b10011111 J%
b10100000 J%
b10100001 J%
b10100010 J%
b10100011 J%
b10100100 J%
b10100101 J%
b10100110 J%
b10100111 J%
b10101000 J%
b10101001 J%
b10101010 J%
b10101011 J%
b10101100 J%
b10101101 J%
b10101110 J%
b10101111 J%
b10110000 J%
b10110001 J%
b10110010 J%
b10110011 J%
b10110100 J%
b10110101 J%
b10110110 J%
b10110111 J%
b10111000 J%
b10111001 J%
b10111010 J%
b10111011 J%
b10111100 J%
b10111101 J%
b10111110 J%
b10111111 J%
b11000000 J%
b11000001 J%
b11000010 J%
b11000011 J%
b11000100 J%
b11000101 J%
b11000110 J%
b11000111 J%
b11001000 J%
b11001001 J%
b11001010 J%
b11001011 J%
b11001100 J%
b11001101 J%
b11001110 J%
b11001111 J%
b11010000 J%
b11010001 J%
b11010010 J%
b11010011 J%
b11010100 J%
b11010101 J%
b11010110 J%
b11010111 J%
b11011000 J%
b11011001 J%
b11011010 J%
b11011011 J%
b11011100 J%
b11011101 J%
b11011110 J%
b11011111 J%
b11100000 J%
b11100001 J%
b11100010 J%
b11100011 J%
b11100100 J%
b11100101 J%
b11100110 J%
b11100111 J%
b11101000 J%
b11101001 J%
b11101010 J%
b11101011 J%
b11101100 J%
b11101101 J%
b11101110 J%
b11101111 J%
b11110000 J%
b11110001 J%
b11110010 J%
b11110011 J%
b11110100 J%
b11110101 J%
b11110110 J%
b11110111 J%
b11111000 J%
b11111001 J%
b11111010 J%
b11111011 J%
b11111100 J%
b11111101 J%
b11111110 J%
b11111111 J%
b100000000 J%
b0 M%
b1 M%
b10 M%
b11 M%
b100 M%
b101 M%
b110 M%
b111 M%
b1000 M%
b1001 M%
b1010 M%
b1011 M%
b1100 M%
b1101 M%
b1110 M%
b1111 M%
b10000 M%
b10001 M%
b10010 M%
b10011 M%
b10100 M%
b10101 M%
b10110 M%
b10111 M%
b11000 M%
b11001 M%
b11010 M%
b11011 M%
b11100 M%
b11101 M%
b11110 M%
b11111 M%
b100000 M%
b100001 M%
b100010 M%
b100011 M%
b100100 M%
b100101 M%
b100110 M%
b100111 M%
b101000 M%
b101001 M%
b101010 M%
b101011 M%
b101100 M%
b101101 M%
b101110 M%
b101111 M%
b110000 M%
b110001 M%
b110010 M%
b110011 M%
b110100 M%
b110101 M%
b110110 M%
b110111 M%
b111000 M%
b111001 M%
b111010 M%
b111011 M%
b111100 M%
b111101 M%
b111110 M%
b111111 M%
b1000000 M%
b1000001 M%
b1000010 M%
b1000011 M%
b1000100 M%
b1000101 M%
b1000110 M%
b1000111 M%
b1001000 M%
b1001001 M%
b1001010 M%
b1001011 M%
b1001100 M%
b1001101 M%
b1001110 M%
b1001111 M%
b1010000 M%
b1010001 M%
b1010010 M%
b1010011 M%
b1010100 M%
b1010101 M%
b1010110 M%
b1010111 M%
b1011000 M%
b1011001 M%
b1011010 M%
b1011011 M%
b1011100 M%
b1011101 M%
b1011110 M%
b1011111 M%
b1100000 M%
b1100001 M%
b1100010 M%
b1100011 M%
b1100100 M%
b1100101 M%
b1100110 M%
b1100111 M%
b1101000 M%
b1101001 M%
b1101010 M%
b1101011 M%
b1101100 M%
b1101101 M%
b1101110 M%
b1101111 M%
b1110000 M%
b1110001 M%
b1110010 M%
b1110011 M%
b1110100 M%
b1110101 M%
b1110110 M%
b1110111 M%
b1111000 M%
b1111001 M%
b1111010 M%
b1111011 M%
b1111100 M%
b1111101 M%
b1111110 M%
b1111111 M%
b10000000 M%
b10000001 M%
b10000010 M%
b10000011 M%
b10000100 M%
b10000101 M%
b10000110 M%
b10000111 M%
b10001000 M%
b10001001 M%
b10001010 M%
b10001011 M%
b10001100 M%
b10001101 M%
b10001110 M%
b10001111 M%
b10010000 M%
b10010001 M%
b10010010 M%
b10010011 M%
b10010100 M%
b10010101 M%
b10010110 M%
b10010111 M%
b10011000 M%
b10011001 M%
b10011010 M%
b10011011 M%
b10011100 M%
b10011101 M%
b10011110 M%
b10011111 M%
b10100000 M%
b10100001 M%
b10100010 M%
b10100011 M%
b10100100 M%
b10100101 M%
b10100110 M%
b10100111 M%
b10101000 M%
b10101001 M%
b10101010 M%
b10101011 M%
b10101100 M%
b10101101 M%
b10101110 M%
b10101111 M%
b10110000 M%
b10110001 M%
b10110010 M%
b10110011 M%
b10110100 M%
b10110101 M%
b10110110 M%
b10110111 M%
b10111000 M%
b10111001 M%
b10111010 M%
b10111011 M%
b10111100 M%
b10111101 M%
b10111110 M%
b10111111 M%
b11000000 M%
b11000001 M%
b11000010 M%
b11000011 M%
b11000100 M%
b11000101 M%
b11000110 M%
b11000111 M%
b11001000 M%
b11001001 M%
b11001010 M%
b11001011 M%
b11001100 M%
b11001101 M%
b11001110 M%
b11001111 M%
b11010000 M%
b11010001 M%
b11010010 M%
b11010011 M%
b11010100 M%
b11010101 M%
b11010110 M%
b11010111 M%
b11011000 M%
b11011001 M%
b11011010 M%
b11011011 M%
b11011100 M%
b11011101 M%
b11011110 M%
b11011111 M%
b11100000 M%
b11100001 M%
b11100010 M%
b11100011 M%
b11100100 M%
b11100101 M%
b11100110 M%
b11100111 M%
b11101000 M%
b11101001 M%
b11101010 M%
b11101011 M%
b11101100 M%
b11101101 M%
b11101110 M%
b11101111 M%
b11110000 M%
b11110001 M%
b11110010 M%
b11110011 M%
b11110100 M%
b11110101 M%
b11110110 M%
b11110111 M%
b11111000 M%
b11111001 M%
b11111010 M%
b11111011 M%
b11111100 M%
b11111101 M%
b11111110 M%
b11111111 M%
b100000000 M%
b0 O%
b1 O%
b10 O%
b11 O%
b100 O%
b101 O%
b110 O%
b111 O%
b1000 O%
b1001 O%
b1010 O%
b1011 O%
b1100 O%
b1101 O%
b1110 O%
b1111 O%
b10000 O%
b10001 O%
b10010 O%
b10011 O%
b10100 O%
b10101 O%
b10110 O%
b10111 O%
b11000 O%
b11001 O%
b11010 O%
b11011 O%
b11100 O%
b11101 O%
b11110 O%
b11111 O%
b100000 O%
b100001 O%
b100010 O%
b100011 O%
b100100 O%
b100101 O%
b100110 O%
b100111 O%
b101000 O%
b101001 O%
b101010 O%
b101011 O%
b101100 O%
b101101 O%
b101110 O%
b101111 O%
b110000 O%
b110001 O%
b110010 O%
b110011 O%
b110100 O%
b110101 O%
b110110 O%
b110111 O%
b111000 O%
b111001 O%
b111010 O%
b111011 O%
b111100 O%
b111101 O%
b111110 O%
b111111 O%
b1000000 O%
b1000001 O%
b1000010 O%
b1000011 O%
b1000100 O%
b1000101 O%
b1000110 O%
b1000111 O%
b1001000 O%
b1001001 O%
b1001010 O%
b1001011 O%
b1001100 O%
b1001101 O%
b1001110 O%
b1001111 O%
b1010000 O%
b1010001 O%
b1010010 O%
b1010011 O%
b1010100 O%
b1010101 O%
b1010110 O%
b1010111 O%
b1011000 O%
b1011001 O%
b1011010 O%
b1011011 O%
b1011100 O%
b1011101 O%
b1011110 O%
b1011111 O%
b1100000 O%
b1100001 O%
b1100010 O%
b1100011 O%
b1100100 O%
b1100101 O%
b1100110 O%
b1100111 O%
b1101000 O%
b1101001 O%
b1101010 O%
b1101011 O%
b1101100 O%
b1101101 O%
b1101110 O%
b1101111 O%
b1110000 O%
b1110001 O%
b1110010 O%
b1110011 O%
b1110100 O%
b1110101 O%
b1110110 O%
b1110111 O%
b1111000 O%
b1111001 O%
b1111010 O%
b1111011 O%
b1111100 O%
b1111101 O%
b1111110 O%
b1111111 O%
b10000000 O%
b10000001 O%
b10000010 O%
b10000011 O%
b10000100 O%
b10000101 O%
b10000110 O%
b10000111 O%
b10001000 O%
b10001001 O%
b10001010 O%
b10001011 O%
b10001100 O%
b10001101 O%
b10001110 O%
b10001111 O%
b10010000 O%
b10010001 O%
b10010010 O%
b10010011 O%
b10010100 O%
b10010101 O%
b10010110 O%
b10010111 O%
b10011000 O%
b10011001 O%
b10011010 O%
b10011011 O%
b10011100 O%
b10011101 O%
b10011110 O%
b10011111 O%
b10100000 O%
b10100001 O%
b10100010 O%
b10100011 O%
b10100100 O%
b10100101 O%
b10100110 O%
b10100111 O%
b10101000 O%
b10101001 O%
b10101010 O%
b10101011 O%
b10101100 O%
b10101101 O%
b10101110 O%
b10101111 O%
b10110000 O%
b10110001 O%
b10110010 O%
b10110011 O%
b10110100 O%
b10110101 O%
b10110110 O%
b10110111 O%
b10111000 O%
b10111001 O%
b10111010 O%
b10111011 O%
b10111100 O%
b10111101 O%
b10111110 O%
b10111111 O%
b11000000 O%
b11000001 O%
b11000010 O%
b11000011 O%
b11000100 O%
b11000101 O%
b11000110 O%
b11000111 O%
b11001000 O%
b11001001 O%
b11001010 O%
b11001011 O%
b11001100 O%
b11001101 O%
b11001110 O%
b11001111 O%
b11010000 O%
b11010001 O%
b11010010 O%
b11010011 O%
b11010100 O%
b11010101 O%
b11010110 O%
b11010111 O%
b11011000 O%
b11011001 O%
b11011010 O%
b11011011 O%
b11011100 O%
b11011101 O%
b11011110 O%
b11011111 O%
b11100000 O%
b11100001 O%
b11100010 O%
b11100011 O%
b11100100 O%
b11100101 O%
b11100110 O%
b11100111 O%
b11101000 O%
b11101001 O%
b11101010 O%
b11101011 O%
b11101100 O%
b11101101 O%
b11101110 O%
b11101111 O%
b11110000 O%
b11110001 O%
b11110010 O%
b11110011 O%
b11110100 O%
b11110101 O%
b11110110 O%
b11110111 O%
b11111000 O%
b11111001 O%
b11111010 O%
b11111011 O%
b11111100 O%
b11111101 O%
b11111110 O%
b11111111 O%
b100000000 O%
b10 #!
#150
0!!
09,
08
0}
#200
1!!
19,
18
1}
b0 z#
b1 z#
b10 z#
b11 z#
b100 z#
b101 z#
b110 z#
b111 z#
b1000 z#
b1001 z#
b1010 z#
b1011 z#
b1100 z#
b1101 z#
b1110 z#
b1111 z#
b10000 z#
b10001 z#
b10010 z#
b10011 z#
b10100 z#
b10101 z#
b10110 z#
b10111 z#
b11000 z#
b11001 z#
b11010 z#
b11011 z#
b11100 z#
b11101 z#
b11110 z#
b11111 z#
b100000 z#
b100001 z#
b100010 z#
b100011 z#
b100100 z#
b100101 z#
b100110 z#
b100111 z#
b101000 z#
b101001 z#
b101010 z#
b101011 z#
b101100 z#
b101101 z#
b101110 z#
b101111 z#
b110000 z#
b110001 z#
b110010 z#
b110011 z#
b110100 z#
b110101 z#
b110110 z#
b110111 z#
b111000 z#
b111001 z#
b111010 z#
b111011 z#
b111100 z#
b111101 z#
b111110 z#
b111111 z#
b1000000 z#
b1000001 z#
b1000010 z#
b1000011 z#
b1000100 z#
b1000101 z#
b1000110 z#
b1000111 z#
b1001000 z#
b1001001 z#
b1001010 z#
b1001011 z#
b1001100 z#
b1001101 z#
b1001110 z#
b1001111 z#
b1010000 z#
b1010001 z#
b1010010 z#
b1010011 z#
b1010100 z#
b1010101 z#
b1010110 z#
b1010111 z#
b1011000 z#
b1011001 z#
b1011010 z#
b1011011 z#
b1011100 z#
b1011101 z#
b1011110 z#
b1011111 z#
b1100000 z#
b1100001 z#
b1100010 z#
b1100011 z#
b1100100 z#
b1100101 z#
b1100110 z#
b1100111 z#
b1101000 z#
b1101001 z#
b1101010 z#
b1101011 z#
b1101100 z#
b1101101 z#
b1101110 z#
b1101111 z#
b1110000 z#
b1110001 z#
b1110010 z#
b1110011 z#
b1110100 z#
b1110101 z#
b1110110 z#
b1110111 z#
b1111000 z#
b1111001 z#
b1111010 z#
b1111011 z#
b1111100 z#
b1111101 z#
b1111110 z#
b1111111 z#
b10000000 z#
b10000001 z#
b10000010 z#
b10000011 z#
b10000100 z#
b10000101 z#
b10000110 z#
b10000111 z#
b10001000 z#
b10001001 z#
b10001010 z#
b10001011 z#
b10001100 z#
b10001101 z#
b10001110 z#
b10001111 z#
b10010000 z#
b10010001 z#
b10010010 z#
b10010011 z#
b10010100 z#
b10010101 z#
b10010110 z#
b10010111 z#
b10011000 z#
b10011001 z#
b10011010 z#
b10011011 z#
b10011100 z#
b10011101 z#
b10011110 z#
b10011111 z#
b10100000 z#
b10100001 z#
b10100010 z#
b10100011 z#
b10100100 z#
b10100101 z#
b10100110 z#
b10100111 z#
b10101000 z#
b10101001 z#
b10101010 z#
b10101011 z#
b10101100 z#
b10101101 z#
b10101110 z#
b10101111 z#
b10110000 z#
b10110001 z#
b10110010 z#
b10110011 z#
b10110100 z#
b10110101 z#
b10110110 z#
b10110111 z#
b10111000 z#
b10111001 z#
b10111010 z#
b10111011 z#
b10111100 z#
b10111101 z#
b10111110 z#
b10111111 z#
b11000000 z#
b11000001 z#
b11000010 z#
b11000011 z#
b11000100 z#
b11000101 z#
b11000110 z#
b11000111 z#
b11001000 z#
b11001001 z#
b11001010 z#
b11001011 z#
b11001100 z#
b11001101 z#
b11001110 z#
b11001111 z#
b11010000 z#
b11010001 z#
b11010010 z#
b11010011 z#
b11010100 z#
b11010101 z#
b11010110 z#
b11010111 z#
b11011000 z#
b11011001 z#
b11011010 z#
b11011011 z#
b11011100 z#
b11011101 z#
b11011110 z#
b11011111 z#
b11100000 z#
b11100001 z#
b11100010 z#
b11100011 z#
b11100100 z#
b11100101 z#
b11100110 z#
b11100111 z#
b11101000 z#
b11101001 z#
b11101010 z#
b11101011 z#
b11101100 z#
b11101101 z#
b11101110 z#
b11101111 z#
b11110000 z#
b11110001 z#
b11110010 z#
b11110011 z#
b11110100 z#
b11110101 z#
b11110110 z#
b11110111 z#
b11111000 z#
b11111001 z#
b11111010 z#
b11111011 z#
b11111100 z#
b11111101 z#
b11111110 z#
b11111111 z#
b100000000 z#
b0 }#
b1 }#
b10 }#
b11 }#
b100 }#
b101 }#
b110 }#
b111 }#
b1000 }#
b1001 }#
b1010 }#
b1011 }#
b1100 }#
b1101 }#
b1110 }#
b1111 }#
b10000 }#
b10001 }#
b10010 }#
b10011 }#
b10100 }#
b10101 }#
b10110 }#
b10111 }#
b11000 }#
b11001 }#
b11010 }#
b11011 }#
b11100 }#
b11101 }#
b11110 }#
b11111 }#
b100000 }#
b100001 }#
b100010 }#
b100011 }#
b100100 }#
b100101 }#
b100110 }#
b100111 }#
b101000 }#
b101001 }#
b101010 }#
b101011 }#
b101100 }#
b101101 }#
b101110 }#
b101111 }#
b110000 }#
b110001 }#
b110010 }#
b110011 }#
b110100 }#
b110101 }#
b110110 }#
b110111 }#
b111000 }#
b111001 }#
b111010 }#
b111011 }#
b111100 }#
b111101 }#
b111110 }#
b111111 }#
b1000000 }#
b1000001 }#
b1000010 }#
b1000011 }#
b1000100 }#
b1000101 }#
b1000110 }#
b1000111 }#
b1001000 }#
b1001001 }#
b1001010 }#
b1001011 }#
b1001100 }#
b1001101 }#
b1001110 }#
b1001111 }#
b1010000 }#
b1010001 }#
b1010010 }#
b1010011 }#
b1010100 }#
b1010101 }#
b1010110 }#
b1010111 }#
b1011000 }#
b1011001 }#
b1011010 }#
b1011011 }#
b1011100 }#
b1011101 }#
b1011110 }#
b1011111 }#
b1100000 }#
b1100001 }#
b1100010 }#
b1100011 }#
b1100100 }#
b1100101 }#
b1100110 }#
b1100111 }#
b1101000 }#
b1101001 }#
b1101010 }#
b1101011 }#
b1101100 }#
b1101101 }#
b1101110 }#
b1101111 }#
b1110000 }#
b1110001 }#
b1110010 }#
b1110011 }#
b1110100 }#
b1110101 }#
b1110110 }#
b1110111 }#
b1111000 }#
b1111001 }#
b1111010 }#
b1111011 }#
b1111100 }#
b1111101 }#
b1111110 }#
b1111111 }#
b10000000 }#
b10000001 }#
b10000010 }#
b10000011 }#
b10000100 }#
b10000101 }#
b10000110 }#
b10000111 }#
b10001000 }#
b10001001 }#
b10001010 }#
b10001011 }#
b10001100 }#
b10001101 }#
b10001110 }#
b10001111 }#
b10010000 }#
b10010001 }#
b10010010 }#
b10010011 }#
b10010100 }#
b10010101 }#
b10010110 }#
b10010111 }#
b10011000 }#
b10011001 }#
b10011010 }#
b10011011 }#
b10011100 }#
b10011101 }#
b10011110 }#
b10011111 }#
b10100000 }#
b10100001 }#
b10100010 }#
b10100011 }#
b10100100 }#
b10100101 }#
b10100110 }#
b10100111 }#
b10101000 }#
b10101001 }#
b10101010 }#
b10101011 }#
b10101100 }#
b10101101 }#
b10101110 }#
b10101111 }#
b10110000 }#
b10110001 }#
b10110010 }#
b10110011 }#
b10110100 }#
b10110101 }#
b10110110 }#
b10110111 }#
b10111000 }#
b10111001 }#
b10111010 }#
b10111011 }#
b10111100 }#
b10111101 }#
b10111110 }#
b10111111 }#
b11000000 }#
b11000001 }#
b11000010 }#
b11000011 }#
b11000100 }#
b11000101 }#
b11000110 }#
b11000111 }#
b11001000 }#
b11001001 }#
b11001010 }#
b11001011 }#
b11001100 }#
b11001101 }#
b11001110 }#
b11001111 }#
b11010000 }#
b11010001 }#
b11010010 }#
b11010011 }#
b11010100 }#
b11010101 }#
b11010110 }#
b11010111 }#
b11011000 }#
b11011001 }#
b11011010 }#
b11011011 }#
b11011100 }#
b11011101 }#
b11011110 }#
b11011111 }#
b11100000 }#
b11100001 }#
b11100010 }#
b11100011 }#
b11100100 }#
b11100101 }#
b11100110 }#
b11100111 }#
b11101000 }#
b11101001 }#
b11101010 }#
b11101011 }#
b11101100 }#
b11101101 }#
b11101110 }#
b11101111 }#
b11110000 }#
b11110001 }#
b11110010 }#
b11110011 }#
b11110100 }#
b11110101 }#
b11110110 }#
b11110111 }#
b11111000 }#
b11111001 }#
b11111010 }#
b11111011 }#
b11111100 }#
b11111101 }#
b11111110 }#
b11111111 }#
b100000000 }#
b0 "$
b1 "$
b10 "$
b11 "$
b100 "$
b101 "$
b110 "$
b111 "$
b1000 "$
b1001 "$
b1010 "$
b1011 "$
b1100 "$
b1101 "$
b1110 "$
b1111 "$
b10000 "$
b10001 "$
b10010 "$
b10011 "$
b10100 "$
b10101 "$
b10110 "$
b10111 "$
b11000 "$
b11001 "$
b11010 "$
b11011 "$
b11100 "$
b11101 "$
b11110 "$
b11111 "$
b100000 "$
b100001 "$
b100010 "$
b100011 "$
b100100 "$
b100101 "$
b100110 "$
b100111 "$
b101000 "$
b101001 "$
b101010 "$
b101011 "$
b101100 "$
b101101 "$
b101110 "$
b101111 "$
b110000 "$
b110001 "$
b110010 "$
b110011 "$
b110100 "$
b110101 "$
b110110 "$
b110111 "$
b111000 "$
b111001 "$
b111010 "$
b111011 "$
b111100 "$
b111101 "$
b111110 "$
b111111 "$
b1000000 "$
b1000001 "$
b1000010 "$
b1000011 "$
b1000100 "$
b1000101 "$
b1000110 "$
b1000111 "$
b1001000 "$
b1001001 "$
b1001010 "$
b1001011 "$
b1001100 "$
b1001101 "$
b1001110 "$
b1001111 "$
b1010000 "$
b1010001 "$
b1010010 "$
b1010011 "$
b1010100 "$
b1010101 "$
b1010110 "$
b1010111 "$
b1011000 "$
b1011001 "$
b1011010 "$
b1011011 "$
b1011100 "$
b1011101 "$
b1011110 "$
b1011111 "$
b1100000 "$
b1100001 "$
b1100010 "$
b1100011 "$
b1100100 "$
b1100101 "$
b1100110 "$
b1100111 "$
b1101000 "$
b1101001 "$
b1101010 "$
b1101011 "$
b1101100 "$
b1101101 "$
b1101110 "$
b1101111 "$
b1110000 "$
b1110001 "$
b1110010 "$
b1110011 "$
b1110100 "$
b1110101 "$
b1110110 "$
b1110111 "$
b1111000 "$
b1111001 "$
b1111010 "$
b1111011 "$
b1111100 "$
b1111101 "$
b1111110 "$
b1111111 "$
b10000000 "$
b10000001 "$
b10000010 "$
b10000011 "$
b10000100 "$
b10000101 "$
b10000110 "$
b10000111 "$
b10001000 "$
b10001001 "$
b10001010 "$
b10001011 "$
b10001100 "$
b10001101 "$
b10001110 "$
b10001111 "$
b10010000 "$
b10010001 "$
b10010010 "$
b10010011 "$
b10010100 "$
b10010101 "$
b10010110 "$
b10010111 "$
b10011000 "$
b10011001 "$
b10011010 "$
b10011011 "$
b10011100 "$
b10011101 "$
b10011110 "$
b10011111 "$
b10100000 "$
b10100001 "$
b10100010 "$
b10100011 "$
b10100100 "$
b10100101 "$
b10100110 "$
b10100111 "$
b10101000 "$
b10101001 "$
b10101010 "$
b10101011 "$
b10101100 "$
b10101101 "$
b10101110 "$
b10101111 "$
b10110000 "$
b10110001 "$
b10110010 "$
b10110011 "$
b10110100 "$
b10110101 "$
b10110110 "$
b10110111 "$
b10111000 "$
b10111001 "$
b10111010 "$
b10111011 "$
b10111100 "$
b10111101 "$
b10111110 "$
b10111111 "$
b11000000 "$
b11000001 "$
b11000010 "$
b11000011 "$
b11000100 "$
b11000101 "$
b11000110 "$
b11000111 "$
b11001000 "$
b11001001 "$
b11001010 "$
b11001011 "$
b11001100 "$
b11001101 "$
b11001110 "$
b11001111 "$
b11010000 "$
b11010001 "$
b11010010 "$
b11010011 "$
b11010100 "$
b11010101 "$
b11010110 "$
b11010111 "$
b11011000 "$
b11011001 "$
b11011010 "$
b11011011 "$
b11011100 "$
b11011101 "$
b11011110 "$
b11011111 "$
b11100000 "$
b11100001 "$
b11100010 "$
b11100011 "$
b11100100 "$
b11100101 "$
b11100110 "$
b11100111 "$
b11101000 "$
b11101001 "$
b11101010 "$
b11101011 "$
b11101100 "$
b11101101 "$
b11101110 "$
b11101111 "$
b11110000 "$
b11110001 "$
b11110010 "$
b11110011 "$
b11110100 "$
b11110101 "$
b11110110 "$
b11110111 "$
b11111000 "$
b11111001 "$
b11111010 "$
b11111011 "$
b11111100 "$
b11111101 "$
b11111110 "$
b11111111 "$
b100000000 "$
b0 %$
b1 %$
b10 %$
b11 %$
b100 %$
b101 %$
b110 %$
b111 %$
b1000 %$
b1001 %$
b1010 %$
b1011 %$
b1100 %$
b1101 %$
b1110 %$
b1111 %$
b10000 %$
b10001 %$
b10010 %$
b10011 %$
b10100 %$
b10101 %$
b10110 %$
b10111 %$
b11000 %$
b11001 %$
b11010 %$
b11011 %$
b11100 %$
b11101 %$
b11110 %$
b11111 %$
b100000 %$
b100001 %$
b100010 %$
b100011 %$
b100100 %$
b100101 %$
b100110 %$
b100111 %$
b101000 %$
b101001 %$
b101010 %$
b101011 %$
b101100 %$
b101101 %$
b101110 %$
b101111 %$
b110000 %$
b110001 %$
b110010 %$
b110011 %$
b110100 %$
b110101 %$
b110110 %$
b110111 %$
b111000 %$
b111001 %$
b111010 %$
b111011 %$
b111100 %$
b111101 %$
b111110 %$
b111111 %$
b1000000 %$
b1000001 %$
b1000010 %$
b1000011 %$
b1000100 %$
b1000101 %$
b1000110 %$
b1000111 %$
b1001000 %$
b1001001 %$
b1001010 %$
b1001011 %$
b1001100 %$
b1001101 %$
b1001110 %$
b1001111 %$
b1010000 %$
b1010001 %$
b1010010 %$
b1010011 %$
b1010100 %$
b1010101 %$
b1010110 %$
b1010111 %$
b1011000 %$
b1011001 %$
b1011010 %$
b1011011 %$
b1011100 %$
b1011101 %$
b1011110 %$
b1011111 %$
b1100000 %$
b1100001 %$
b1100010 %$
b1100011 %$
b1100100 %$
b1100101 %$
b1100110 %$
b1100111 %$
b1101000 %$
b1101001 %$
b1101010 %$
b1101011 %$
b1101100 %$
b1101101 %$
b1101110 %$
b1101111 %$
b1110000 %$
b1110001 %$
b1110010 %$
b1110011 %$
b1110100 %$
b1110101 %$
b1110110 %$
b1110111 %$
b1111000 %$
b1111001 %$
b1111010 %$
b1111011 %$
b1111100 %$
b1111101 %$
b1111110 %$
b1111111 %$
b10000000 %$
b10000001 %$
b10000010 %$
b10000011 %$
b10000100 %$
b10000101 %$
b10000110 %$
b10000111 %$
b10001000 %$
b10001001 %$
b10001010 %$
b10001011 %$
b10001100 %$
b10001101 %$
b10001110 %$
b10001111 %$
b10010000 %$
b10010001 %$
b10010010 %$
b10010011 %$
b10010100 %$
b10010101 %$
b10010110 %$
b10010111 %$
b10011000 %$
b10011001 %$
b10011010 %$
b10011011 %$
b10011100 %$
b10011101 %$
b10011110 %$
b10011111 %$
b10100000 %$
b10100001 %$
b10100010 %$
b10100011 %$
b10100100 %$
b10100101 %$
b10100110 %$
b10100111 %$
b10101000 %$
b10101001 %$
b10101010 %$
b10101011 %$
b10101100 %$
b10101101 %$
b10101110 %$
b10101111 %$
b10110000 %$
b10110001 %$
b10110010 %$
b10110011 %$
b10110100 %$
b10110101 %$
b10110110 %$
b10110111 %$
b10111000 %$
b10111001 %$
b10111010 %$
b10111011 %$
b10111100 %$
b10111101 %$
b10111110 %$
b10111111 %$
b11000000 %$
b11000001 %$
b11000010 %$
b11000011 %$
b11000100 %$
b11000101 %$
b11000110 %$
b11000111 %$
b11001000 %$
b11001001 %$
b11001010 %$
b11001011 %$
b11001100 %$
b11001101 %$
b11001110 %$
b11001111 %$
b11010000 %$
b11010001 %$
b11010010 %$
b11010011 %$
b11010100 %$
b11010101 %$
b11010110 %$
b11010111 %$
b11011000 %$
b11011001 %$
b11011010 %$
b11011011 %$
b11011100 %$
b11011101 %$
b11011110 %$
b11011111 %$
b11100000 %$
b11100001 %$
b11100010 %$
b11100011 %$
b11100100 %$
b11100101 %$
b11100110 %$
b11100111 %$
b11101000 %$
b11101001 %$
b11101010 %$
b11101011 %$
b11101100 %$
b11101101 %$
b11101110 %$
b11101111 %$
b11110000 %$
b11110001 %$
b11110010 %$
b11110011 %$
b11110100 %$
b11110101 %$
b11110110 %$
b11110111 %$
b11111000 %$
b11111001 %$
b11111010 %$
b11111011 %$
b11111100 %$
b11111101 %$
b11111110 %$
b11111111 %$
b100000000 %$
b0 ($
b1 ($
b10 ($
b11 ($
b100 ($
b101 ($
b110 ($
b111 ($
b1000 ($
b1001 ($
b1010 ($
b1011 ($
b1100 ($
b1101 ($
b1110 ($
b1111 ($
b10000 ($
b10001 ($
b10010 ($
b10011 ($
b10100 ($
b10101 ($
b10110 ($
b10111 ($
b11000 ($
b11001 ($
b11010 ($
b11011 ($
b11100 ($
b11101 ($
b11110 ($
b11111 ($
b100000 ($
b100001 ($
b100010 ($
b100011 ($
b100100 ($
b100101 ($
b100110 ($
b100111 ($
b101000 ($
b101001 ($
b101010 ($
b101011 ($
b101100 ($
b101101 ($
b101110 ($
b101111 ($
b110000 ($
b110001 ($
b110010 ($
b110011 ($
b110100 ($
b110101 ($
b110110 ($
b110111 ($
b111000 ($
b111001 ($
b111010 ($
b111011 ($
b111100 ($
b111101 ($
b111110 ($
b111111 ($
b1000000 ($
b1000001 ($
b1000010 ($
b1000011 ($
b1000100 ($
b1000101 ($
b1000110 ($
b1000111 ($
b1001000 ($
b1001001 ($
b1001010 ($
b1001011 ($
b1001100 ($
b1001101 ($
b1001110 ($
b1001111 ($
b1010000 ($
b1010001 ($
b1010010 ($
b1010011 ($
b1010100 ($
b1010101 ($
b1010110 ($
b1010111 ($
b1011000 ($
b1011001 ($
b1011010 ($
b1011011 ($
b1011100 ($
b1011101 ($
b1011110 ($
b1011111 ($
b1100000 ($
b1100001 ($
b1100010 ($
b1100011 ($
b1100100 ($
b1100101 ($
b1100110 ($
b1100111 ($
b1101000 ($
b1101001 ($
b1101010 ($
b1101011 ($
b1101100 ($
b1101101 ($
b1101110 ($
b1101111 ($
b1110000 ($
b1110001 ($
b1110010 ($
b1110011 ($
b1110100 ($
b1110101 ($
b1110110 ($
b1110111 ($
b1111000 ($
b1111001 ($
b1111010 ($
b1111011 ($
b1111100 ($
b1111101 ($
b1111110 ($
b1111111 ($
b10000000 ($
b10000001 ($
b10000010 ($
b10000011 ($
b10000100 ($
b10000101 ($
b10000110 ($
b10000111 ($
b10001000 ($
b10001001 ($
b10001010 ($
b10001011 ($
b10001100 ($
b10001101 ($
b10001110 ($
b10001111 ($
b10010000 ($
b10010001 ($
b10010010 ($
b10010011 ($
b10010100 ($
b10010101 ($
b10010110 ($
b10010111 ($
b10011000 ($
b10011001 ($
b10011010 ($
b10011011 ($
b10011100 ($
b10011101 ($
b10011110 ($
b10011111 ($
b10100000 ($
b10100001 ($
b10100010 ($
b10100011 ($
b10100100 ($
b10100101 ($
b10100110 ($
b10100111 ($
b10101000 ($
b10101001 ($
b10101010 ($
b10101011 ($
b10101100 ($
b10101101 ($
b10101110 ($
b10101111 ($
b10110000 ($
b10110001 ($
b10110010 ($
b10110011 ($
b10110100 ($
b10110101 ($
b10110110 ($
b10110111 ($
b10111000 ($
b10111001 ($
b10111010 ($
b10111011 ($
b10111100 ($
b10111101 ($
b10111110 ($
b10111111 ($
b11000000 ($
b11000001 ($
b11000010 ($
b11000011 ($
b11000100 ($
b11000101 ($
b11000110 ($
b11000111 ($
b11001000 ($
b11001001 ($
b11001010 ($
b11001011 ($
b11001100 ($
b11001101 ($
b11001110 ($
b11001111 ($
b11010000 ($
b11010001 ($
b11010010 ($
b11010011 ($
b11010100 ($
b11010101 ($
b11010110 ($
b11010111 ($
b11011000 ($
b11011001 ($
b11011010 ($
b11011011 ($
b11011100 ($
b11011101 ($
b11011110 ($
b11011111 ($
b11100000 ($
b11100001 ($
b11100010 ($
b11100011 ($
b11100100 ($
b11100101 ($
b11100110 ($
b11100111 ($
b11101000 ($
b11101001 ($
b11101010 ($
b11101011 ($
b11101100 ($
b11101101 ($
b11101110 ($
b11101111 ($
b11110000 ($
b11110001 ($
b11110010 ($
b11110011 ($
b11110100 ($
b11110101 ($
b11110110 ($
b11110111 ($
b11111000 ($
b11111001 ($
b11111010 ($
b11111011 ($
b11111100 ($
b11111101 ($
b11111110 ($
b11111111 ($
b100000000 ($
b0 +$
b1 +$
b10 +$
b11 +$
b100 +$
b101 +$
b110 +$
b111 +$
b1000 +$
b1001 +$
b1010 +$
b1011 +$
b1100 +$
b1101 +$
b1110 +$
b1111 +$
b10000 +$
b10001 +$
b10010 +$
b10011 +$
b10100 +$
b10101 +$
b10110 +$
b10111 +$
b11000 +$
b11001 +$
b11010 +$
b11011 +$
b11100 +$
b11101 +$
b11110 +$
b11111 +$
b100000 +$
b100001 +$
b100010 +$
b100011 +$
b100100 +$
b100101 +$
b100110 +$
b100111 +$
b101000 +$
b101001 +$
b101010 +$
b101011 +$
b101100 +$
b101101 +$
b101110 +$
b101111 +$
b110000 +$
b110001 +$
b110010 +$
b110011 +$
b110100 +$
b110101 +$
b110110 +$
b110111 +$
b111000 +$
b111001 +$
b111010 +$
b111011 +$
b111100 +$
b111101 +$
b111110 +$
b111111 +$
b1000000 +$
b1000001 +$
b1000010 +$
b1000011 +$
b1000100 +$
b1000101 +$
b1000110 +$
b1000111 +$
b1001000 +$
b1001001 +$
b1001010 +$
b1001011 +$
b1001100 +$
b1001101 +$
b1001110 +$
b1001111 +$
b1010000 +$
b1010001 +$
b1010010 +$
b1010011 +$
b1010100 +$
b1010101 +$
b1010110 +$
b1010111 +$
b1011000 +$
b1011001 +$
b1011010 +$
b1011011 +$
b1011100 +$
b1011101 +$
b1011110 +$
b1011111 +$
b1100000 +$
b1100001 +$
b1100010 +$
b1100011 +$
b1100100 +$
b1100101 +$
b1100110 +$
b1100111 +$
b1101000 +$
b1101001 +$
b1101010 +$
b1101011 +$
b1101100 +$
b1101101 +$
b1101110 +$
b1101111 +$
b1110000 +$
b1110001 +$
b1110010 +$
b1110011 +$
b1110100 +$
b1110101 +$
b1110110 +$
b1110111 +$
b1111000 +$
b1111001 +$
b1111010 +$
b1111011 +$
b1111100 +$
b1111101 +$
b1111110 +$
b1111111 +$
b10000000 +$
b10000001 +$
b10000010 +$
b10000011 +$
b10000100 +$
b10000101 +$
b10000110 +$
b10000111 +$
b10001000 +$
b10001001 +$
b10001010 +$
b10001011 +$
b10001100 +$
b10001101 +$
b10001110 +$
b10001111 +$
b10010000 +$
b10010001 +$
b10010010 +$
b10010011 +$
b10010100 +$
b10010101 +$
b10010110 +$
b10010111 +$
b10011000 +$
b10011001 +$
b10011010 +$
b10011011 +$
b10011100 +$
b10011101 +$
b10011110 +$
b10011111 +$
b10100000 +$
b10100001 +$
b10100010 +$
b10100011 +$
b10100100 +$
b10100101 +$
b10100110 +$
b10100111 +$
b10101000 +$
b10101001 +$
b10101010 +$
b10101011 +$
b10101100 +$
b10101101 +$
b10101110 +$
b10101111 +$
b10110000 +$
b10110001 +$
b10110010 +$
b10110011 +$
b10110100 +$
b10110101 +$
b10110110 +$
b10110111 +$
b10111000 +$
b10111001 +$
b10111010 +$
b10111011 +$
b10111100 +$
b10111101 +$
b10111110 +$
b10111111 +$
b11000000 +$
b11000001 +$
b11000010 +$
b11000011 +$
b11000100 +$
b11000101 +$
b11000110 +$
b11000111 +$
b11001000 +$
b11001001 +$
b11001010 +$
b11001011 +$
b11001100 +$
b11001101 +$
b11001110 +$
b11001111 +$
b11010000 +$
b11010001 +$
b11010010 +$
b11010011 +$
b11010100 +$
b11010101 +$
b11010110 +$
b11010111 +$
b11011000 +$
b11011001 +$
b11011010 +$
b11011011 +$
b11011100 +$
b11011101 +$
b11011110 +$
b11011111 +$
b11100000 +$
b11100001 +$
b11100010 +$
b11100011 +$
b11100100 +$
b11100101 +$
b11100110 +$
b11100111 +$
b11101000 +$
b11101001 +$
b11101010 +$
b11101011 +$
b11101100 +$
b11101101 +$
b11101110 +$
b11101111 +$
b11110000 +$
b11110001 +$
b11110010 +$
b11110011 +$
b11110100 +$
b11110101 +$
b11110110 +$
b11110111 +$
b11111000 +$
b11111001 +$
b11111010 +$
b11111011 +$
b11111100 +$
b11111101 +$
b11111110 +$
b11111111 +$
b100000000 +$
b0 -$
b1 -$
b10 -$
b11 -$
b100 -$
b101 -$
b110 -$
b111 -$
b1000 -$
b1001 -$
b1010 -$
b1011 -$
b1100 -$
b1101 -$
b1110 -$
b1111 -$
b10000 -$
b10001 -$
b10010 -$
b10011 -$
b10100 -$
b10101 -$
b10110 -$
b10111 -$
b11000 -$
b11001 -$
b11010 -$
b11011 -$
b11100 -$
b11101 -$
b11110 -$
b11111 -$
b100000 -$
b100001 -$
b100010 -$
b100011 -$
b100100 -$
b100101 -$
b100110 -$
b100111 -$
b101000 -$
b101001 -$
b101010 -$
b101011 -$
b101100 -$
b101101 -$
b101110 -$
b101111 -$
b110000 -$
b110001 -$
b110010 -$
b110011 -$
b110100 -$
b110101 -$
b110110 -$
b110111 -$
b111000 -$
b111001 -$
b111010 -$
b111011 -$
b111100 -$
b111101 -$
b111110 -$
b111111 -$
b1000000 -$
b1000001 -$
b1000010 -$
b1000011 -$
b1000100 -$
b1000101 -$
b1000110 -$
b1000111 -$
b1001000 -$
b1001001 -$
b1001010 -$
b1001011 -$
b1001100 -$
b1001101 -$
b1001110 -$
b1001111 -$
b1010000 -$
b1010001 -$
b1010010 -$
b1010011 -$
b1010100 -$
b1010101 -$
b1010110 -$
b1010111 -$
b1011000 -$
b1011001 -$
b1011010 -$
b1011011 -$
b1011100 -$
b1011101 -$
b1011110 -$
b1011111 -$
b1100000 -$
b1100001 -$
b1100010 -$
b1100011 -$
b1100100 -$
b1100101 -$
b1100110 -$
b1100111 -$
b1101000 -$
b1101001 -$
b1101010 -$
b1101011 -$
b1101100 -$
b1101101 -$
b1101110 -$
b1101111 -$
b1110000 -$
b1110001 -$
b1110010 -$
b1110011 -$
b1110100 -$
b1110101 -$
b1110110 -$
b1110111 -$
b1111000 -$
b1111001 -$
b1111010 -$
b1111011 -$
b1111100 -$
b1111101 -$
b1111110 -$
b1111111 -$
b10000000 -$
b10000001 -$
b10000010 -$
b10000011 -$
b10000100 -$
b10000101 -$
b10000110 -$
b10000111 -$
b10001000 -$
b10001001 -$
b10001010 -$
b10001011 -$
b10001100 -$
b10001101 -$
b10001110 -$
b10001111 -$
b10010000 -$
b10010001 -$
b10010010 -$
b10010011 -$
b10010100 -$
b10010101 -$
b10010110 -$
b10010111 -$
b10011000 -$
b10011001 -$
b10011010 -$
b10011011 -$
b10011100 -$
b10011101 -$
b10011110 -$
b10011111 -$
b10100000 -$
b10100001 -$
b10100010 -$
b10100011 -$
b10100100 -$
b10100101 -$
b10100110 -$
b10100111 -$
b10101000 -$
b10101001 -$
b10101010 -$
b10101011 -$
b10101100 -$
b10101101 -$
b10101110 -$
b10101111 -$
b10110000 -$
b10110001 -$
b10110010 -$
b10110011 -$
b10110100 -$
b10110101 -$
b10110110 -$
b10110111 -$
b10111000 -$
b10111001 -$
b10111010 -$
b10111011 -$
b10111100 -$
b10111101 -$
b10111110 -$
b10111111 -$
b11000000 -$
b11000001 -$
b11000010 -$
b11000011 -$
b11000100 -$
b11000101 -$
b11000110 -$
b11000111 -$
b11001000 -$
b11001001 -$
b11001010 -$
b11001011 -$
b11001100 -$
b11001101 -$
b11001110 -$
b11001111 -$
b11010000 -$
b11010001 -$
b11010010 -$
b11010011 -$
b11010100 -$
b11010101 -$
b11010110 -$
b11010111 -$
b11011000 -$
b11011001 -$
b11011010 -$
b11011011 -$
b11011100 -$
b11011101 -$
b11011110 -$
b11011111 -$
b11100000 -$
b11100001 -$
b11100010 -$
b11100011 -$
b11100100 -$
b11100101 -$
b11100110 -$
b11100111 -$
b11101000 -$
b11101001 -$
b11101010 -$
b11101011 -$
b11101100 -$
b11101101 -$
b11101110 -$
b11101111 -$
b11110000 -$
b11110001 -$
b11110010 -$
b11110011 -$
b11110100 -$
b11110101 -$
b11110110 -$
b11110111 -$
b11111000 -$
b11111001 -$
b11111010 -$
b11111011 -$
b11111100 -$
b11111101 -$
b11111110 -$
b11111111 -$
b100000000 -$
b0 >%
b1 >%
b10 >%
b11 >%
b100 >%
b101 >%
b110 >%
b111 >%
b1000 >%
b1001 >%
b1010 >%
b1011 >%
b1100 >%
b1101 >%
b1110 >%
b1111 >%
b10000 >%
b10001 >%
b10010 >%
b10011 >%
b10100 >%
b10101 >%
b10110 >%
b10111 >%
b11000 >%
b11001 >%
b11010 >%
b11011 >%
b11100 >%
b11101 >%
b11110 >%
b11111 >%
b100000 >%
b100001 >%
b100010 >%
b100011 >%
b100100 >%
b100101 >%
b100110 >%
b100111 >%
b101000 >%
b101001 >%
b101010 >%
b101011 >%
b101100 >%
b101101 >%
b101110 >%
b101111 >%
b110000 >%
b110001 >%
b110010 >%
b110011 >%
b110100 >%
b110101 >%
b110110 >%
b110111 >%
b111000 >%
b111001 >%
b111010 >%
b111011 >%
b111100 >%
b111101 >%
b111110 >%
b111111 >%
b1000000 >%
b1000001 >%
b1000010 >%
b1000011 >%
b1000100 >%
b1000101 >%
b1000110 >%
b1000111 >%
b1001000 >%
b1001001 >%
b1001010 >%
b1001011 >%
b1001100 >%
b1001101 >%
b1001110 >%
b1001111 >%
b1010000 >%
b1010001 >%
b1010010 >%
b1010011 >%
b1010100 >%
b1010101 >%
b1010110 >%
b1010111 >%
b1011000 >%
b1011001 >%
b1011010 >%
b1011011 >%
b1011100 >%
b1011101 >%
b1011110 >%
b1011111 >%
b1100000 >%
b1100001 >%
b1100010 >%
b1100011 >%
b1100100 >%
b1100101 >%
b1100110 >%
b1100111 >%
b1101000 >%
b1101001 >%
b1101010 >%
b1101011 >%
b1101100 >%
b1101101 >%
b1101110 >%
b1101111 >%
b1110000 >%
b1110001 >%
b1110010 >%
b1110011 >%
b1110100 >%
b1110101 >%
b1110110 >%
b1110111 >%
b1111000 >%
b1111001 >%
b1111010 >%
b1111011 >%
b1111100 >%
b1111101 >%
b1111110 >%
b1111111 >%
b10000000 >%
b10000001 >%
b10000010 >%
b10000011 >%
b10000100 >%
b10000101 >%
b10000110 >%
b10000111 >%
b10001000 >%
b10001001 >%
b10001010 >%
b10001011 >%
b10001100 >%
b10001101 >%
b10001110 >%
b10001111 >%
b10010000 >%
b10010001 >%
b10010010 >%
b10010011 >%
b10010100 >%
b10010101 >%
b10010110 >%
b10010111 >%
b10011000 >%
b10011001 >%
b10011010 >%
b10011011 >%
b10011100 >%
b10011101 >%
b10011110 >%
b10011111 >%
b10100000 >%
b10100001 >%
b10100010 >%
b10100011 >%
b10100100 >%
b10100101 >%
b10100110 >%
b10100111 >%
b10101000 >%
b10101001 >%
b10101010 >%
b10101011 >%
b10101100 >%
b10101101 >%
b10101110 >%
b10101111 >%
b10110000 >%
b10110001 >%
b10110010 >%
b10110011 >%
b10110100 >%
b10110101 >%
b10110110 >%
b10110111 >%
b10111000 >%
b10111001 >%
b10111010 >%
b10111011 >%
b10111100 >%
b10111101 >%
b10111110 >%
b10111111 >%
b11000000 >%
b11000001 >%
b11000010 >%
b11000011 >%
b11000100 >%
b11000101 >%
b11000110 >%
b11000111 >%
b11001000 >%
b11001001 >%
b11001010 >%
b11001011 >%
b11001100 >%
b11001101 >%
b11001110 >%
b11001111 >%
b11010000 >%
b11010001 >%
b11010010 >%
b11010011 >%
b11010100 >%
b11010101 >%
b11010110 >%
b11010111 >%
b11011000 >%
b11011001 >%
b11011010 >%
b11011011 >%
b11011100 >%
b11011101 >%
b11011110 >%
b11011111 >%
b11100000 >%
b11100001 >%
b11100010 >%
b11100011 >%
b11100100 >%
b11100101 >%
b11100110 >%
b11100111 >%
b11101000 >%
b11101001 >%
b11101010 >%
b11101011 >%
b11101100 >%
b11101101 >%
b11101110 >%
b11101111 >%
b11110000 >%
b11110001 >%
b11110010 >%
b11110011 >%
b11110100 >%
b11110101 >%
b11110110 >%
b11110111 >%
b11111000 >%
b11111001 >%
b11111010 >%
b11111011 >%
b11111100 >%
b11111101 >%
b11111110 >%
b11111111 >%
b100000000 >%
b0 A%
b1 A%
b10 A%
b11 A%
b100 A%
b101 A%
b110 A%
b111 A%
b1000 A%
b1001 A%
b1010 A%
b1011 A%
b1100 A%
b1101 A%
b1110 A%
b1111 A%
b10000 A%
b10001 A%
b10010 A%
b10011 A%
b10100 A%
b10101 A%
b10110 A%
b10111 A%
b11000 A%
b11001 A%
b11010 A%
b11011 A%
b11100 A%
b11101 A%
b11110 A%
b11111 A%
b100000 A%
b100001 A%
b100010 A%
b100011 A%
b100100 A%
b100101 A%
b100110 A%
b100111 A%
b101000 A%
b101001 A%
b101010 A%
b101011 A%
b101100 A%
b101101 A%
b101110 A%
b101111 A%
b110000 A%
b110001 A%
b110010 A%
b110011 A%
b110100 A%
b110101 A%
b110110 A%
b110111 A%
b111000 A%
b111001 A%
b111010 A%
b111011 A%
b111100 A%
b111101 A%
b111110 A%
b111111 A%
b1000000 A%
b1000001 A%
b1000010 A%
b1000011 A%
b1000100 A%
b1000101 A%
b1000110 A%
b1000111 A%
b1001000 A%
b1001001 A%
b1001010 A%
b1001011 A%
b1001100 A%
b1001101 A%
b1001110 A%
b1001111 A%
b1010000 A%
b1010001 A%
b1010010 A%
b1010011 A%
b1010100 A%
b1010101 A%
b1010110 A%
b1010111 A%
b1011000 A%
b1011001 A%
b1011010 A%
b1011011 A%
b1011100 A%
b1011101 A%
b1011110 A%
b1011111 A%
b1100000 A%
b1100001 A%
b1100010 A%
b1100011 A%
b1100100 A%
b1100101 A%
b1100110 A%
b1100111 A%
b1101000 A%
b1101001 A%
b1101010 A%
b1101011 A%
b1101100 A%
b1101101 A%
b1101110 A%
b1101111 A%
b1110000 A%
b1110001 A%
b1110010 A%
b1110011 A%
b1110100 A%
b1110101 A%
b1110110 A%
b1110111 A%
b1111000 A%
b1111001 A%
b1111010 A%
b1111011 A%
b1111100 A%
b1111101 A%
b1111110 A%
b1111111 A%
b10000000 A%
b10000001 A%
b10000010 A%
b10000011 A%
b10000100 A%
b10000101 A%
b10000110 A%
b10000111 A%
b10001000 A%
b10001001 A%
b10001010 A%
b10001011 A%
b10001100 A%
b10001101 A%
b10001110 A%
b10001111 A%
b10010000 A%
b10010001 A%
b10010010 A%
b10010011 A%
b10010100 A%
b10010101 A%
b10010110 A%
b10010111 A%
b10011000 A%
b10011001 A%
b10011010 A%
b10011011 A%
b10011100 A%
b10011101 A%
b10011110 A%
b10011111 A%
b10100000 A%
b10100001 A%
b10100010 A%
b10100011 A%
b10100100 A%
b10100101 A%
b10100110 A%
b10100111 A%
b10101000 A%
b10101001 A%
b10101010 A%
b10101011 A%
b10101100 A%
b10101101 A%
b10101110 A%
b10101111 A%
b10110000 A%
b10110001 A%
b10110010 A%
b10110011 A%
b10110100 A%
b10110101 A%
b10110110 A%
b10110111 A%
b10111000 A%
b10111001 A%
b10111010 A%
b10111011 A%
b10111100 A%
b10111101 A%
b10111110 A%
b10111111 A%
b11000000 A%
b11000001 A%
b11000010 A%
b11000011 A%
b11000100 A%
b11000101 A%
b11000110 A%
b11000111 A%
b11001000 A%
b11001001 A%
b11001010 A%
b11001011 A%
b11001100 A%
b11001101 A%
b11001110 A%
b11001111 A%
b11010000 A%
b11010001 A%
b11010010 A%
b11010011 A%
b11010100 A%
b11010101 A%
b11010110 A%
b11010111 A%
b11011000 A%
b11011001 A%
b11011010 A%
b11011011 A%
b11011100 A%
b11011101 A%
b11011110 A%
b11011111 A%
b11100000 A%
b11100001 A%
b11100010 A%
b11100011 A%
b11100100 A%
b11100101 A%
b11100110 A%
b11100111 A%
b11101000 A%
b11101001 A%
b11101010 A%
b11101011 A%
b11101100 A%
b11101101 A%
b11101110 A%
b11101111 A%
b11110000 A%
b11110001 A%
b11110010 A%
b11110011 A%
b11110100 A%
b11110101 A%
b11110110 A%
b11110111 A%
b11111000 A%
b11111001 A%
b11111010 A%
b11111011 A%
b11111100 A%
b11111101 A%
b11111110 A%
b11111111 A%
b100000000 A%
b0 D%
b1 D%
b10 D%
b11 D%
b100 D%
b101 D%
b110 D%
b111 D%
b1000 D%
b1001 D%
b1010 D%
b1011 D%
b1100 D%
b1101 D%
b1110 D%
b1111 D%
b10000 D%
b10001 D%
b10010 D%
b10011 D%
b10100 D%
b10101 D%
b10110 D%
b10111 D%
b11000 D%
b11001 D%
b11010 D%
b11011 D%
b11100 D%
b11101 D%
b11110 D%
b11111 D%
b100000 D%
b100001 D%
b100010 D%
b100011 D%
b100100 D%
b100101 D%
b100110 D%
b100111 D%
b101000 D%
b101001 D%
b101010 D%
b101011 D%
b101100 D%
b101101 D%
b101110 D%
b101111 D%
b110000 D%
b110001 D%
b110010 D%
b110011 D%
b110100 D%
b110101 D%
b110110 D%
b110111 D%
b111000 D%
b111001 D%
b111010 D%
b111011 D%
b111100 D%
b111101 D%
b111110 D%
b111111 D%
b1000000 D%
b1000001 D%
b1000010 D%
b1000011 D%
b1000100 D%
b1000101 D%
b1000110 D%
b1000111 D%
b1001000 D%
b1001001 D%
b1001010 D%
b1001011 D%
b1001100 D%
b1001101 D%
b1001110 D%
b1001111 D%
b1010000 D%
b1010001 D%
b1010010 D%
b1010011 D%
b1010100 D%
b1010101 D%
b1010110 D%
b1010111 D%
b1011000 D%
b1011001 D%
b1011010 D%
b1011011 D%
b1011100 D%
b1011101 D%
b1011110 D%
b1011111 D%
b1100000 D%
b1100001 D%
b1100010 D%
b1100011 D%
b1100100 D%
b1100101 D%
b1100110 D%
b1100111 D%
b1101000 D%
b1101001 D%
b1101010 D%
b1101011 D%
b1101100 D%
b1101101 D%
b1101110 D%
b1101111 D%
b1110000 D%
b1110001 D%
b1110010 D%
b1110011 D%
b1110100 D%
b1110101 D%
b1110110 D%
b1110111 D%
b1111000 D%
b1111001 D%
b1111010 D%
b1111011 D%
b1111100 D%
b1111101 D%
b1111110 D%
b1111111 D%
b10000000 D%
b10000001 D%
b10000010 D%
b10000011 D%
b10000100 D%
b10000101 D%
b10000110 D%
b10000111 D%
b10001000 D%
b10001001 D%
b10001010 D%
b10001011 D%
b10001100 D%
b10001101 D%
b10001110 D%
b10001111 D%
b10010000 D%
b10010001 D%
b10010010 D%
b10010011 D%
b10010100 D%
b10010101 D%
b10010110 D%
b10010111 D%
b10011000 D%
b10011001 D%
b10011010 D%
b10011011 D%
b10011100 D%
b10011101 D%
b10011110 D%
b10011111 D%
b10100000 D%
b10100001 D%
b10100010 D%
b10100011 D%
b10100100 D%
b10100101 D%
b10100110 D%
b10100111 D%
b10101000 D%
b10101001 D%
b10101010 D%
b10101011 D%
b10101100 D%
b10101101 D%
b10101110 D%
b10101111 D%
b10110000 D%
b10110001 D%
b10110010 D%
b10110011 D%
b10110100 D%
b10110101 D%
b10110110 D%
b10110111 D%
b10111000 D%
b10111001 D%
b10111010 D%
b10111011 D%
b10111100 D%
b10111101 D%
b10111110 D%
b10111111 D%
b11000000 D%
b11000001 D%
b11000010 D%
b11000011 D%
b11000100 D%
b11000101 D%
b11000110 D%
b11000111 D%
b11001000 D%
b11001001 D%
b11001010 D%
b11001011 D%
b11001100 D%
b11001101 D%
b11001110 D%
b11001111 D%
b11010000 D%
b11010001 D%
b11010010 D%
b11010011 D%
b11010100 D%
b11010101 D%
b11010110 D%
b11010111 D%
b11011000 D%
b11011001 D%
b11011010 D%
b11011011 D%
b11011100 D%
b11011101 D%
b11011110 D%
b11011111 D%
b11100000 D%
b11100001 D%
b11100010 D%
b11100011 D%
b11100100 D%
b11100101 D%
b11100110 D%
b11100111 D%
b11101000 D%
b11101001 D%
b11101010 D%
b11101011 D%
b11101100 D%
b11101101 D%
b11101110 D%
b11101111 D%
b11110000 D%
b11110001 D%
b11110010 D%
b11110011 D%
b11110100 D%
b11110101 D%
b11110110 D%
b11110111 D%
b11111000 D%
b11111001 D%
b11111010 D%
b11111011 D%
b11111100 D%
b11111101 D%
b11111110 D%
b11111111 D%
b100000000 D%
b0 G%
b1 G%
b10 G%
b11 G%
b100 G%
b101 G%
b110 G%
b111 G%
b1000 G%
b1001 G%
b1010 G%
b1011 G%
b1100 G%
b1101 G%
b1110 G%
b1111 G%
b10000 G%
b10001 G%
b10010 G%
b10011 G%
b10100 G%
b10101 G%
b10110 G%
b10111 G%
b11000 G%
b11001 G%
b11010 G%
b11011 G%
b11100 G%
b11101 G%
b11110 G%
b11111 G%
b100000 G%
b100001 G%
b100010 G%
b100011 G%
b100100 G%
b100101 G%
b100110 G%
b100111 G%
b101000 G%
b101001 G%
b101010 G%
b101011 G%
b101100 G%
b101101 G%
b101110 G%
b101111 G%
b110000 G%
b110001 G%
b110010 G%
b110011 G%
b110100 G%
b110101 G%
b110110 G%
b110111 G%
b111000 G%
b111001 G%
b111010 G%
b111011 G%
b111100 G%
b111101 G%
b111110 G%
b111111 G%
b1000000 G%
b1000001 G%
b1000010 G%
b1000011 G%
b1000100 G%
b1000101 G%
b1000110 G%
b1000111 G%
b1001000 G%
b1001001 G%
b1001010 G%
b1001011 G%
b1001100 G%
b1001101 G%
b1001110 G%
b1001111 G%
b1010000 G%
b1010001 G%
b1010010 G%
b1010011 G%
b1010100 G%
b1010101 G%
b1010110 G%
b1010111 G%
b1011000 G%
b1011001 G%
b1011010 G%
b1011011 G%
b1011100 G%
b1011101 G%
b1011110 G%
b1011111 G%
b1100000 G%
b1100001 G%
b1100010 G%
b1100011 G%
b1100100 G%
b1100101 G%
b1100110 G%
b1100111 G%
b1101000 G%
b1101001 G%
b1101010 G%
b1101011 G%
b1101100 G%
b1101101 G%
b1101110 G%
b1101111 G%
b1110000 G%
b1110001 G%
b1110010 G%
b1110011 G%
b1110100 G%
b1110101 G%
b1110110 G%
b1110111 G%
b1111000 G%
b1111001 G%
b1111010 G%
b1111011 G%
b1111100 G%
b1111101 G%
b1111110 G%
b1111111 G%
b10000000 G%
b10000001 G%
b10000010 G%
b10000011 G%
b10000100 G%
b10000101 G%
b10000110 G%
b10000111 G%
b10001000 G%
b10001001 G%
b10001010 G%
b10001011 G%
b10001100 G%
b10001101 G%
b10001110 G%
b10001111 G%
b10010000 G%
b10010001 G%
b10010010 G%
b10010011 G%
b10010100 G%
b10010101 G%
b10010110 G%
b10010111 G%
b10011000 G%
b10011001 G%
b10011010 G%
b10011011 G%
b10011100 G%
b10011101 G%
b10011110 G%
b10011111 G%
b10100000 G%
b10100001 G%
b10100010 G%
b10100011 G%
b10100100 G%
b10100101 G%
b10100110 G%
b10100111 G%
b10101000 G%
b10101001 G%
b10101010 G%
b10101011 G%
b10101100 G%
b10101101 G%
b10101110 G%
b10101111 G%
b10110000 G%
b10110001 G%
b10110010 G%
b10110011 G%
b10110100 G%
b10110101 G%
b10110110 G%
b10110111 G%
b10111000 G%
b10111001 G%
b10111010 G%
b10111011 G%
b10111100 G%
b10111101 G%
b10111110 G%
b10111111 G%
b11000000 G%
b11000001 G%
b11000010 G%
b11000011 G%
b11000100 G%
b11000101 G%
b11000110 G%
b11000111 G%
b11001000 G%
b11001001 G%
b11001010 G%
b11001011 G%
b11001100 G%
b11001101 G%
b11001110 G%
b11001111 G%
b11010000 G%
b11010001 G%
b11010010 G%
b11010011 G%
b11010100 G%
b11010101 G%
b11010110 G%
b11010111 G%
b11011000 G%
b11011001 G%
b11011010 G%
b11011011 G%
b11011100 G%
b11011101 G%
b11011110 G%
b11011111 G%
b11100000 G%
b11100001 G%
b11100010 G%
b11100011 G%
b11100100 G%
b11100101 G%
b11100110 G%
b11100111 G%
b11101000 G%
b11101001 G%
b11101010 G%
b11101011 G%
b11101100 G%
b11101101 G%
b11101110 G%
b11101111 G%
b11110000 G%
b11110001 G%
b11110010 G%
b11110011 G%
b11110100 G%
b11110101 G%
b11110110 G%
b11110111 G%
b11111000 G%
b11111001 G%
b11111010 G%
b11111011 G%
b11111100 G%
b11111101 G%
b11111110 G%
b11111111 G%
b100000000 G%
b0 J%
b1 J%
b10 J%
b11 J%
b100 J%
b101 J%
b110 J%
b111 J%
b1000 J%
b1001 J%
b1010 J%
b1011 J%
b1100 J%
b1101 J%
b1110 J%
b1111 J%
b10000 J%
b10001 J%
b10010 J%
b10011 J%
b10100 J%
b10101 J%
b10110 J%
b10111 J%
b11000 J%
b11001 J%
b11010 J%
b11011 J%
b11100 J%
b11101 J%
b11110 J%
b11111 J%
b100000 J%
b100001 J%
b100010 J%
b100011 J%
b100100 J%
b100101 J%
b100110 J%
b100111 J%
b101000 J%
b101001 J%
b101010 J%
b101011 J%
b101100 J%
b101101 J%
b101110 J%
b101111 J%
b110000 J%
b110001 J%
b110010 J%
b110011 J%
b110100 J%
b110101 J%
b110110 J%
b110111 J%
b111000 J%
b111001 J%
b111010 J%
b111011 J%
b111100 J%
b111101 J%
b111110 J%
b111111 J%
b1000000 J%
b1000001 J%
b1000010 J%
b1000011 J%
b1000100 J%
b1000101 J%
b1000110 J%
b1000111 J%
b1001000 J%
b1001001 J%
b1001010 J%
b1001011 J%
b1001100 J%
b1001101 J%
b1001110 J%
b1001111 J%
b1010000 J%
b1010001 J%
b1010010 J%
b1010011 J%
b1010100 J%
b1010101 J%
b1010110 J%
b1010111 J%
b1011000 J%
b1011001 J%
b1011010 J%
b1011011 J%
b1011100 J%
b1011101 J%
b1011110 J%
b1011111 J%
b1100000 J%
b1100001 J%
b1100010 J%
b1100011 J%
b1100100 J%
b1100101 J%
b1100110 J%
b1100111 J%
b1101000 J%
b1101001 J%
b1101010 J%
b1101011 J%
b1101100 J%
b1101101 J%
b1101110 J%
b1101111 J%
b1110000 J%
b1110001 J%
b1110010 J%
b1110011 J%
b1110100 J%
b1110101 J%
b1110110 J%
b1110111 J%
b1111000 J%
b1111001 J%
b1111010 J%
b1111011 J%
b1111100 J%
b1111101 J%
b1111110 J%
b1111111 J%
b10000000 J%
b10000001 J%
b10000010 J%
b10000011 J%
b10000100 J%
b10000101 J%
b10000110 J%
b10000111 J%
b10001000 J%
b10001001 J%
b10001010 J%
b10001011 J%
b10001100 J%
b10001101 J%
b10001110 J%
b10001111 J%
b10010000 J%
b10010001 J%
b10010010 J%
b10010011 J%
b10010100 J%
b10010101 J%
b10010110 J%
b10010111 J%
b10011000 J%
b10011001 J%
b10011010 J%
b10011011 J%
b10011100 J%
b10011101 J%
b10011110 J%
b10011111 J%
b10100000 J%
b10100001 J%
b10100010 J%
b10100011 J%
b10100100 J%
b10100101 J%
b10100110 J%
b10100111 J%
b10101000 J%
b10101001 J%
b10101010 J%
b10101011 J%
b10101100 J%
b10101101 J%
b10101110 J%
b10101111 J%
b10110000 J%
b10110001 J%
b10110010 J%
b10110011 J%
b10110100 J%
b10110101 J%
b10110110 J%
b10110111 J%
b10111000 J%
b10111001 J%
b10111010 J%
b10111011 J%
b10111100 J%
b10111101 J%
b10111110 J%
b10111111 J%
b11000000 J%
b11000001 J%
b11000010 J%
b11000011 J%
b11000100 J%
b11000101 J%
b11000110 J%
b11000111 J%
b11001000 J%
b11001001 J%
b11001010 J%
b11001011 J%
b11001100 J%
b11001101 J%
b11001110 J%
b11001111 J%
b11010000 J%
b11010001 J%
b11010010 J%
b11010011 J%
b11010100 J%
b11010101 J%
b11010110 J%
b11010111 J%
b11011000 J%
b11011001 J%
b11011010 J%
b11011011 J%
b11011100 J%
b11011101 J%
b11011110 J%
b11011111 J%
b11100000 J%
b11100001 J%
b11100010 J%
b11100011 J%
b11100100 J%
b11100101 J%
b11100110 J%
b11100111 J%
b11101000 J%
b11101001 J%
b11101010 J%
b11101011 J%
b11101100 J%
b11101101 J%
b11101110 J%
b11101111 J%
b11110000 J%
b11110001 J%
b11110010 J%
b11110011 J%
b11110100 J%
b11110101 J%
b11110110 J%
b11110111 J%
b11111000 J%
b11111001 J%
b11111010 J%
b11111011 J%
b11111100 J%
b11111101 J%
b11111110 J%
b11111111 J%
b100000000 J%
b0 M%
b1 M%
b10 M%
b11 M%
b100 M%
b101 M%
b110 M%
b111 M%
b1000 M%
b1001 M%
b1010 M%
b1011 M%
b1100 M%
b1101 M%
b1110 M%
b1111 M%
b10000 M%
b10001 M%
b10010 M%
b10011 M%
b10100 M%
b10101 M%
b10110 M%
b10111 M%
b11000 M%
b11001 M%
b11010 M%
b11011 M%
b11100 M%
b11101 M%
b11110 M%
b11111 M%
b100000 M%
b100001 M%
b100010 M%
b100011 M%
b100100 M%
b100101 M%
b100110 M%
b100111 M%
b101000 M%
b101001 M%
b101010 M%
b101011 M%
b101100 M%
b101101 M%
b101110 M%
b101111 M%
b110000 M%
b110001 M%
b110010 M%
b110011 M%
b110100 M%
b110101 M%
b110110 M%
b110111 M%
b111000 M%
b111001 M%
b111010 M%
b111011 M%
b111100 M%
b111101 M%
b111110 M%
b111111 M%
b1000000 M%
b1000001 M%
b1000010 M%
b1000011 M%
b1000100 M%
b1000101 M%
b1000110 M%
b1000111 M%
b1001000 M%
b1001001 M%
b1001010 M%
b1001011 M%
b1001100 M%
b1001101 M%
b1001110 M%
b1001111 M%
b1010000 M%
b1010001 M%
b1010010 M%
b1010011 M%
b1010100 M%
b1010101 M%
b1010110 M%
b1010111 M%
b1011000 M%
b1011001 M%
b1011010 M%
b1011011 M%
b1011100 M%
b1011101 M%
b1011110 M%
b1011111 M%
b1100000 M%
b1100001 M%
b1100010 M%
b1100011 M%
b1100100 M%
b1100101 M%
b1100110 M%
b1100111 M%
b1101000 M%
b1101001 M%
b1101010 M%
b1101011 M%
b1101100 M%
b1101101 M%
b1101110 M%
b1101111 M%
b1110000 M%
b1110001 M%
b1110010 M%
b1110011 M%
b1110100 M%
b1110101 M%
b1110110 M%
b1110111 M%
b1111000 M%
b1111001 M%
b1111010 M%
b1111011 M%
b1111100 M%
b1111101 M%
b1111110 M%
b1111111 M%
b10000000 M%
b10000001 M%
b10000010 M%
b10000011 M%
b10000100 M%
b10000101 M%
b10000110 M%
b10000111 M%
b10001000 M%
b10001001 M%
b10001010 M%
b10001011 M%
b10001100 M%
b10001101 M%
b10001110 M%
b10001111 M%
b10010000 M%
b10010001 M%
b10010010 M%
b10010011 M%
b10010100 M%
b10010101 M%
b10010110 M%
b10010111 M%
b10011000 M%
b10011001 M%
b10011010 M%
b10011011 M%
b10011100 M%
b10011101 M%
b10011110 M%
b10011111 M%
b10100000 M%
b10100001 M%
b10100010 M%
b10100011 M%
b10100100 M%
b10100101 M%
b10100110 M%
b10100111 M%
b10101000 M%
b10101001 M%
b10101010 M%
b10101011 M%
b10101100 M%
b10101101 M%
b10101110 M%
b10101111 M%
b10110000 M%
b10110001 M%
b10110010 M%
b10110011 M%
b10110100 M%
b10110101 M%
b10110110 M%
b10110111 M%
b10111000 M%
b10111001 M%
b10111010 M%
b10111011 M%
b10111100 M%
b10111101 M%
b10111110 M%
b10111111 M%
b11000000 M%
b11000001 M%
b11000010 M%
b11000011 M%
b11000100 M%
b11000101 M%
b11000110 M%
b11000111 M%
b11001000 M%
b11001001 M%
b11001010 M%
b11001011 M%
b11001100 M%
b11001101 M%
b11001110 M%
b11001111 M%
b11010000 M%
b11010001 M%
b11010010 M%
b11010011 M%
b11010100 M%
b11010101 M%
b11010110 M%
b11010111 M%
b11011000 M%
b11011001 M%
b11011010 M%
b11011011 M%
b11011100 M%
b11011101 M%
b11011110 M%
b11011111 M%
b11100000 M%
b11100001 M%
b11100010 M%
b11100011 M%
b11100100 M%
b11100101 M%
b11100110 M%
b11100111 M%
b11101000 M%
b11101001 M%
b11101010 M%
b11101011 M%
b11101100 M%
b11101101 M%
b11101110 M%
b11101111 M%
b11110000 M%
b11110001 M%
b11110010 M%
b11110011 M%
b11110100 M%
b11110101 M%
b11110110 M%
b11110111 M%
b11111000 M%
b11111001 M%
b11111010 M%
b11111011 M%
b11111100 M%
b11111101 M%
b11111110 M%
b11111111 M%
b100000000 M%
b0 O%
b1 O%
b10 O%
b11 O%
b100 O%
b101 O%
b110 O%
b111 O%
b1000 O%
b1001 O%
b1010 O%
b1011 O%
b1100 O%
b1101 O%
b1110 O%
b1111 O%
b10000 O%
b10001 O%
b10010 O%
b10011 O%
b10100 O%
b10101 O%
b10110 O%
b10111 O%
b11000 O%
b11001 O%
b11010 O%
b11011 O%
b11100 O%
b11101 O%
b11110 O%
b11111 O%
b100000 O%
b100001 O%
b100010 O%
b100011 O%
b100100 O%
b100101 O%
b100110 O%
b100111 O%
b101000 O%
b101001 O%
b101010 O%
b101011 O%
b101100 O%
b101101 O%
b101110 O%
b101111 O%
b110000 O%
b110001 O%
b110010 O%
b110011 O%
b110100 O%
b110101 O%
b110110 O%
b110111 O%
b111000 O%
b111001 O%
b111010 O%
b111011 O%
b111100 O%
b111101 O%
b111110 O%
b111111 O%
b1000000 O%
b1000001 O%
b1000010 O%
b1000011 O%
b1000100 O%
b1000101 O%
b1000110 O%
b1000111 O%
b1001000 O%
b1001001 O%
b1001010 O%
b1001011 O%
b1001100 O%
b1001101 O%
b1001110 O%
b1001111 O%
b1010000 O%
b1010001 O%
b1010010 O%
b1010011 O%
b1010100 O%
b1010101 O%
b1010110 O%
b1010111 O%
b1011000 O%
b1011001 O%
b1011010 O%
b1011011 O%
b1011100 O%
b1011101 O%
b1011110 O%
b1011111 O%
b1100000 O%
b1100001 O%
b1100010 O%
b1100011 O%
b1100100 O%
b1100101 O%
b1100110 O%
b1100111 O%
b1101000 O%
b1101001 O%
b1101010 O%
b1101011 O%
b1101100 O%
b1101101 O%
b1101110 O%
b1101111 O%
b1110000 O%
b1110001 O%
b1110010 O%
b1110011 O%
b1110100 O%
b1110101 O%
b1110110 O%
b1110111 O%
b1111000 O%
b1111001 O%
b1111010 O%
b1111011 O%
b1111100 O%
b1111101 O%
b1111110 O%
b1111111 O%
b10000000 O%
b10000001 O%
b10000010 O%
b10000011 O%
b10000100 O%
b10000101 O%
b10000110 O%
b10000111 O%
b10001000 O%
b10001001 O%
b10001010 O%
b10001011 O%
b10001100 O%
b10001101 O%
b10001110 O%
b10001111 O%
b10010000 O%
b10010001 O%
b10010010 O%
b10010011 O%
b10010100 O%
b10010101 O%
b10010110 O%
b10010111 O%
b10011000 O%
b10011001 O%
b10011010 O%
b10011011 O%
b10011100 O%
b10011101 O%
b10011110 O%
b10011111 O%
b10100000 O%
b10100001 O%
b10100010 O%
b10100011 O%
b10100100 O%
b10100101 O%
b10100110 O%
b10100111 O%
b10101000 O%
b10101001 O%
b10101010 O%
b10101011 O%
b10101100 O%
b10101101 O%
b10101110 O%
b10101111 O%
b10110000 O%
b10110001 O%
b10110010 O%
b10110011 O%
b10110100 O%
b10110101 O%
b10110110 O%
b10110111 O%
b10111000 O%
b10111001 O%
b10111010 O%
b10111011 O%
b10111100 O%
b10111101 O%
b10111110 O%
b10111111 O%
b11000000 O%
b11000001 O%
b11000010 O%
b11000011 O%
b11000100 O%
b11000101 O%
b11000110 O%
b11000111 O%
b11001000 O%
b11001001 O%
b11001010 O%
b11001011 O%
b11001100 O%
b11001101 O%
b11001110 O%
b11001111 O%
b11010000 O%
b11010001 O%
b11010010 O%
b11010011 O%
b11010100 O%
b11010101 O%
b11010110 O%
b11010111 O%
b11011000 O%
b11011001 O%
b11011010 O%
b11011011 O%
b11011100 O%
b11011101 O%
b11011110 O%
b11