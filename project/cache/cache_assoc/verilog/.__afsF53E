$date
	Fri Apr 22 15:32:11 2022
$end
$version
	ModelSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end

$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end

$scope task end_simulation $end
$upscope $end

$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end

$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module m0 $end
$var parameter 32 $! memtype $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 16 %! DataOut [15:0] $end
$var reg 1 &! Done $end
$var reg 1 '! Stall $end
$var reg 1 (! CacheHit $end
$var reg 1 )! err $end
$var wire 1 *! cache_data_in [15] $end
$var wire 1 +! cache_data_in [14] $end
$var wire 1 ,! cache_data_in [13] $end
$var wire 1 -! cache_data_in [12] $end
$var wire 1 .! cache_data_in [11] $end
$var wire 1 /! cache_data_in [10] $end
$var wire 1 0! cache_data_in [9] $end
$var wire 1 1! cache_data_in [8] $end
$var wire 1 2! cache_data_in [7] $end
$var wire 1 3! cache_data_in [6] $end
$var wire 1 4! cache_data_in [5] $end
$var wire 1 5! cache_data_in [4] $end
$var wire 1 6! cache_data_in [3] $end
$var wire 1 7! cache_data_in [2] $end
$var wire 1 8! cache_data_in [1] $end
$var wire 1 9! cache_data_in [0] $end
$var wire 1 :! cache_offset_in [2] $end
$var wire 1 ;! cache_offset_in [1] $end
$var wire 1 <! cache_offset_in [0] $end
$var wire 1 =! cache_hit_out_0 $end
$var wire 1 >! cache_dirty_out_0 $end
$var wire 1 ?! cache_valid_out_0 $end
$var wire 1 @! cache_tag_out_0 [4] $end
$var wire 1 A! cache_tag_out_0 [3] $end
$var wire 1 B! cache_tag_out_0 [2] $end
$var wire 1 C! cache_tag_out_0 [1] $end
$var wire 1 D! cache_tag_out_0 [0] $end
$var wire 1 E! cache_data_out_0 [15] $end
$var wire 1 F! cache_data_out_0 [14] $end
$var wire 1 G! cache_data_out_0 [13] $end
$var wire 1 H! cache_data_out_0 [12] $end
$var wire 1 I! cache_data_out_0 [11] $end
$var wire 1 J! cache_data_out_0 [10] $end
$var wire 1 K! cache_data_out_0 [9] $end
$var wire 1 L! cache_data_out_0 [8] $end
$var wire 1 M! cache_data_out_0 [7] $end
$var wire 1 N! cache_data_out_0 [6] $end
$var wire 1 O! cache_data_out_0 [5] $end
$var wire 1 P! cache_data_out_0 [4] $end
$var wire 1 Q! cache_data_out_0 [3] $end
$var wire 1 R! cache_data_out_0 [2] $end
$var wire 1 S! cache_data_out_0 [1] $end
$var wire 1 T! cache_data_out_0 [0] $end
$var wire 1 U! cache_err_0 $end
$var wire 1 V! cache_hit_out_1 $end
$var wire 1 W! cache_dirty_out_1 $end
$var wire 1 X! cache_valid_out_1 $end
$var wire 1 Y! cache_tag_out_1 [4] $end
$var wire 1 Z! cache_tag_out_1 [3] $end
$var wire 1 [! cache_tag_out_1 [2] $end
$var wire 1 \! cache_tag_out_1 [1] $end
$var wire 1 ]! cache_tag_out_1 [0] $end
$var wire 1 ^! cache_data_out_1 [15] $end
$var wire 1 _! cache_data_out_1 [14] $end
$var wire 1 `! cache_data_out_1 [13] $end
$var wire 1 a! cache_data_out_1 [12] $end
$var wire 1 b! cache_data_out_1 [11] $end
$var wire 1 c! cache_data_out_1 [10] $end
$var wire 1 d! cache_data_out_1 [9] $end
$var wire 1 e! cache_data_out_1 [8] $end
$var wire 1 f! cache_data_out_1 [7] $end
$var wire 1 g! cache_data_out_1 [6] $end
$var wire 1 h! cache_data_out_1 [5] $end
$var wire 1 i! cache_data_out_1 [4] $end
$var wire 1 j! cache_data_out_1 [3] $end
$var wire 1 k! cache_data_out_1 [2] $end
$var wire 1 l! cache_data_out_1 [1] $end
$var wire 1 m! cache_data_out_1 [0] $end
$var wire 1 n! cache_err_1 $end
$var wire 1 o! mem_addr [15] $end
$var wire 1 p! mem_addr [14] $end
$var wire 1 q! mem_addr [13] $end
$var wire 1 r! mem_addr [12] $end
$var wire 1 s! mem_addr [11] $end
$var wire 1 t! mem_addr [10] $end
$var wire 1 u! mem_addr [9] $end
$var wire 1 v! mem_addr [8] $end
$var wire 1 w! mem_addr [7] $end
$var wire 1 x! mem_addr [6] $end
$var wire 1 y! mem_addr [5] $end
$var wire 1 z! mem_addr [4] $end
$var wire 1 {! mem_addr [3] $end
$var wire 1 |! mem_addr [2] $end
$var wire 1 }! mem_addr [1] $end
$var wire 1 ~! mem_addr [0] $end
$var wire 1 !" mem_data_out [15] $end
$var wire 1 "" mem_data_out [14] $end
$var wire 1 #" mem_data_out [13] $end
$var wire 1 $" mem_data_out [12] $end
$var wire 1 %" mem_data_out [11] $end
$var wire 1 &" mem_data_out [10] $end
$var wire 1 '" mem_data_out [9] $end
$var wire 1 (" mem_data_out [8] $end
$var wire 1 )" mem_data_out [7] $end
$var wire 1 *" mem_data_out [6] $end
$var wire 1 +" mem_data_out [5] $end
$var wire 1 ," mem_data_out [4] $end
$var wire 1 -" mem_data_out [3] $end
$var wire 1 ." mem_data_out [2] $end
$var wire 1 /" mem_data_out [1] $end
$var wire 1 0" mem_data_out [0] $end
$var wire 1 1" mem_stall $end
$var wire 1 2" mem_busy [3] $end
$var wire 1 3" mem_busy [2] $end
$var wire 1 4" mem_busy [1] $end
$var wire 1 5" mem_busy [0] $end
$var wire 1 6" mem_err $end
$var wire 1 7" comp $end
$var wire 1 8" cache_write $end
$var wire 1 9" cache_offset_out [2] $end
$var wire 1 :" cache_offset_out [1] $end
$var wire 1 ;" cache_offset_out [0] $end
$var wire 1 <" cache_offset_select $end
$var wire 1 =" cache_data_in_select $end
$var wire 1 >" tag_select $end
$var wire 1 ?" mem_offset [2] $end
$var wire 1 @" mem_offset [1] $end
$var wire 1 A" mem_offset [0] $end
$var wire 1 B" mem_wr $end
$var wire 1 C" mem_rd $end
$var wire 1 D" cache_valid_in $end
$var wire 1 E" cache_ctrl_err $end
$var wire 1 F" enable $end
$var wire 1 G" cache_hit $end
$var wire 1 H" done $end
$var wire 1 I" stall_out $end
$var wire 1 J" victimway_in $end
$var wire 1 K" victimway_out $end
$var wire 1 L" flip_victimway $end
$var wire 1 M" cache_way_select $end
$var wire 1 N" cache_way_input $end
$var wire 1 O" cache_way_output $end
$var wire 1 P" enable_0 $end
$var wire 1 Q" enable_1 $end
$var wire 1 R" DataOut_temp [15] $end
$var wire 1 S" DataOut_temp [14] $end
$var wire 1 T" DataOut_temp [13] $end
$var wire 1 U" DataOut_temp [12] $end
$var wire 1 V" DataOut_temp [11] $end
$var wire 1 W" DataOut_temp [10] $end
$var wire 1 X" DataOut_temp [9] $end
$var wire 1 Y" DataOut_temp [8] $end
$var wire 1 Z" DataOut_temp [7] $end
$var wire 1 [" DataOut_temp [6] $end
$var wire 1 \" DataOut_temp [5] $end
$var wire 1 ]" DataOut_temp [4] $end
$var wire 1 ^" DataOut_temp [3] $end
$var wire 1 _" DataOut_temp [2] $end
$var wire 1 `" DataOut_temp [1] $end
$var wire 1 a" DataOut_temp [0] $end
$var wire 1 b" cache_tag_out_temp [4] $end
$var wire 1 c" cache_tag_out_temp [3] $end
$var wire 1 d" cache_tag_out_temp [2] $end
$var wire 1 e" cache_tag_out_temp [1] $end
$var wire 1 f" cache_tag_out_temp [0] $end
$var wire 1 g" cache_hit_out_temp $end
$var wire 1 h" cache_dirty_out_temp $end
$var wire 1 i" cache_valid_out_temp $end
$var wire 1 j" cache_err_temp $end

$scope module victimway $end
$var wire 1 K" q $end
$var wire 1 J" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k" state $end
$upscope $end

$scope module dff_enable $end
$var wire 1 O" q $end
$var wire 1 N" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l" state $end
$upscope $end

$scope module c0 $end
$var parameter 32 m" cache_id $end
$var wire 1 P" enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 :! offset [2] $end
$var wire 1 ;! offset [1] $end
$var wire 1 <! offset [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 7" comp $end
$var wire 1 8" write $end
$var wire 1 D" valid_in $end
$var wire 1 @! tag_out [4] $end
$var wire 1 A! tag_out [3] $end
$var wire 1 B! tag_out [2] $end
$var wire 1 C! tag_out [1] $end
$var wire 1 D! tag_out [0] $end
$var wire 1 E! data_out [15] $end
$var wire 1 F! data_out [14] $end
$var wire 1 G! data_out [13] $end
$var wire 1 H! data_out [12] $end
$var wire 1 I! data_out [11] $end
$var wire 1 J! data_out [10] $end
$var wire 1 K! data_out [9] $end
$var wire 1 L! data_out [8] $end
$var wire 1 M! data_out [7] $end
$var wire 1 N! data_out [6] $end
$var wire 1 O! data_out [5] $end
$var wire 1 P! data_out [4] $end
$var wire 1 Q! data_out [3] $end
$var wire 1 R! data_out [2] $end
$var wire 1 S! data_out [1] $end
$var wire 1 T! data_out [0] $end
$var wire 1 =! hit $end
$var wire 1 >! dirty $end
$var wire 1 ?! valid $end
$var wire 1 U! err $end
$var wire 1 n" ram0_id [4] $end
$var wire 1 o" ram0_id [3] $end
$var wire 1 p" ram0_id [2] $end
$var wire 1 q" ram0_id [1] $end
$var wire 1 r" ram0_id [0] $end
$var wire 1 s" ram1_id [4] $end
$var wire 1 t" ram1_id [3] $end
$var wire 1 u" ram1_id [2] $end
$var wire 1 v" ram1_id [1] $end
$var wire 1 w" ram1_id [0] $end
$var wire 1 x" ram2_id [4] $end
$var wire 1 y" ram2_id [3] $end
$var wire 1 z" ram2_id [2] $end
$var wire 1 {" ram2_id [1] $end
$var wire 1 |" ram2_id [0] $end
$var wire 1 }" ram3_id [4] $end
$var wire 1 ~" ram3_id [3] $end
$var wire 1 !# ram3_id [2] $end
$var wire 1 "# ram3_id [1] $end
$var wire 1 ## ram3_id [0] $end
$var wire 1 $# ram4_id [4] $end
$var wire 1 %# ram4_id [3] $end
$var wire 1 &# ram4_id [2] $end
$var wire 1 '# ram4_id [1] $end
$var wire 1 (# ram4_id [0] $end
$var wire 1 )# ram5_id [4] $end
$var wire 1 *# ram5_id [3] $end
$var wire 1 +# ram5_id [2] $end
$var wire 1 ,# ram5_id [1] $end
$var wire 1 -# ram5_id [0] $end
$var wire 1 .# w0 [15] $end
$var wire 1 /# w0 [14] $end
$var wire 1 0# w0 [13] $end
$var wire 1 1# w0 [12] $end
$var wire 1 2# w0 [11] $end
$var wire 1 3# w0 [10] $end
$var wire 1 4# w0 [9] $end
$var wire 1 5# w0 [8] $end
$var wire 1 6# w0 [7] $end
$var wire 1 7# w0 [6] $end
$var wire 1 8# w0 [5] $end
$var wire 1 9# w0 [4] $end
$var wire 1 :# w0 [3] $end
$var wire 1 ;# w0 [2] $end
$var wire 1 <# w0 [1] $end
$var wire 1 =# w0 [0] $end
$var wire 1 ># w1 [15] $end
$var wire 1 ?# w1 [14] $end
$var wire 1 @# w1 [13] $end
$var wire 1 A# w1 [12] $end
$var wire 1 B# w1 [11] $end
$var wire 1 C# w1 [10] $end
$var wire 1 D# w1 [9] $end
$var wire 1 E# w1 [8] $end
$var wire 1 F# w1 [7] $end
$var wire 1 G# w1 [6] $end
$var wire 1 H# w1 [5] $end
$var wire 1 I# w1 [4] $end
$var wire 1 J# w1 [3] $end
$var wire 1 K# w1 [2] $end
$var wire 1 L# w1 [1] $end
$var wire 1 M# w1 [0] $end
$var wire 1 N# w2 [15] $end
$var wire 1 O# w2 [14] $end
$var wire 1 P# w2 [13] $end
$var wire 1 Q# w2 [12] $end
$var wire 1 R# w2 [11] $end
$var wire 1 S# w2 [10] $end
$var wire 1 T# w2 [9] $end
$var wire 1 U# w2 [8] $end
$var wire 1 V# w2 [7] $end
$var wire 1 W# w2 [6] $end
$var wire 1 X# w2 [5] $end
$var wire 1 Y# w2 [4] $end
$var wire 1 Z# w2 [3] $end
$var wire 1 [# w2 [2] $end
$var wire 1 \# w2 [1] $end
$var wire 1 ]# w2 [0] $end
$var wire 1 ^# w3 [15] $end
$var wire 1 _# w3 [14] $end
$var wire 1 `# w3 [13] $end
$var wire 1 a# w3 [12] $end
$var wire 1 b# w3 [11] $end
$var wire 1 c# w3 [10] $end
$var wire 1 d# w3 [9] $end
$var wire 1 e# w3 [8] $end
$var wire 1 f# w3 [7] $end
$var wire 1 g# w3 [6] $end
$var wire 1 h# w3 [5] $end
$var wire 1 i# w3 [4] $end
$var wire 1 j# w3 [3] $end
$var wire 1 k# w3 [2] $end
$var wire 1 l# w3 [1] $end
$var wire 1 m# w3 [0] $end
$var wire 1 n# go $end
$var wire 1 o# match $end
$var wire 1 p# wr_word0 $end
$var wire 1 q# wr_word1 $end
$var wire 1 r# wr_word2 $end
$var wire 1 s# wr_word3 $end
$var wire 1 t# wr_dirty $end
$var wire 1 u# wr_tag $end
$var wire 1 v# wr_valid $end
$var wire 1 w# dirty_in $end
$var wire 1 x# dirtybit $end
$var wire 1 y# validbit $end

$scope module mem_w0 $end
$var parameter 32 z# Size $end
$var wire 1 .# data_out [15] $end
$var wire 1 /# data_out [14] $end
$var wire 1 0# data_out [13] $end
$var wire 1 1# data_out [12] $end
$var wire 1 2# data_out [11] $end
$var wire 1 3# data_out [10] $end
$var wire 1 4# data_out [9] $end
$var wire 1 5# data_out [8] $end
$var wire 1 6# data_out [7] $end
$var wire 1 7# data_out [6] $end
$var wire 1 8# data_out [5] $end
$var wire 1 9# data_out [4] $end
$var wire 1 :# data_out [3] $end
$var wire 1 ;# data_out [2] $end
$var wire 1 <# data_out [1] $end
$var wire 1 =# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 p# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 n" file_id [4] $end
$var wire 1 o" file_id [3] $end
$var wire 1 p" file_id [2] $end
$var wire 1 q" file_id [1] $end
$var wire 1 r" file_id [0] $end
$var integer 32 {# mcd $end
$var integer 32 |# i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 }# Size $end
$var wire 1 ># data_out [15] $end
$var wire 1 ?# data_out [14] $end
$var wire 1 @# data_out [13] $end
$var wire 1 A# data_out [12] $end
$var wire 1 B# data_out [11] $end
$var wire 1 C# data_out [10] $end
$var wire 1 D# data_out [9] $end
$var wire 1 E# data_out [8] $end
$var wire 1 F# data_out [7] $end
$var wire 1 G# data_out [6] $end
$var wire 1 H# data_out [5] $end
$var wire 1 I# data_out [4] $end
$var wire 1 J# data_out [3] $end
$var wire 1 K# data_out [2] $end
$var wire 1 L# data_out [1] $end
$var wire 1 M# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 q# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 s" file_id [4] $end
$var wire 1 t" file_id [3] $end
$var wire 1 u" file_id [2] $end
$var wire 1 v" file_id [1] $end
$var wire 1 w" file_id [0] $end
$var integer 32 ~# mcd $end
$var integer 32 !$ i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 "$ Size $end
$var wire 1 N# data_out [15] $end
$var wire 1 O# data_out [14] $end
$var wire 1 P# data_out [13] $end
$var wire 1 Q# data_out [12] $end
$var wire 1 R# data_out [11] $end
$var wire 1 S# data_out [10] $end
$var wire 1 T# data_out [9] $end
$var wire 1 U# data_out [8] $end
$var wire 1 V# data_out [7] $end
$var wire 1 W# data_out [6] $end
$var wire 1 X# data_out [5] $end
$var wire 1 Y# data_out [4] $end
$var wire 1 Z# data_out [3] $end
$var wire 1 [# data_out [2] $end
$var wire 1 \# data_out [1] $end
$var wire 1 ]# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 r# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 x" file_id [4] $end
$var wire 1 y" file_id [3] $end
$var wire 1 z" file_id [2] $end
$var wire 1 {" file_id [1] $end
$var wire 1 |" file_id [0] $end
$var integer 32 #$ mcd $end
$var integer 32 $$ i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 %$ Size $end
$var wire 1 ^# data_out [15] $end
$var wire 1 _# data_out [14] $end
$var wire 1 `# data_out [13] $end
$var wire 1 a# data_out [12] $end
$var wire 1 b# data_out [11] $end
$var wire 1 c# data_out [10] $end
$var wire 1 d# data_out [9] $end
$var wire 1 e# data_out [8] $end
$var wire 1 f# data_out [7] $end
$var wire 1 g# data_out [6] $end
$var wire 1 h# data_out [5] $end
$var wire 1 i# data_out [4] $end
$var wire 1 j# data_out [3] $end
$var wire 1 k# data_out [2] $end
$var wire 1 l# data_out [1] $end
$var wire 1 m# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 s# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 }" file_id [4] $end
$var wire 1 ~" file_id [3] $end
$var wire 1 !# file_id [2] $end
$var wire 1 "# file_id [1] $end
$var wire 1 ## file_id [0] $end
$var integer 32 &$ mcd $end
$var integer 32 '$ i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 ($ Size $end
$var wire 1 @! data_out [4] $end
$var wire 1 A! data_out [3] $end
$var wire 1 B! data_out [2] $end
$var wire 1 C! data_out [1] $end
$var wire 1 D! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 u# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 $# file_id [4] $end
$var wire 1 %# file_id [3] $end
$var wire 1 &# file_id [2] $end
$var wire 1 '# file_id [1] $end
$var wire 1 (# file_id [0] $end
$var integer 32 )$ mcd $end
$var integer 32 *$ i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 +$ Size $end
$var wire 1 x# data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 w# data_in [0] $end
$var wire 1 t# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 )# file_id [4] $end
$var wire 1 *# file_id [3] $end
$var wire 1 +# file_id [2] $end
$var wire 1 ,# file_id [1] $end
$var wire 1 -# file_id [0] $end
$var integer 32 ,$ mcd $end
$var integer 32 -$ i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 y# data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 D" data_in $end
$var wire 1 v# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 n" file_id [4] $end
$var wire 1 o" file_id [3] $end
$var wire 1 p" file_id [2] $end
$var wire 1 q" file_id [1] $end
$var wire 1 r" file_id [0] $end
$var integer 32 .$ mcd $end
$var integer 32 /$ i $end
$upscope $end
$upscope $end

$scope module c1 $end
$var parameter 32 0$ cache_id $end
$var wire 1 Q" enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y tag_in [4] $end
$var wire 1 Z tag_in [3] $end
$var wire 1 [ tag_in [2] $end
$var wire 1 \ tag_in [1] $end
$var wire 1 ] tag_in [0] $end
$var wire 1 ^ index [7] $end
$var wire 1 _ index [6] $end
$var wire 1 ` index [5] $end
$var wire 1 a index [4] $end
$var wire 1 b index [3] $end
$var wire 1 c index [2] $end
$var wire 1 d index [1] $end
$var wire 1 e index [0] $end
$var wire 1 :! offset [2] $end
$var wire 1 ;! offset [1] $end
$var wire 1 <! offset [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 7" comp $end
$var wire 1 8" write $end
$var wire 1 D" valid_in $end
$var wire 1 Y! tag_out [4] $end
$var wire 1 Z! tag_out [3] $end
$var wire 1 [! tag_out [2] $end
$var wire 1 \! tag_out [1] $end
$var wire 1 ]! tag_out [0] $end
$var wire 1 ^! data_out [15] $end
$var wire 1 _! data_out [14] $end
$var wire 1 `! data_out [13] $end
$var wire 1 a! data_out [12] $end
$var wire 1 b! data_out [11] $end
$var wire 1 c! data_out [10] $end
$var wire 1 d! data_out [9] $end
$var wire 1 e! data_out [8] $end
$var wire 1 f! data_out [7] $end
$var wire 1 g! data_out [6] $end
$var wire 1 h! data_out [5] $end
$var wire 1 i! data_out [4] $end
$var wire 1 j! data_out [3] $end
$var wire 1 k! data_out [2] $end
$var wire 1 l! data_out [1] $end
$var wire 1 m! data_out [0] $end
$var wire 1 V! hit $end
$var wire 1 W! dirty $end
$var wire 1 X! valid $end
$var wire 1 n! err $end
$var wire 1 1$ ram0_id [4] $end
$var wire 1 2$ ram0_id [3] $end
$var wire 1 3$ ram0_id [2] $end
$var wire 1 4$ ram0_id [1] $end
$var wire 1 5$ ram0_id [0] $end
$var wire 1 6$ ram1_id [4] $end
$var wire 1 7$ ram1_id [3] $end
$var wire 1 8$ ram1_id [2] $end
$var wire 1 9$ ram1_id [1] $end
$var wire 1 :$ ram1_id [0] $end
$var wire 1 ;$ ram2_id [4] $end
$var wire 1 <$ ram2_id [3] $end
$var wire 1 =$ ram2_id [2] $end
$var wire 1 >$ ram2_id [1] $end
$var wire 1 ?$ ram2_id [0] $end
$var wire 1 @$ ram3_id [4] $end
$var wire 1 A$ ram3_id [3] $end
$var wire 1 B$ ram3_id [2] $end
$var wire 1 C$ ram3_id [1] $end
$var wire 1 D$ ram3_id [0] $end
$var wire 1 E$ ram4_id [4] $end
$var wire 1 F$ ram4_id [3] $end
$var wire 1 G$ ram4_id [2] $end
$var wire 1 H$ ram4_id [1] $end
$var wire 1 I$ ram4_id [0] $end
$var wire 1 J$ ram5_id [4] $end
$var wire 1 K$ ram5_id [3] $end
$var wire 1 L$ ram5_id [2] $end
$var wire 1 M$ ram5_id [1] $end
$var wire 1 N$ ram5_id [0] $end
$var wire 1 O$ w0 [15] $end
$var wire 1 P$ w0 [14] $end
$var wire 1 Q$ w0 [13] $end
$var wire 1 R$ w0 [12] $end
$var wire 1 S$ w0 [11] $end
$var wire 1 T$ w0 [10] $end
$var wire 1 U$ w0 [9] $end
$var wire 1 V$ w0 [8] $end
$var wire 1 W$ w0 [7] $end
$var wire 1 X$ w0 [6] $end
$var wire 1 Y$ w0 [5] $end
$var wire 1 Z$ w0 [4] $end
$var wire 1 [$ w0 [3] $end
$var wire 1 \$ w0 [2] $end
$var wire 1 ]$ w0 [1] $end
$var wire 1 ^$ w0 [0] $end
$var wire 1 _$ w1 [15] $end
$var wire 1 `$ w1 [14] $end
$var wire 1 a$ w1 [13] $end
$var wire 1 b$ w1 [12] $end
$var wire 1 c$ w1 [11] $end
$var wire 1 d$ w1 [10] $end
$var wire 1 e$ w1 [9] $end
$var wire 1 f$ w1 [8] $end
$var wire 1 g$ w1 [7] $end
$var wire 1 h$ w1 [6] $end
$var wire 1 i$ w1 [5] $end
$var wire 1 j$ w1 [4] $end
$var wire 1 k$ w1 [3] $end
$var wire 1 l$ w1 [2] $end
$var wire 1 m$ w1 [1] $end
$var wire 1 n$ w1 [0] $end
$var wire 1 o$ w2 [15] $end
$var wire 1 p$ w2 [14] $end
$var wire 1 q$ w2 [13] $end
$var wire 1 r$ w2 [12] $end
$var wire 1 s$ w2 [11] $end
$var wire 1 t$ w2 [10] $end
$var wire 1 u$ w2 [9] $end
$var wire 1 v$ w2 [8] $end
$var wire 1 w$ w2 [7] $end
$var wire 1 x$ w2 [6] $end
$var wire 1 y$ w2 [5] $end
$var wire 1 z$ w2 [4] $end
$var wire 1 {$ w2 [3] $end
$var wire 1 |$ w2 [2] $end
$var wire 1 }$ w2 [1] $end
$var wire 1 ~$ w2 [0] $end
$var wire 1 !% w3 [15] $end
$var wire 1 "% w3 [14] $end
$var wire 1 #% w3 [13] $end
$var wire 1 $% w3 [12] $end
$var wire 1 %% w3 [11] $end
$var wire 1 &% w3 [10] $end
$var wire 1 '% w3 [9] $end
$var wire 1 (% w3 [8] $end
$var wire 1 )% w3 [7] $end
$var wire 1 *% w3 [6] $end
$var wire 1 +% w3 [5] $end
$var wire 1 ,% w3 [4] $end
$var wire 1 -% w3 [3] $end
$var wire 1 .% w3 [2] $end
$var wire 1 /% w3 [1] $end
$var wire 1 0% w3 [0] $end
$var wire 1 1% go $end
$var wire 1 2% match $end
$var wire 1 3% wr_word0 $end
$var wire 1 4% wr_word1 $end
$var wire 1 5% wr_word2 $end
$var wire 1 6% wr_word3 $end
$var wire 1 7% wr_dirty $end
$var wire 1 8% wr_tag $end
$var wire 1 9% wr_valid $end
$var wire 1 :% dirty_in $end
$var wire 1 ;% dirtybit $end
$var wire 1 <% validbit $end

$scope module mem_w0 $end
$var parameter 32 =% Size $end
$var wire 1 O$ data_out [15] $end
$var wire 1 P$ data_out [14] $end
$var wire 1 Q$ data_out [13] $end
$var wire 1 R$ data_out [12] $end
$var wire 1 S$ data_out [11] $end
$var wire 1 T$ data_out [10] $end
$var wire 1 U$ data_out [9] $end
$var wire 1 V$ data_out [8] $end
$var wire 1 W$ data_out [7] $end
$var wire 1 X$ data_out [6] $end
$var wire 1 Y$ data_out [5] $end
$var wire 1 Z$ data_out [4] $end
$var wire 1 [$ data_out [3] $end
$var wire 1 \$ data_out [2] $end
$var wire 1 ]$ data_out [1] $end
$var wire 1 ^$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 3% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 1$ file_id [4] $end
$var wire 1 2$ file_id [3] $end
$var wire 1 3$ file_id [2] $end
$var wire 1 4$ file_id [1] $end
$var wire 1 5$ file_id [0] $end
$var integer 32 >% mcd $end
$var integer 32 ?% i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 @% Size $end
$var wire 1 _$ data_out [15] $end
$var wire 1 `$ data_out [14] $end
$var wire 1 a$ data_out [13] $end
$var wire 1 b$ data_out [12] $end
$var wire 1 c$ data_out [11] $end
$var wire 1 d$ data_out [10] $end
$var wire 1 e$ data_out [9] $end
$var wire 1 f$ data_out [8] $end
$var wire 1 g$ data_out [7] $end
$var wire 1 h$ data_out [6] $end
$var wire 1 i$ data_out [5] $end
$var wire 1 j$ data_out [4] $end
$var wire 1 k$ data_out [3] $end
$var wire 1 l$ data_out [2] $end
$var wire 1 m$ data_out [1] $end
$var wire 1 n$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 4% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 6$ file_id [4] $end
$var wire 1 7$ file_id [3] $end
$var wire 1 8$ file_id [2] $end
$var wire 1 9$ file_id [1] $end
$var wire 1 :$ file_id [0] $end
$var integer 32 A% mcd $end
$var integer 32 B% i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 C% Size $end
$var wire 1 o$ data_out [15] $end
$var wire 1 p$ data_out [14] $end
$var wire 1 q$ data_out [13] $end
$var wire 1 r$ data_out [12] $end
$var wire 1 s$ data_out [11] $end
$var wire 1 t$ data_out [10] $end
$var wire 1 u$ data_out [9] $end
$var wire 1 v$ data_out [8] $end
$var wire 1 w$ data_out [7] $end
$var wire 1 x$ data_out [6] $end
$var wire 1 y$ data_out [5] $end
$var wire 1 z$ data_out [4] $end
$var wire 1 {$ data_out [3] $end
$var wire 1 |$ data_out [2] $end
$var wire 1 }$ data_out [1] $end
$var wire 1 ~$ data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 5% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ;$ file_id [4] $end
$var wire 1 <$ file_id [3] $end
$var wire 1 =$ file_id [2] $end
$var wire 1 >$ file_id [1] $end
$var wire 1 ?$ file_id [0] $end
$var integer 32 D% mcd $end
$var integer 32 E% i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 F% Size $end
$var wire 1 !% data_out [15] $end
$var wire 1 "% data_out [14] $end
$var wire 1 #% data_out [13] $end
$var wire 1 $% data_out [12] $end
$var wire 1 %% data_out [11] $end
$var wire 1 &% data_out [10] $end
$var wire 1 '% data_out [9] $end
$var wire 1 (% data_out [8] $end
$var wire 1 )% data_out [7] $end
$var wire 1 *% data_out [6] $end
$var wire 1 +% data_out [5] $end
$var wire 1 ,% data_out [4] $end
$var wire 1 -% data_out [3] $end
$var wire 1 .% data_out [2] $end
$var wire 1 /% data_out [1] $end
$var wire 1 0% data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 *! data_in [15] $end
$var wire 1 +! data_in [14] $end
$var wire 1 ,! data_in [13] $end
$var wire 1 -! data_in [12] $end
$var wire 1 .! data_in [11] $end
$var wire 1 /! data_in [10] $end
$var wire 1 0! data_in [9] $end
$var wire 1 1! data_in [8] $end
$var wire 1 2! data_in [7] $end
$var wire 1 3! data_in [6] $end
$var wire 1 4! data_in [5] $end
$var wire 1 5! data_in [4] $end
$var wire 1 6! data_in [3] $end
$var wire 1 7! data_in [2] $end
$var wire 1 8! data_in [1] $end
$var wire 1 9! data_in [0] $end
$var wire 1 6% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 @$ file_id [4] $end
$var wire 1 A$ file_id [3] $end
$var wire 1 B$ file_id [2] $end
$var wire 1 C$ file_id [1] $end
$var wire 1 D$ file_id [0] $end
$var integer 32 G% mcd $end
$var integer 32 H% i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 I% Size $end
$var wire 1 Y! data_out [4] $end
$var wire 1 Z! data_out [3] $end
$var wire 1 [! data_out [2] $end
$var wire 1 \! data_out [1] $end
$var wire 1 ]! data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 Y data_in [4] $end
$var wire 1 Z data_in [3] $end
$var wire 1 [ data_in [2] $end
$var wire 1 \ data_in [1] $end
$var wire 1 ] data_in [0] $end
$var wire 1 8% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 E$ file_id [4] $end
$var wire 1 F$ file_id [3] $end
$var wire 1 G$ file_id [2] $end
$var wire 1 H$ file_id [1] $end
$var wire 1 I$ file_id [0] $end
$var integer 32 J% mcd $end
$var integer 32 K% i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 L% Size $end
$var wire 1 ;% data_out [0] $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 :% data_in [0] $end
$var wire 1 7% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 J$ file_id [4] $end
$var wire 1 K$ file_id [3] $end
$var wire 1 L$ file_id [2] $end
$var wire 1 M$ file_id [1] $end
$var wire 1 N$ file_id [0] $end
$var integer 32 M% mcd $end
$var integer 32 N% i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 <% data_out $end
$var wire 1 ^ addr [7] $end
$var wire 1 _ addr [6] $end
$var wire 1 ` addr [5] $end
$var wire 1 a addr [4] $end
$var wire 1 b addr [3] $end
$var wire 1 c addr [2] $end
$var wire 1 d addr [1] $end
$var wire 1 e addr [0] $end
$var wire 1 D" data_in $end
$var wire 1 9% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 1$ file_id [4] $end
$var wire 1 2$ file_id [3] $end
$var wire 1 3$ file_id [2] $end
$var wire 1 4$ file_id [1] $end
$var wire 1 5$ file_id [0] $end
$var integer 32 O% mcd $end
$var integer 32 P% i $end
$upscope $end
$upscope $end

$scope module mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 o! addr [15] $end
$var wire 1 p! addr [14] $end
$var wire 1 q! addr [13] $end
$var wire 1 r! addr [12] $end
$var wire 1 s! addr [11] $end
$var wire 1 t! addr [10] $end
$var wire 1 u! addr [9] $end
$var wire 1 v! addr [8] $end
$var wire 1 w! addr [7] $end
$var wire 1 x! addr [6] $end
$var wire 1 y! addr [5] $end
$var wire 1 z! addr [4] $end
$var wire 1 {! addr [3] $end
$var wire 1 |! addr [2] $end
$var wire 1 }! addr [1] $end
$var wire 1 ~! addr [0] $end
$var wire 1 R" data_in [15] $end
$var wire 1 S" data_in [14] $end
$var wire 1 T" data_in [13] $end
$var wire 1 U" data_in [12] $end
$var wire 1 V" data_in [11] $end
$var wire 1 W" data_in [10] $end
$var wire 1 X" data_in [9] $end
$var wire 1 Y" data_in [8] $end
$var wire 1 Z" data_in [7] $end
$var wire 1 [" data_in [6] $end
$var wire 1 \" data_in [5] $end
$var wire 1 ]" data_in [4] $end
$var wire 1 ^" data_in [3] $end
$var wire 1 _" data_in [2] $end
$var wire 1 `" data_in [1] $end
$var wire 1 a" data_in [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 !" data_out [15] $end
$var wire 1 "" data_out [14] $end
$var wire 1 #" data_out [13] $end
$var wire 1 $" data_out [12] $end
$var wire 1 %" data_out [11] $end
$var wire 1 &" data_out [10] $end
$var wire 1 '" data_out [9] $end
$var wire 1 (" data_out [8] $end
$var wire 1 )" data_out [7] $end
$var wire 1 *" data_out [6] $end
$var wire 1 +" data_out [5] $end
$var wire 1 ," data_out [4] $end
$var wire 1 -" data_out [3] $end
$var wire 1 ." data_out [2] $end
$var wire 1 /" data_out [1] $end
$var wire 1 0" data_out [0] $end
$var wire 1 1" stall $end
$var wire 1 2" busy [3] $end
$var wire 1 3" busy [2] $end
$var wire 1 4" busy [1] $end
$var wire 1 5" busy [0] $end
$var wire 1 6" err $end
$var wire 1 Q% data0_out [15] $end
$var wire 1 R% data0_out [14] $end
$var wire 1 S% data0_out [13] $end
$var wire 1 T% data0_out [12] $end
$var wire 1 U% data0_out [11] $end
$var wire 1 V% data0_out [10] $end
$var wire 1 W% data0_out [9] $end
$var wire 1 X% data0_out [8] $end
$var wire 1 Y% data0_out [7] $end
$var wire 1 Z% data0_out [6] $end
$var wire 1 [% data0_out [5] $end
$var wire 1 \% data0_out [4] $end
$var wire 1 ]% data0_out [3] $end
$var wire 1 ^% data0_out [2] $end
$var wire 1 _% data0_out [1] $end
$var wire 1 `% data0_out [0] $end
$var wire 1 a% data1_out [15] $end
$var wire 1 b% data1_out [14] $end
$var wire 1 c% data1_out [13] $end
$var wire 1 d% data1_out [12] $end
$var wire 1 e% data1_out [11] $end
$var wire 1 f% data1_out [10] $end
$var wire 1 g% data1_out [9] $end
$var wire 1 h% data1_out [8] $end
$var wire 1 i% data1_out [7] $end
$var wire 1 j% data1_out [6] $end
$var wire 1 k% data1_out [5] $end
$var wire 1 l% data1_out [4] $end
$var wire 1 m% data1_out [3] $end
$var wire 1 n% data1_out [2] $end
$var wire 1 o% data1_out [1] $end
$var wire 1 p% data1_out [0] $end
$var wire 1 q% data2_out [15] $end
$var wire 1 r% data2_out [14] $end
$var wire 1 s% data2_out [13] $end
$var wire 1 t% data2_out [12] $end
$var wire 1 u% data2_out [11] $end
$var wire 1 v% data2_out [10] $end
$var wire 1 w% data2_out [9] $end
$var wire 1 x% data2_out [8] $end
$var wire 1 y% data2_out [7] $end
$var wire 1 z% data2_out [6] $end
$var wire 1 {% data2_out [5] $end
$var wire 1 |% data2_out [4] $end
$var wire 1 }% data2_out [3] $end
$var wire 1 ~% data2_out [2] $end
$var wire 1 !& data2_out [1] $end
$var wire 1 "& data2_out [0] $end
$var wire 1 #& data3_out [15] $end
$var wire 1 $& data3_out [14] $end
$var wire 1 %& data3_out [13] $end
$var wire 1 && data3_out [12] $end
$var wire 1 '& data3_out [11] $end
$var wire 1 (& data3_out [10] $end
$var wire 1 )& data3_out [9] $end
$var wire 1 *& data3_out [8] $end
$var wire 1 +& data3_out [7] $end
$var wire 1 ,& data3_out [6] $end
$var wire 1 -& data3_out [5] $end
$var wire 1 .& data3_out [4] $end
$var wire 1 /& data3_out [3] $end
$var wire 1 0& data3_out [2] $end
$var wire 1 1& data3_out [1] $end
$var wire 1 2& data3_out [0] $end
$var wire 1 3& err0 $end
$var wire 1 4& err1 $end
$var wire 1 5& err2 $end
$var wire 1 6& err3 $end
$var wire 1 7& sel0 $end
$var wire 1 8& sel1 $end
$var wire 1 9& sel2 $end
$var wire 1 :& sel3 $end
$var wire 1 ;& en [3] $end
$var wire 1 <& en [2] $end
$var wire 1 =& en [1] $end
$var wire 1 >& en [0] $end
$var wire 1 ?& bsy0 [3] $end
$var wire 1 @& bsy0 [2] $end
$var wire 1 A& bsy0 [1] $end
$var wire 1 B& bsy0 [0] $end
$var wire 1 C& bsy1 [3] $end
$var wire 1 D& bsy1 [2] $end
$var wire 1 E& bsy1 [1] $end
$var wire 1 F& bsy1 [0] $end
$var wire 1 G& bsy2 [3] $end
$var wire 1 H& bsy2 [2] $end
$var wire 1 I& bsy2 [1] $end
$var wire 1 J& bsy2 [0] $end

$scope module m0 $end
$var wire 1 Q% data_out [15] $end
$var wire 1 R% data_out [14] $end
$var wire 1 S% data_out [13] $end
$var wire 1 T% data_out [12] $end
$var wire 1 U% data_out [11] $end
$var wire 1 V% data_out [10] $end
$var wire 1 W% data_out [9] $end
$var wire 1 X% data_out [8] $end
$var wire 1 Y% data_out [7] $end
$var wire 1 Z% data_out [6] $end
$var wire 1 [% data_out [5] $end
$var wire 1 \% data_out [4] $end
$var wire 1 ]% data_out [3] $end
$var wire 1 ^% data_out [2] $end
$var wire 1 _% data_out [1] $end
$var wire 1 `% data_out [0] $end
$var wire 1 3& err $end
$var wire 1 R" data_in [15] $end
$var wire 1 S" data_in [14] $end
$var wire 1 T" data_in [13] $end
$var wire 1 U" data_in [12] $end
$var wire 1 V" data_in [11] $end
$var wire 1 W" data_in [10] $end
$var wire 1 X" data_in [9] $end
$var wire 1 Y" data_in [8] $end
$var wire 1 Z" data_in [7] $end
$var wire 1 [" data_in [6] $end
$var wire 1 \" data_in [5] $end
$var wire 1 ]" data_in [4] $end
$var wire 1 ^" data_in [3] $end
$var wire 1 _" data_in [2] $end
$var wire 1 `" data_in [1] $end
$var wire 1 a" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 >& enable $end
$var wire 1 { create_dump $end
$var wire 1 K& bank_id [1] $end
$var wire 1 L& bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M& loaded $end
$var reg 16 N& largest [15:0] $end
$var wire 1 O& addr_1c [13] $end
$var wire 1 P& addr_1c [12] $end
$var wire 1 Q& addr_1c [11] $end
$var wire 1 R& addr_1c [10] $end
$var wire 1 S& addr_1c [9] $end
$var wire 1 T& addr_1c [8] $end
$var wire 1 U& addr_1c [7] $end
$var wire 1 V& addr_1c [6] $end
$var wire 1 W& addr_1c [5] $end
$var wire 1 X& addr_1c [4] $end
$var wire 1 Y& addr_1c [3] $end
$var wire 1 Z& addr_1c [2] $end
$var wire 1 [& addr_1c [1] $end
$var wire 1 \& addr_1c [0] $end
$var wire 1 ]& data_in_1c [15] $end
$var wire 1 ^& data_in_1c [14] $end
$var wire 1 _& data_in_1c [13] $end
$var wire 1 `& data_in_1c [12] $end
$var wire 1 a& data_in_1c [11] $end
$var wire 1 b& data_in_1c [10] $end
$var wire 1 c& data_in_1c [9] $end
$var wire 1 d& data_in_1c [8] $end
$var wire 1 e& data_in_1c [7] $end
$var wire 1 f& data_in_1c [6] $end
$var wire 1 g& data_in_1c [5] $end
$var wire 1 h& data_in_1c [4] $end
$var wire 1 i& data_in_1c [3] $end
$var wire 1 j& data_in_1c [2] $end
$var wire 1 k& data_in_1c [1] $end
$var wire 1 l& data_in_1c [0] $end
$var wire 1 m& rd0 $end
$var wire 1 n& rd1 $end
$var wire 1 o& rd2 $end
$var wire 1 p& rd3 $end
$var wire 1 q& wr0 $end
$var wire 1 r& wr1 $end
$var wire 1 s& wr2 $end
$var wire 1 t& wr3 $end
$var wire 1 u& busy $end
$var integer 32 v& mcd $end
$var integer 32 w& largeout $end
$var integer 32 x& i $end
$var wire 1 y& data_out_1c [15] $end
$var wire 1 z& data_out_1c [14] $end
$var wire 1 {& data_out_1c [13] $end
$var wire 1 |& data_out_1c [12] $end
$var wire 1 }& data_out_1c [11] $end
$var wire 1 ~& data_out_1c [10] $end
$var wire 1 !' data_out_1c [9] $end
$var wire 1 "' data_out_1c [8] $end
$var wire 1 #' data_out_1c [7] $end
$var wire 1 $' data_out_1c [6] $end
$var wire 1 %' data_out_1c [5] $end
$var wire 1 &' data_out_1c [4] $end
$var wire 1 '' data_out_1c [3] $end
$var wire 1 (' data_out_1c [2] $end
$var wire 1 )' data_out_1c [1] $end
$var wire 1 *' data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 n& q $end
$var wire 1 m& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +' state $end
$upscope $end

$scope module ff1 $end
$var wire 1 r& q $end
$var wire 1 q& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,' state $end
$upscope $end

$scope module ff2 $end
$var wire 1 o& q $end
$var wire 1 n& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -' state $end
$upscope $end

$scope module ff3 $end
$var wire 1 s& q $end
$var wire 1 r& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .' state $end
$upscope $end

$scope module ff4 $end
$var wire 1 p& q $end
$var wire 1 o& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /' state $end
$upscope $end

$scope module ff5 $end
$var wire 1 t& q $end
$var wire 1 s& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0' state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 P& q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1' state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 Q& q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2' state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 R& q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3' state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 S& q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4' state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 T& q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5' state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 U& q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6' state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 V& q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7' state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 W& q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8' state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 X& q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9' state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 Y& q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :' state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 Z& q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;' state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 [& q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <' state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 \& q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =' state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 ]& q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >' state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 ^& q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?' state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 _& q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @' state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 `& q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A' state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 a& q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B' state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 b& q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C' state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 c& q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D' state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 d& q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E' state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 e& q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F' state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 f& q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G' state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 g& q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H' state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 h& q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I' state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 i& q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J' state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 j& q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K' state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 k& q $end
$var wire 1 `" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L' state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 l& q $end
$var wire 1 a" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M' state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 Q% q $end
$var wire 1 y& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N' state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 R% q $end
$var wire 1 z& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O' state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 S% q $end
$var wire 1 {& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P' state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 T% q $end
$var wire 1 |& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q' state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 U% q $end
$var wire 1 }& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R' state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 V% q $end
$var wire 1 ~& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S' state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 W% q $end
$var wire 1 !' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T' state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 X% q $end
$var wire 1 "' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U' state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 Y% q $end
$var wire 1 #' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V' state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 Z% q $end
$var wire 1 $' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W' state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 [% q $end
$var wire 1 %' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X' state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 \% q $end
$var wire 1 &' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y' state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 ]% q $end
$var wire 1 '' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z' state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 ^% q $end
$var wire 1 (' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [' state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 _% q $end
$var wire 1 )' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \' state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 `% q $end
$var wire 1 *' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]' state $end
$upscope $end
$upscope $end

$scope module m1 $end
$var wire 1 a% data_out [15] $end
$var wire 1 b% data_out [14] $end
$var wire 1 c% data_out [13] $end
$var wire 1 d% data_out [12] $end
$var wire 1 e% data_out [11] $end
$var wire 1 f% data_out [10] $end
$var wire 1 g% data_out [9] $end
$var wire 1 h% data_out [8] $end
$var wire 1 i% data_out [7] $end
$var wire 1 j% data_out [6] $end
$var wire 1 k% data_out [5] $end
$var wire 1 l% data_out [4] $end
$var wire 1 m% data_out [3] $end
$var wire 1 n% data_out [2] $end
$var wire 1 o% data_out [1] $end
$var wire 1 p% data_out [0] $end
$var wire 1 4& err $end
$var wire 1 R" data_in [15] $end
$var wire 1 S" data_in [14] $end
$var wire 1 T" data_in [13] $end
$var wire 1 U" data_in [12] $end
$var wire 1 V" data_in [11] $end
$var wire 1 W" data_in [10] $end
$var wire 1 X" data_in [9] $end
$var wire 1 Y" data_in [8] $end
$var wire 1 Z" data_in [7] $end
$var wire 1 [" data_in [6] $end
$var wire 1 \" data_in [5] $end
$var wire 1 ]" data_in [4] $end
$var wire 1 ^" data_in [3] $end
$var wire 1 _" data_in [2] $end
$var wire 1 `" data_in [1] $end
$var wire 1 a" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 =& enable $end
$var wire 1 { create_dump $end
$var wire 1 ^' bank_id [1] $end
$var wire 1 _' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `' loaded $end
$var reg 16 a' largest [15:0] $end
$var wire 1 b' addr_1c [13] $end
$var wire 1 c' addr_1c [12] $end
$var wire 1 d' addr_1c [11] $end
$var wire 1 e' addr_1c [10] $end
$var wire 1 f' addr_1c [9] $end
$var wire 1 g' addr_1c [8] $end
$var wire 1 h' addr_1c [7] $end
$var wire 1 i' addr_1c [6] $end
$var wire 1 j' addr_1c [5] $end
$var wire 1 k' addr_1c [4] $end
$var wire 1 l' addr_1c [3] $end
$var wire 1 m' addr_1c [2] $end
$var wire 1 n' addr_1c [1] $end
$var wire 1 o' addr_1c [0] $end
$var wire 1 p' data_in_1c [15] $end
$var wire 1 q' data_in_1c [14] $end
$var wire 1 r' data_in_1c [13] $end
$var wire 1 s' data_in_1c [12] $end
$var wire 1 t' data_in_1c [11] $end
$var wire 1 u' data_in_1c [10] $end
$var wire 1 v' data_in_1c [9] $end
$var wire 1 w' data_in_1c [8] $end
$var wire 1 x' data_in_1c [7] $end
$var wire 1 y' data_in_1c [6] $end
$var wire 1 z' data_in_1c [5] $end
$var wire 1 {' data_in_1c [4] $end
$var wire 1 |' data_in_1c [3] $end
$var wire 1 }' data_in_1c [2] $end
$var wire 1 ~' data_in_1c [1] $end
$var wire 1 !( data_in_1c [0] $end
$var wire 1 "( rd0 $end
$var wire 1 #( rd1 $end
$var wire 1 $( rd2 $end
$var wire 1 %( rd3 $end
$var wire 1 &( wr0 $end
$var wire 1 '( wr1 $end
$var wire 1 (( wr2 $end
$var wire 1 )( wr3 $end
$var wire 1 *( busy $end
$var integer 32 +( mcd $end
$var integer 32 ,( largeout $end
$var integer 32 -( i $end
$var wire 1 .( data_out_1c [15] $end
$var wire 1 /( data_out_1c [14] $end
$var wire 1 0( data_out_1c [13] $end
$var wire 1 1( data_out_1c [12] $end
$var wire 1 2( data_out_1c [11] $end
$var wire 1 3( data_out_1c [10] $end
$var wire 1 4( data_out_1c [9] $end
$var wire 1 5( data_out_1c [8] $end
$var wire 1 6( data_out_1c [7] $end
$var wire 1 7( data_out_1c [6] $end
$var wire 1 8( data_out_1c [5] $end
$var wire 1 9( data_out_1c [4] $end
$var wire 1 :( data_out_1c [3] $end
$var wire 1 ;( data_out_1c [2] $end
$var wire 1 <( data_out_1c [1] $end
$var wire 1 =( data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 #( q $end
$var wire 1 "( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >( state $end
$upscope $end

$scope module ff1 $end
$var wire 1 '( q $end
$var wire 1 &( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?( state $end
$upscope $end

$scope module ff2 $end
$var wire 1 $( q $end
$var wire 1 #( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @( state $end
$upscope $end

$scope module ff3 $end
$var wire 1 (( q $end
$var wire 1 '( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A( state $end
$upscope $end

$scope module ff4 $end
$var wire 1 %( q $end
$var wire 1 $( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B( state $end
$upscope $end

$scope module ff5 $end
$var wire 1 )( q $end
$var wire 1 (( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C( state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 c' q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D( state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 d' q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E( state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 e' q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F( state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 f' q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G( state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 g' q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H( state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 h' q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I( state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 i' q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J( state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 j' q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K( state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 k' q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L( state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 l' q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M( state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 m' q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N( state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 n' q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O( state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 o' q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P( state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 p' q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q( state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 q' q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R( state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 r' q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S( state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 s' q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T( state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 t' q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U( state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 u' q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V( state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 v' q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W( state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 w' q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X( state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 x' q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y( state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 y' q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z( state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 z' q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [( state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 {' q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \( state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 |' q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]( state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 }' q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^( state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 ~' q $end
$var wire 1 `" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _( state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 !( q $end
$var wire 1 a" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `( state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 a% q $end
$var wire 1 .( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a( state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 b% q $end
$var wire 1 /( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b( state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 c% q $end
$var wire 1 0( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c( state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 d% q $end
$var wire 1 1( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d( state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 e% q $end
$var wire 1 2( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e( state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 f% q $end
$var wire 1 3( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f( state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 g% q $end
$var wire 1 4( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g( state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 h% q $end
$var wire 1 5( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h( state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 i% q $end
$var wire 1 6( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i( state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 j% q $end
$var wire 1 7( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j( state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 k% q $end
$var wire 1 8( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k( state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 l% q $end
$var wire 1 9( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l( state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 m% q $end
$var wire 1 :( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m( state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 n% q $end
$var wire 1 ;( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n( state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 o% q $end
$var wire 1 <( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o( state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 p% q $end
$var wire 1 =( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p( state $end
$upscope $end
$upscope $end

$scope module m2 $end
$var wire 1 q% data_out [15] $end
$var wire 1 r% data_out [14] $end
$var wire 1 s% data_out [13] $end
$var wire 1 t% data_out [12] $end
$var wire 1 u% data_out [11] $end
$var wire 1 v% data_out [10] $end
$var wire 1 w% data_out [9] $end
$var wire 1 x% data_out [8] $end
$var wire 1 y% data_out [7] $end
$var wire 1 z% data_out [6] $end
$var wire 1 {% data_out [5] $end
$var wire 1 |% data_out [4] $end
$var wire 1 }% data_out [3] $end
$var wire 1 ~% data_out [2] $end
$var wire 1 !& data_out [1] $end
$var wire 1 "& data_out [0] $end
$var wire 1 5& err $end
$var wire 1 R" data_in [15] $end
$var wire 1 S" data_in [14] $end
$var wire 1 T" data_in [13] $end
$var wire 1 U" data_in [12] $end
$var wire 1 V" data_in [11] $end
$var wire 1 W" data_in [10] $end
$var wire 1 X" data_in [9] $end
$var wire 1 Y" data_in [8] $end
$var wire 1 Z" data_in [7] $end
$var wire 1 [" data_in [6] $end
$var wire 1 \" data_in [5] $end
$var wire 1 ]" data_in [4] $end
$var wire 1 ^" data_in [3] $end
$var wire 1 _" data_in [2] $end
$var wire 1 `" data_in [1] $end
$var wire 1 a" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 <& enable $end
$var wire 1 { create_dump $end
$var wire 1 q( bank_id [1] $end
$var wire 1 r( bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s( loaded $end
$var reg 16 t( largest [15:0] $end
$var wire 1 u( addr_1c [13] $end
$var wire 1 v( addr_1c [12] $end
$var wire 1 w( addr_1c [11] $end
$var wire 1 x( addr_1c [10] $end
$var wire 1 y( addr_1c [9] $end
$var wire 1 z( addr_1c [8] $end
$var wire 1 {( addr_1c [7] $end
$var wire 1 |( addr_1c [6] $end
$var wire 1 }( addr_1c [5] $end
$var wire 1 ~( addr_1c [4] $end
$var wire 1 !) addr_1c [3] $end
$var wire 1 ") addr_1c [2] $end
$var wire 1 #) addr_1c [1] $end
$var wire 1 $) addr_1c [0] $end
$var wire 1 %) data_in_1c [15] $end
$var wire 1 &) data_in_1c [14] $end
$var wire 1 ') data_in_1c [13] $end
$var wire 1 () data_in_1c [12] $end
$var wire 1 )) data_in_1c [11] $end
$var wire 1 *) data_in_1c [10] $end
$var wire 1 +) data_in_1c [9] $end
$var wire 1 ,) data_in_1c [8] $end
$var wire 1 -) data_in_1c [7] $end
$var wire 1 .) data_in_1c [6] $end
$var wire 1 /) data_in_1c [5] $end
$var wire 1 0) data_in_1c [4] $end
$var wire 1 1) data_in_1c [3] $end
$var wire 1 2) data_in_1c [2] $end
$var wire 1 3) data_in_1c [1] $end
$var wire 1 4) data_in_1c [0] $end
$var wire 1 5) rd0 $end
$var wire 1 6) rd1 $end
$var wire 1 7) rd2 $end
$var wire 1 8) rd3 $end
$var wire 1 9) wr0 $end
$var wire 1 :) wr1 $end
$var wire 1 ;) wr2 $end
$var wire 1 <) wr3 $end
$var wire 1 =) busy $end
$var integer 32 >) mcd $end
$var integer 32 ?) largeout $end
$var integer 32 @) i $end
$var wire 1 A) data_out_1c [15] $end
$var wire 1 B) data_out_1c [14] $end
$var wire 1 C) data_out_1c [13] $end
$var wire 1 D) data_out_1c [12] $end
$var wire 1 E) data_out_1c [11] $end
$var wire 1 F) data_out_1c [10] $end
$var wire 1 G) data_out_1c [9] $end
$var wire 1 H) data_out_1c [8] $end
$var wire 1 I) data_out_1c [7] $end
$var wire 1 J) data_out_1c [6] $end
$var wire 1 K) data_out_1c [5] $end
$var wire 1 L) data_out_1c [4] $end
$var wire 1 M) data_out_1c [3] $end
$var wire 1 N) data_out_1c [2] $end
$var wire 1 O) data_out_1c [1] $end
$var wire 1 P) data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 6) q $end
$var wire 1 5) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end

$scope module ff1 $end
$var wire 1 :) q $end
$var wire 1 9) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end

$scope module ff2 $end
$var wire 1 7) q $end
$var wire 1 6) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end

$scope module ff3 $end
$var wire 1 ;) q $end
$var wire 1 :) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end

$scope module ff4 $end
$var wire 1 8) q $end
$var wire 1 7) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end

$scope module ff5 $end
$var wire 1 <) q $end
$var wire 1 ;) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 v( q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 w( q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 x( q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 y( q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 z( q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 {( q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \) state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 |( q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]) state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 }( q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^) state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 ~( q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _) state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 !) q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `) state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 ") q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a) state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 #) q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b) state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 $) q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c) state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 %) q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d) state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 &) q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e) state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 ') q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f) state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 () q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g) state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 )) q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h) state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 *) q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i) state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 +) q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j) state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 ,) q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k) state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 -) q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l) state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 .) q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m) state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 /) q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n) state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 0) q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o) state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 1) q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p) state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 2) q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q) state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 3) q $end
$var wire 1 `" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r) state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 4) q $end
$var wire 1 a" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s) state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 q% q $end
$var wire 1 A) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t) state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 r% q $end
$var wire 1 B) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u) state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 s% q $end
$var wire 1 C) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v) state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 t% q $end
$var wire 1 D) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w) state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 u% q $end
$var wire 1 E) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x) state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 v% q $end
$var wire 1 F) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y) state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 w% q $end
$var wire 1 G) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z) state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 x% q $end
$var wire 1 H) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {) state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 y% q $end
$var wire 1 I) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |) state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 z% q $end
$var wire 1 J) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }) state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 {% q $end
$var wire 1 K) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~) state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 |% q $end
$var wire 1 L) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !* state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 }% q $end
$var wire 1 M) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "* state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 ~% q $end
$var wire 1 N) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #* state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 !& q $end
$var wire 1 O) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $* state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 "& q $end
$var wire 1 P) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %* state $end
$upscope $end
$upscope $end

$scope module m3 $end
$var wire 1 #& data_out [15] $end
$var wire 1 $& data_out [14] $end
$var wire 1 %& data_out [13] $end
$var wire 1 && data_out [12] $end
$var wire 1 '& data_out [11] $end
$var wire 1 (& data_out [10] $end
$var wire 1 )& data_out [9] $end
$var wire 1 *& data_out [8] $end
$var wire 1 +& data_out [7] $end
$var wire 1 ,& data_out [6] $end
$var wire 1 -& data_out [5] $end
$var wire 1 .& data_out [4] $end
$var wire 1 /& data_out [3] $end
$var wire 1 0& data_out [2] $end
$var wire 1 1& data_out [1] $end
$var wire 1 2& data_out [0] $end
$var wire 1 6& err $end
$var wire 1 R" data_in [15] $end
$var wire 1 S" data_in [14] $end
$var wire 1 T" data_in [13] $end
$var wire 1 U" data_in [12] $end
$var wire 1 V" data_in [11] $end
$var wire 1 W" data_in [10] $end
$var wire 1 X" data_in [9] $end
$var wire 1 Y" data_in [8] $end
$var wire 1 Z" data_in [7] $end
$var wire 1 [" data_in [6] $end
$var wire 1 \" data_in [5] $end
$var wire 1 ]" data_in [4] $end
$var wire 1 ^" data_in [3] $end
$var wire 1 _" data_in [2] $end
$var wire 1 `" data_in [1] $end
$var wire 1 a" data_in [0] $end
$var wire 1 o! addr [12] $end
$var wire 1 p! addr [11] $end
$var wire 1 q! addr [10] $end
$var wire 1 r! addr [9] $end
$var wire 1 s! addr [8] $end
$var wire 1 t! addr [7] $end
$var wire 1 u! addr [6] $end
$var wire 1 v! addr [5] $end
$var wire 1 w! addr [4] $end
$var wire 1 x! addr [3] $end
$var wire 1 y! addr [2] $end
$var wire 1 z! addr [1] $end
$var wire 1 {! addr [0] $end
$var wire 1 B" wr $end
$var wire 1 C" rd $end
$var wire 1 ;& enable $end
$var wire 1 { create_dump $end
$var wire 1 &* bank_id [1] $end
$var wire 1 '* bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (* loaded $end
$var reg 16 )* largest [15:0] $end
$var wire 1 ** addr_1c [13] $end
$var wire 1 +* addr_1c [12] $end
$var wire 1 ,* addr_1c [11] $end
$var wire 1 -* addr_1c [10] $end
$var wire 1 .* addr_1c [9] $end
$var wire 1 /* addr_1c [8] $end
$var wire 1 0* addr_1c [7] $end
$var wire 1 1* addr_1c [6] $end
$var wire 1 2* addr_1c [5] $end
$var wire 1 3* addr_1c [4] $end
$var wire 1 4* addr_1c [3] $end
$var wire 1 5* addr_1c [2] $end
$var wire 1 6* addr_1c [1] $end
$var wire 1 7* addr_1c [0] $end
$var wire 1 8* data_in_1c [15] $end
$var wire 1 9* data_in_1c [14] $end
$var wire 1 :* data_in_1c [13] $end
$var wire 1 ;* data_in_1c [12] $end
$var wire 1 <* data_in_1c [11] $end
$var wire 1 =* data_in_1c [10] $end
$var wire 1 >* data_in_1c [9] $end
$var wire 1 ?* data_in_1c [8] $end
$var wire 1 @* data_in_1c [7] $end
$var wire 1 A* data_in_1c [6] $end
$var wire 1 B* data_in_1c [5] $end
$var wire 1 C* data_in_1c [4] $end
$var wire 1 D* data_in_1c [3] $end
$var wire 1 E* data_in_1c [2] $end
$var wire 1 F* data_in_1c [1] $end
$var wire 1 G* data_in_1c [0] $end
$var wire 1 H* rd0 $end
$var wire 1 I* rd1 $end
$var wire 1 J* rd2 $end
$var wire 1 K* rd3 $end
$var wire 1 L* wr0 $end
$var wire 1 M* wr1 $end
$var wire 1 N* wr2 $end
$var wire 1 O* wr3 $end
$var wire 1 P* busy $end
$var integer 32 Q* mcd $end
$var integer 32 R* largeout $end
$var integer 32 S* i $end
$var wire 1 T* data_out_1c [15] $end
$var wire 1 U* data_out_1c [14] $end
$var wire 1 V* data_out_1c [13] $end
$var wire 1 W* data_out_1c [12] $end
$var wire 1 X* data_out_1c [11] $end
$var wire 1 Y* data_out_1c [10] $end
$var wire 1 Z* data_out_1c [9] $end
$var wire 1 [* data_out_1c [8] $end
$var wire 1 \* data_out_1c [7] $end
$var wire 1 ]* data_out_1c [6] $end
$var wire 1 ^* data_out_1c [5] $end
$var wire 1 _* data_out_1c [4] $end
$var wire 1 `* data_out_1c [3] $end
$var wire 1 a* data_out_1c [2] $end
$var wire 1 b* data_out_1c [1] $end
$var wire 1 c* data_out_1c [0] $end

$scope module ff0 $end
$var wire 1 I* q $end
$var wire 1 H* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d* state $end
$upscope $end

$scope module ff1 $end
$var wire 1 M* q $end
$var wire 1 L* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e* state $end
$upscope $end

$scope module ff2 $end
$var wire 1 J* q $end
$var wire 1 I* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f* state $end
$upscope $end

$scope module ff3 $end
$var wire 1 N* q $end
$var wire 1 M* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g* state $end
$upscope $end

$scope module ff4 $end
$var wire 1 K* q $end
$var wire 1 J* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h* state $end
$upscope $end

$scope module ff5 $end
$var wire 1 O* q $end
$var wire 1 N* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i* state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 +* q $end
$var wire 1 o! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j* state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 ,* q $end
$var wire 1 p! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k* state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 -* q $end
$var wire 1 q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l* state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 .* q $end
$var wire 1 r! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m* state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 /* q $end
$var wire 1 s! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n* state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 0* q $end
$var wire 1 t! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o* state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 1* q $end
$var wire 1 u! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p* state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 2* q $end
$var wire 1 v! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q* state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 3* q $end
$var wire 1 w! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r* state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 4* q $end
$var wire 1 x! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s* state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 5* q $end
$var wire 1 y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t* state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 6* q $end
$var wire 1 z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u* state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 7* q $end
$var wire 1 {! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v* state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 8* q $end
$var wire 1 R" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w* state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 9* q $end
$var wire 1 S" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x* state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 :* q $end
$var wire 1 T" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y* state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 ;* q $end
$var wire 1 U" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z* state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 <* q $end
$var wire 1 V" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {* state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 =* q $end
$var wire 1 W" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |* state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 >* q $end
$var wire 1 X" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }* state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 ?* q $end
$var wire 1 Y" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~* state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 @* q $end
$var wire 1 Z" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !+ state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 A* q $end
$var wire 1 [" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 B* q $end
$var wire 1 \" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 C* q $end
$var wire 1 ]" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 D* q $end
$var wire 1 ^" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 E* q $end
$var wire 1 _" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 F* q $end
$var wire 1 `" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 G* q $end
$var wire 1 a" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 #& q $end
$var wire 1 T* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 $& q $end
$var wire 1 U* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 %& q $end
$var wire 1 V* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 && q $end
$var wire 1 W* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 '& q $end
$var wire 1 X* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 (& q $end
$var wire 1 Y* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 )& q $end
$var wire 1 Z* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 *& q $end
$var wire 1 [* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0+ state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 +& q $end
$var wire 1 \* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1+ state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 ,& q $end
$var wire 1 ]* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2+ state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 -& q $end
$var wire 1 ^* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3+ state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 .& q $end
$var wire 1 _* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4+ state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 /& q $end
$var wire 1 `* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5+ state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 0& q $end
$var wire 1 a* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6+ state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 1& q $end
$var wire 1 b* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7+ state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 2& q $end
$var wire 1 c* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8+ state $end
$upscope $end
$upscope $end

$scope module b0[3] $end
$var wire 1 ?& q $end
$var wire 1 ;& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9+ state $end
$upscope $end

$scope module b0[2] $end
$var wire 1 @& q $end
$var wire 1 <& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :+ state $end
$upscope $end

$scope module b0[1] $end
$var wire 1 A& q $end
$var wire 1 =& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;+ state $end
$upscope $end

$scope module b0[0] $end
$var wire 1 B& q $end
$var wire 1 >& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <+ state $end
$upscope $end

$scope module b1[3] $end
$var wire 1 C& q $end
$var wire 1 ?& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =+ state $end
$upscope $end

$scope module b1[2] $end
$var wire 1 D& q $end
$var wire 1 @& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >+ state $end
$upscope $end

$scope module b1[1] $end
$var wire 1 E& q $end
$var wire 1 A& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?+ state $end
$upscope $end

$scope module b1[0] $end
$var wire 1 F& q $end
$var wire 1 B& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @+ state $end
$upscope $end

$scope module b2[3] $end
$var wire 1 G& q $end
$var wire 1 C& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A+ state $end
$upscope $end

$scope module b2[2] $end
$var wire 1 H& q $end
$var wire 1 D& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B+ state $end
$upscope $end

$scope module b2[1] $end
$var wire 1 I& q $end
$var wire 1 E& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C+ state $end
$upscope $end

$scope module b2[0] $end
$var wire 1 J& q $end
$var wire 1 F& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D+ state $end
$upscope $end
$upscope $end

$scope module cache_controller $end
$var parameter 5 E+ IDLE $end
$var parameter 5 F+ COMPARE_RD $end
$var parameter 5 G+ COMPARE_WR $end
$var parameter 5 H+ ALLOC_0 $end
$var parameter 5 I+ ALLOC_1 $end
$var parameter 5 J+ ALLOC_2 $end
$var parameter 5 K+ ALLOC_3 $end
$var parameter 5 L+ ALLOC_4 $end
$var parameter 5 M+ ALLOC_5 $end
$var parameter 5 N+ ALLOC_6 $end
$var parameter 5 O+ WB_0 $end
$var parameter 5 P+ WB_1 $end
$var parameter 5 Q+ WB_2 $end
$var parameter 5 R+ WB_3 $end
$var parameter 5 S+ HIT_DONE $end
$var parameter 5 T+ MISS_DONE $end
$var parameter 5 U+ ERROR $end
$var reg 1 V+ comp $end
$var reg 1 W+ cache_write $end
$var reg 3 X+ cache_offset [2:0] $end
$var reg 1 Y+ cache_data_in_select $end
$var reg 1 Z+ cache_offset_select $end
$var reg 1 [+ tag_select $end
$var reg 3 \+ mem_offset [2:0] $end
$var reg 1 ]+ mem_wr $end
$var reg 1 ^+ mem_rd $end
$var reg 1 _+ cache_hit $end
$var reg 1 `+ stall_out $end
$var reg 1 a+ done $end
$var reg 1 b+ valid_in $end
$var reg 1 c+ err $end
$var wire 1 F" enable $end
$var reg 1 d+ flip_victimway $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 i" valid $end
$var wire 1 h" dirty $end
$var wire 1 1" mem_stall $end
$var wire 1 g" hit $end
$var wire 1 e+ curr_state [4] $end
$var wire 1 f+ curr_state [3] $end
$var wire 1 g+ curr_state [2] $end
$var wire 1 h+ curr_state [1] $end
$var wire 1 i+ curr_state [0] $end
$var reg 5 j+ next_state [4:0] $end

$scope module statereg[4] $end
$var wire 1 e+ q $end
$var wire 1 k+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l+ state $end
$upscope $end

$scope module statereg[3] $end
$var wire 1 f+ q $end
$var wire 1 m+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n+ state $end
$upscope $end

$scope module statereg[2] $end
$var wire 1 g+ q $end
$var wire 1 o+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p+ state $end
$upscope $end

$scope module statereg[1] $end
$var wire 1 h+ q $end
$var wire 1 q+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r+ state $end
$upscope $end

$scope module statereg[0] $end
$var wire 1 i+ q $end
$var wire 1 s+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t+ state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module ref $end
$var wire 1 u+ Addr [15] $end
$var wire 1 v+ Addr [14] $end
$var wire 1 w+ Addr [13] $end
$var wire 1 x+ Addr [12] $end
$var wire 1 y+ Addr [11] $end
$var wire 1 z+ Addr [10] $end
$var wire 1 {+ Addr [9] $end
$var wire 1 |+ Addr [8] $end
$var wire 1 }+ Addr [7] $end
$var wire 1 ~+ Addr [6] $end
$var wire 1 !, Addr [5] $end
$var wire 1 ", Addr [4] $end
$var wire 1 #, Addr [3] $end
$var wire 1 $, Addr [2] $end
$var wire 1 %, Addr [1] $end
$var wire 1 &, Addr [0] $end
$var wire 1 ', DataIn [15] $end
$var wire 1 (, DataIn [14] $end
$var wire 1 ), DataIn [13] $end
$var wire 1 *, DataIn [12] $end
$var wire 1 +, DataIn [11] $end
$var wire 1 ,, DataIn [10] $end
$var wire 1 -, DataIn [9] $end
$var wire 1 ., DataIn [8] $end
$var wire 1 /, DataIn [7] $end
$var wire 1 0, DataIn [6] $end
$var wire 1 1, DataIn [5] $end
$var wire 1 2, DataIn [4] $end
$var wire 1 3, DataIn [3] $end
$var wire 1 4, DataIn [2] $end
$var wire 1 5, DataIn [1] $end
$var wire 1 6, DataIn [0] $end
$var wire 1 7, Rd $end
$var wire 1 8, Wr $end
$var wire 1 9, clk $end
$var wire 1 :, rst $end
$var reg 16 ;, DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 <, loaded $end
$var integer 32 =, i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
b0 4
05
06
b11011010110010101101101001100110010111001100001011001000110010001110010 7
1!!
1"!
b0 %!
0&!
1'!
0(!
0)!
0k"
0l"
1M&
b1 N&
0+'
0,'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0-'
0.'
0/'
00'
1`'
b1 a'
0>(
0?(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0@(
0A(
0B(
0C(
1s(
b1 t(
0Q)
0R)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0S)
0T)
0U)
0V)
1(*
b1 )*
0d*
0e*
0v*
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0k*
0j*
0(+
0'+
0&+
0%+
0$+
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
08+
07+
06+
05+
04+
03+
02+
01+
00+
0/+
0.+
0-+
0,+
0++
0*+
0)+
0f*
0g*
0h*
0i*
0<+
0;+
0:+
09+
0@+
0?+
0>+
0=+
0D+
0C+
0B+
0A+
0V+
0W+
b0 X+
0Y+
0Z+
0[+
b0 \+
0]+
0^+
0_+
1`+
0a+
0b+
0c+
0d+
b0 j+
0t+
0r+
0p+
0n+
0l+
bx ;,
1<,
0N
1R
bx V
b0 X
b1 $!
b1 m"
b10000 z#
b10000 }#
b10000 "$
b10000 %$
b101 ($
b1 +$
b11 0$
b10000 =%
b10000 @%
b10000 C%
b10000 F%
b101 I%
b1 L%
b0 E+
b1 F+
b10 G+
b11 H+
b100 I+
b101 J+
b110 K+
b111 L+
b1000 M+
b1001 N+
b1010 O+
b1011 P+
b1100 Q+
b1101 R+
b1110 S+
b1111 T+
b10000 U+
b1 #!
bx {#
b100000000 |#
bx ~#
b100000000 !$
bx #$
b100000000 $$
bx &$
b100000000 '$
bx )$
b100000000 *$
bx ,$
b100000000 -$
bx .$
b100000000 /$
bx >%
b100000000 ?%
bx A%
b100000000 B%
bx D%
b100000000 E%
bx G%
b100000000 H%
bx J%
b100000000 K%
bx M%
b100000000 N%
bx O%
b100000000 P%
bx v&
bx w&
b100000000000001 x&
bx +(
bx ,(
b100000000000001 -(
bx >)
bx ?)
b100000000000001 @)
bx Q*
bx R*
b100000000000001 S*
b10000000000000000 =,
b0 O
b0 P
b0 Q
b0 S
b10000000000000000000000000000011 T
bx U
bx W
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
01
12
18
19
0:
0|
1}
1~
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0<!
0;!
0:!
0=!
0>!
0?!
0D!
0C!
0B!
0A!
0@!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0U!
0V!
0W!
0X!
0]!
0\!
0[!
0Z!
0Y!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0n!
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
01"
x5"
x4"
x3"
x2"
06"
07"
08"
0;"
0:"
09"
0<"
0="
0>"
0A"
0@"
0?"
0B"
0C"
0D"
0E"
xF"
0G"
0H"
1I"
xJ"
xK"
0L"
0M"
xN"
xO"
xP"
xQ"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0f"
0e"
0d"
0c"
0b"
0g"
0h"
0i"
0j"
0r"
0q"
0p"
1o"
0n"
1w"
0v"
0u"
1t"
0s"
0|"
1{"
0z"
1y"
0x"
1##
1"#
0!#
1~"
0}"
0(#
0'#
1&#
1%#
0$#
1-#
0,#
1+#
1*#
0)#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0n#
1o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
05$
04$
03$
12$
11$
1:$
09$
08$
17$
16$
0?$
1>$
0=$
1<$
1;$
1D$
1C$
0B$
1A$
1@$
0I$
0H$
1G$
1F$
1E$
1N$
0M$
1L$
1K$
1J$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
01%
12%
03%
04%
05%
06%
07%
08%
09%
0:%
0;%
0<%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
03&
04&
05&
06&
17&
08&
09&
0:&
0>&
0=&
0<&
0;&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
0O&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
0m&
xn&
xo&
xp&
0q&
xr&
xs&
xt&
xu&
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
0b'
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
0"(
x#(
x$(
x%(
0&(
x'(
x((
x)(
x*(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x$)
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
0u(
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
05)
x6)
x7)
x8)
09)
x:)
x;)
x<)
x=)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
0**
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
0H*
xI*
xJ*
xK*
0L*
xM*
xN*
xO*
xP*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xB&
xA&
x@&
x?&
xF&
xE&
xD&
xC&
xJ&
xI&
xH&
xG&
xi+
xh+
xg+
xf+
xe+
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
08,
07,
06,
05,
04,
03,
02,
01,
00,
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
0',
0&,
0%,
0$,
0#,
0",
0!,
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
1'*
1&*
0r(
1q(
1_'
0^'
0L&
0K&
0s+
0q+
0o+
0m+
0k+
19,
1:,
$end
#1
0e+
0f+
0g+
0h+
0i+
0G&
0H&
0I&
0J&
0C&
0D&
0E&
0F&
0?&
0@&
0A&
0B&
0O*
0K*
0N*
0J*
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
00&
01&
02&
08*
09*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
0E*
0F*
0G*
0+*
0,*
0-*
0.*
0/*
00*
01*
02*
03*
04*
05*
06*
07*
0M*
0I*
0<)
08)
0;)
07)
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
0%)
0&)
0')
0()
0))
0*)
0+)
0,)
0-)
0.)
0/)
00)
01)
02)
03)
04)
0v(
0w(
0x(
0y(
0z(
0{(
0|(
0}(
0~(
0!)
0")
0#)
0$)
0:)
06)
0)(
0%(
0((
0$(
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0p'
0q'
0r'
0s'
0t'
0u'
0v'
0w'
0x'
0y'
0z'
0{'
0|'
0}'
0~'
0!(
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0j'
0k'
0l'
0m'
0n'
0o'
0'(
0#(
0t&
0p&
0s&
0o&
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
0^%
0_%
0`%
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0i&
0j&
0k&
0l&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0\&
0r&
0n&
0O"
0K"
0J"
0N"
1P"
0u&
0*(
0=)
0P*
1F"
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
05"
04"
03"
02"
1Q"
0`+
0I"
0'!
02
#50
0!!
09,
08
0}
#100
1!!
19,
18
1}
b0 |#
b1 |#
b10 |#
b11 |#
b100 |#
b101 |#
b110 |#
b111 |#
b1000 |#
b1001 |#
b1010 |#
b1011 |#
b1100 |#
b1101 |#
b1110 |#
b1111 |#
b10000 |#
b10001 |#
b10010 |#
b10011 |#
b10100 |#
b10101 |#
b10110 |#
b10111 |#
b11000 |#
b11001 |#
b11010 |#
b11011 |#
b11100 |#
b11101 |#
b11110 |#
b11111 |#
b100000 |#
b100001 |#
b100010 |#
b100011 |#
b100100 |#
b100101 |#
b100110 |#
b100111 |#
b101000 |#
b101001 |#
b101010 |#
b101011 |#
b101100 |#
b101101 |#
b101110 |#
b101111 |#
b110000 |#
b110001 |#
b110010 |#
b110011 |#
b110100 |#
b110101 |#
b110110 |#
b110111 |#
b111000 |#
b111001 |#
b111010 |#
b111011 |#
b111100 |#
b111101 |#
b111110 |#
b111111 |#
b1000000 |#
b1000001 |#
b1000010 |#
b1000011 |#
b1000100 |#
b1000101 |#
b1000110 |#
b1000111 |#
b1001000 |#
b1001001 |#
b1001010 |#
b1001011 |#
b1001100 |#
b1001101 |#
b1001110 |#
b1001111 |#
b1010000 |#
b1010001 |#
b1010010 |#
b1010011 |#
b1010100 |#
b1010101 |#
b1010110 |#
b1010111 |#
b1011000 |#
b1011001 |#
b1011010 |#
b1011011 |#
b1011100 |#
b1011101 |#
b1011110 |#
b1011111 |#
b1100000 |#
b1100001 |#
b1100010 |#
b1100011 |#
b1100100 |#
b1100101 |#
b1100110 |#
b1100111 |#
b1101000 |#
b1101001 |#
b1101010 |#
b1101011 |#
b1101100 |#
b1101101 |#
b1101110 |#
b1101111 |#
b1110000 |#
b1110001 |#
b1110010 |#
b1110011 |#
b1110100 |#
b1110101 |#
b1110110 |#
b1110111 |#
b1111000 |#
b1111001 |#
b1111010 |#
b1111011 |#
b1111100 |#
b1111101 |#
b1111110 |#
b1111111 |#
b10000000 |#
b10000001 |#
b10000010 |#
b10000011 |#
b10000100 |#
b10000101 |#
b10000110 |#
b10000111 |#
b10001000 |#
b10001001 |#
b10001010 |#
b10001011 |#
b10001100 |#
b10001101 |#
b10001110 |#
b10001111 |#
b10010000 |#
b10010001 |#
b10010010 |#
b10010011 |#
b10010100 |#
b10010101 |#
b10010110 |#
b10010111 |#
b10011000 |#
b10011001 |#
b10011010 |#
b10011011 |#
b10011100 |#
b10011101 |#
b10011110 |#
b10011111 |#
b10100000 |#
b10100001 |#
b10100010 |#
b10100011 |#
b10100100 |#
b10100101 |#
b10100110 |#
b10100111 |#
b10101000 |#
b10101001 |#
b10101010 |#
b10101011 |#
b10101100 |#
b10101101 |#
b10101110 |#
b10101111 |#
b10110000 |#
b10110001 |#
b10110010 |#
b10110011 |#
b10110100 |#
b10110101 |#
b10110110 |#
b10110111 |#
b10111000 |#
b10111001 |#
b10111010 |#
b10111011 |#
b10111100 |#
b10111101 |#
b10111110 |#
b10111111 |#
b11000000 |#
b11000001 |#
b11000010 |#
b11000011 |#
b11000100 |#
b11000101 |#
b11000110 |#
b11000111 |#
b11001000 |#
b11001001 |#
b11001010 |#
b11001011 |#
b11001100 |#
b11001101 |#
b11001110 |#
b11001111 |#
b11010000 |#
b11010001 |#
b11010010 |#
b11010011 |#
b11010100 |#
b11010101 |#
b11010110 |#
b11010111 |#
b11011000 |#
b11011001 |#
b11011010 |#
b11011011 |#
b11011100 |#
b11011101 |#
b11011110 |#
b11011111 |#
b11100000 |#
b11100001 |#
b11100010 |#
b11100011 |#
b11100100 |#
b11100101 |#
b11100110 |#
b11100111 |#
b11101000 |#
b11101001 |#
b11101010 |#
b11101011 |#
b11101100 |#
b11101101 |#
b11101110 |#
b11101111 |#
b11110000 |#
b11110001 |#
b11110010 |#
b11110011 |#
b11110100 |#
b11110101 |#
b11110110 |#
b11110111 |#
b11111000 |#
b11111001 |#
b11111010 |#
b11111011 |#
b11111100 |#
b11111101 |#
b11111110 |#
b11111111 |#
b100000000 |#
b0 !$
b1 !$
b10 !$
b11 !$
b100 !$
b101 !$
b110 !$
b111 !$
b1000 !$
b1001 !$
b1010 !$
b1011 !$
b1100 !$
b1101 !$
b1110 !$
b1111 !$
b10000 !$
b10001 !$
b10010 !$
b10011 !$
b10100 !$
b10101 !$
b10110 !$
b10111 !$
b11000 !$
b11001 !$
b11010 !$
b11011 !$
b11100 !$
b11101 !$
b11110 !$
b11111 !$
b100000 !$
b100001 !$
b100010 !$
b100011 !$
b100100 !$
b100101 !$
b100110 !$
b100111 !$
b101000 !$
b101001 !$
b101010 !$
b101011 !$
b101100 !$
b101101 !$
b101110 !$
b101111 !$
b110000 !$
b110001 !$
b110010 !$
b110011 !$
b110100 !$
b110101 !$
b110110 !$
b110111 !$
b111000 !$
b111001 !$
b111010 !$
b111011 !$
b111100 !$
b111101 !$
b111110 !$
b111111 !$
b1000000 !$
b1000001 !$
b1000010 !$
b1000011 !$
b1000100 !$
b1000101 !$
b1000110 !$
b1000111 !$
b1001000 !$
b1001001 !$
b1001010 !$
b1001011 !$
b1001100 !$
b1001101 !$
b1001110 !$
b1001111 !$
b1010000 !$
b1010001 !$
b1010010 !$
b1010011 !$
b1010100 !$
b1010101 !$
b1010110 !$
b1010111 !$
b1011000 !$
b1011001 !$
b1011010 !$
b1011011 !$
b1011100 !$
b1011101 !$
b1011110 !$
b1011111 !$
b1100000 !$
b1100001 !$
b1100010 !$
b1100011 !$
b1100100 !$
b1100101 !$
b1100110 !$
b1100111 !$
b1101000 !$
b1101001 !$
b1101010 !$
b1101011 !$
b1101100 !$
b1101101 !$
b1101110 !$
b1101111 !$
b1110000 !$
b1110001 !$
b1110010 !$
b1110011 !$
b1110100 !$
b1110101 !$
b1110110 !$
b1110111 !$
b1111000 !$
b1111001 !$
b1111010 !$
b1111011 !$
b1111100 !$
b1111101 !$
b1111110 !$
b1111111 !$
b10000000 !$
b10000001 !$
b10000010 !$
b10000011 !$
b10000100 !$
b10000101 !$
b10000110 !$
b10000111 !$
b10001000 !$
b10001001 !$
b10001010 !$
b10001011 !$
b10001100 !$
b10001101 !$
b10001110 !$
b10001111 !$
b10010000 !$
b10010001 !$
b10010010 !$
b10010011 !$
b10010100 !$
b10010101 !$
b10010110 !$
b10010111 !$
b10011000 !$
b10011001 !$
b10011010 !$
b10011011 !$
b10011100 !$
b10011101 !$
b10011110 !$
b10011111 !$
b10100000 !$
b10100001 !$
b10100010 !$
b10100011 !$
b10100100 !$
b10100101 !$
b10100110 !$
b10100111 !$
b10101000 !$
b10101001 !$
b10101010 !$
b10101011 !$
b10101100 !$
b10101101 !$
b10101110 !$
b10101111 !$
b10110000 !$
b10110001 !$
b10110010 !$
b10110011 !$
b10110100 !$
b10110101 !$
b10110110 !$
b10110111 !$
b10111000 !$
b10111001 !$
b10111010 !$
b10111011 !$
b10111100 !$
b10111101 !$
b10111110 !$
b10111111 !$
b11000000 !$
b11000001 !$
b11000010 !$
b11000011 !$
b11000100 !$
b11000101 !$
b11000110 !$
b11000111 !$
b11001000 !$
b11001001 !$
b11001010 !$
b11001011 !$
b11001100 !$
b11001101 !$
b11001110 !$
b11001111 !$
b11010000 !$
b11010001 !$
b11010010 !$
b11010011 !$
b11010100 !$
b11010101 !$
b11010110 !$
b11010111 !$
b11011000 !$
b11011001 !$
b11011010 !$
b11011011 !$
b11011100 !$
b11011101 !$
b11011110 !$
b11011111 !$
b11100000 !$
b11100001 !$
b11100010 !$
b11100011 !$
b11100100 !$
b11100101 !$
b11100110 !$
b11100111 !$
b11101000 !$
b11101001 !$
b11101010 !$
b11101011 !$
b11101100 !$
b11101101 !$
b11101110 !$
b11101111 !$
b11110000 !$
b11110001 !$
b11110010 !$
b11110011 !$
b11110100 !$
b11110101 !$
b11110110 !$
b11110111 !$
b11111000 !$
b11111001 !$
b11111010 !$
b11111011 !$
b11111100 !$
b11111101 !$
b11111110 !$
b11111111 !$
b100000000 !$
b0 $$
b1 $$
b10 $$
b11 $$
b100 $$
b101 $$
b110 $$
b111 $$
b1000 $$
b1001 $$
b1010 $$
b1011 $$
b1100 $$
b1101 $$
b1110 $$
b1111 $$
b10000 $$
b10001 $$
b10010 $$
b10011 $$
b10100 $$
b10101 $$
b10110 $$
b10111 $$
b11000 $$
b11001 $$
b11010 $$
b11011 $$
b11100 $$
b11101 $$
b11110 $$
b11111 $$
b100000 $$
b100001 $$
b100010 $$
b100011 $$
b100100 $$
b100101 $$
b100110 $$
b100111 $$
b101000 $$
b101001 $$
b101010 $$
b101011 $$
b101100 $$
b101101 $$
b101110 $$
b101111 $$
b110000 $$
b110001 $$
b110010 $$
b110011 $$
b110100 $$
b110101 $$
b110110 $$
b110111 $$
b111000 $$
b111001 $$
b111010 $$
b111011 $$
b111100 $$
b111101 $$
b111110 $$
b111111 $$
b1000000 $$
b1000001 $$
b1000010 $$
b1000011 $$
b1000100 $$
b1000101 $$
b1000110 $$
b1000111 $$
b1001000 $$
b1001001 $$
b1001010 $$
b1001011 $$
b1001100 $$
b1001101 $$
b1001110 $$
b1001111 $$
b1010000 $$
b1010001 $$
b1010010 $$
b1010011 $$
b1010100 $$
b1010101 $$
b1010110 $$
b1010111 $$
b1011000 $$
b1011001 $$
b1011010 $$
b1011011 $$
b1011100 $$
b1011101 $$
b1011110 $$
b1011111 $$
b1100000 $$
b1100001 $$
b1100010 $$
b1100011 $$
b1100100 $$
b1100101 $$
b1100110 $$
b1100111 $$
b1101000 $$
b1101001 $$
b1101010 $$
b1101011 $$
b1101100 $$
b1101101 $$
b1101110 $$
b1101111 $$
b1110000 $$
b1110001 $$
b1110010 $$
b1110011 $$
b1110100 $$
b1110101 $$
b1110110 $$
b1110111 $$
b1111000 $$
b1111001 $$
b1111010 $$
b1111011 $$
b1111100 $$
b1111101 $$
b1111110 $$
b1111111 $$
b10000000 $$
b10000001 $$
b10000010 $$
b10000011 $$
b10000100 $$
b10000101 $$
b10000110 $$
b10000111 $$
b10001000 $$
b10001001 $$
b10001010 $$
b10001011 $$
b10001100 $$
b10001101 $$
b10001110 $$
b10001111 $$
b10010000 $$
b10010001 $$
b10010010 $$
b10010011 $$
b10010100 $$
b10010101 $$
b10010110 $$
b10010111 $$
b10011000 $$
b10011001 $$
b10011010 $$
b10011011 $$
b10011100 $$
b10011101 $$
b10011110 $$
b10011111 $$
b10100000 $$
b10100001 $$
b10100010 $$
b10100011 $$
b10100100 $$
b10100101 $$
b10100110 $$
b10100111 $$
b10101000 $$
b10101001 $$
b10101010 $$
b10101011 $$
b10101100 $$
b10101101 $$
b10101110 $$
b10101111 $$
b10110000 $$
b10110001 $$
b10110010 $$
b10110011 $$
b10110100 $$
b10110101 $$
b10110110 $$
b10110111 $$
b10111000 $$
b10111001 $$
b10111010 $$
b10111011 $$
b10111100 $$
b10111101 $$
b10111110 $$
b10111111 $$
b11000000 $$
b11000001 $$
b11000010 $$
b11000011 $$
b11000100 $$
b11000101 $$
b11000110 $$
b11000111 $$
b11001000 $$
b11001001 $$
b11001010 $$
b11001011 $$
b11001100 $$
b11001101 $$
b11001110 $$
b11001111 $$
b11010000 $$
b11010001 $$
b11010010 $$
b11010011 $$
b11010100 $$
b11010101 $$
b11010110 $$
b11010111 $$
b11011000 $$
b11011001 $$
b11011010 $$
b11011011 $$
b11011100 $$
b11011101 $$
b11011110 $$
b11011111 $$
b11100000 $$
b11100001 $$
b11100010 $$
b11100011 $$
b11100100 $$
b11100101 $$
b11100110 $$
b11100111 $$
b11101000 $$
b11101001 $$
b11101010 $$
b11101011 $$
b11101100 $$
b11101101 $$
b11101110 $$
b11101111 $$
b11110000 $$
b11110001 $$
b11110010 $$
b11110011 $$
b11110100 $$
b11110101 $$
b11110110 $$
b11110111 $$
b11111000 $$
b11111001 $$
b11111010 $$
b11111011 $$
b11111100 $$
b11111101 $$
b11111110 $$
b11111111 $$
b100000000 $$
b0 '$
b1 '$
b10 '$
b11 '$
b100 '$
b101 '$
b110 '$
b111 '$
b1000 '$
b1001 '$
b1010 '$
b1011 '$
b1100 '$
b1101 '$
b1110 '$
b1111 '$
b10000 '$
b10001 '$
b10010 '$
b10011 '$
b10100 '$
b10101 '$
b10110 '$
b10111 '$
b11000 '$
b11001 '$
b11010 '$
b11011 '$
b11100 '$
b11101 '$
b11110 '$
b11111 '$
b100000 '$
b100001 '$
b100010 '$
b100011 '$
b100100 '$
b100101 '$
b100110 '$
b100111 '$
b101000 '$
b101001 '$
b101010 '$
b101011 '$
b101100 '$
b101101 '$
b101110 '$
b101111 '$
b110000 '$
b110001 '$
b110010 '$
b110011 '$
b110100 '$
b110101 '$
b110110 '$
b110111 '$
b111000 '$
b111001 '$
b111010 '$
b111011 '$
b111100 '$
b111101 '$
b111110 '$
b111111 '$
b1000000 '$
b1000001 '$
b1000010 '$
b1000011 '$
b1000100 '$
b1000101 '$
b1000110 '$
b1000111 '$
b1001000 '$
b1001001 '$
b1001010 '$
b1001011 '$
b1001100 '$
b1001101 '$
b1001110 '$
b1001111 '$
b1010000 '$
b1010001 '$
b1010010 '$
b1010011 '$
b1010100 '$
b1010101 '$
b1010110 '$
b1010111 '$
b1011000 '$
b1011001 '$
b1011010 '$
b1011011 '$
b1011100 '$
b1011101 '$
b1011110 '$
b1011111 '$
b1100000 '$
b1100001 '$
b1100010 '$
b1100011 '$
b1100100 '$
b1100101 '$
b1100110 '$
b1100111 '$
b1101000 '$
b1101001 '$
b1101010 '$
b1101011 '$
b1101100 '$
b1101101 '$
b1101110 '$
b1101111 '$
b1110000 '$
b1110001 '$
b1110010 '$
b1110011 '$
b1110100 '$
b1110101 '$
b1110110 '$
b1110111 '$
b1111000 '$
b1111001 '$
b1111010 '$
b1111011 '$
b1111100 '$
b1111101 '$
b1111110 '$
b1111111 '$
b10000000 '$
b10000001 '$
b10000010 '$
b10000011 '$
b10000100 '$
b10000101 '$
b10000110 '$
b10000111 '$
b10001000 '$
b10001001 '$
b10001010 '$
b10001011 '$
b10001100 '$
b10001101 '$
b10001110 '$
b10001111 '$
b10010000 '$
b10010001 '$
b10010010 '$
b10010011 '$
b10010100 '$
b10010101 '$
b10010110 '$
b10010111 '$
b10011000 '$
b10011001 '$
b10011010 '$
b10011011 '$
b10011100 '$
b10011101 '$
b10011110 '$
b10011111 '$
b10100000 '$
b10100001 '$
b10100010 '$
b10100011 '$
b10100100 '$
b10100101 '$
b10100110 '$
b10100111 '$
b10101000 '$
b10101001 '$
b10101010 '$
b10101011 '$
b10101100 '$
b10101101 '$
b10101110 '$
b10101111 '$
b10110000 '$
b10110001 '$
b10110010 '$
b10110011 '$
b10110100 '$
b10110101 '$
b10110110 '$
b10110111 '$
b10111000 '$
b10111001 '$
b10111010 '$
b10111011 '$
b10111100 '$
b10111101 '$
b10111110 '$
b10111111 '$
b11000000 '$
b11000001 '$
b11000010 '$
b11000011 '$
b11000100 '$
b11000101 '$
b11000110 '$
b11000111 '$
b11001000 '$
b11001001 '$
b11001010 '$
b11001011 '$
b11001100 '$
b11001101 '$
b11001110 '$
b11001111 '$
b11010000 '$
b11010001 '$
b11010010 '$
b11010011 '$
b11010100 '$
b11010101 '$
b11010110 '$
b11010111 '$
b11011000 '$
b11011001 '$
b11011010 '$
b11011011 '$
b11011100 '$
b11011101 '$
b11011110 '$
b11011111 '$
b11100000 '$
b11100001 '$
b11100010 '$
b11100011 '$
b11100100 '$
b11100101 '$
b11100110 '$
b11100111 '$
b11101000 '$
b11101001 '$
b11101010 '$
b11101011 '$
b11101100 '$
b11101101 '$
b11101110 '$
b11101111 '$
b11110000 '$
b11110001 '$
b11110010 '$
b11110011 '$
b11110100 '$
b11110101 '$
b11110110 '$
b11110111 '$
b11111000 '$
b11111001 '$
b11111010 '$
b11111011 '$
b11111100 '$
b11111101 '$
b11111110 '$
b11111111 '$
b100000000 '$
b0 *$
b1 *$
b10 *$
b11 *$
b100 *$
b101 *$
b110 *$
b111 *$
b1000 *$
b1001 *$
b1010 *$
b1011 *$
b1100 *$
b1101 *$
b1110 *$
b1111 *$
b10000 *$
b10001 *$
b10010 *$
b10011 *$
b10100 *$
b10101 *$
b10110 *$
b10111 *$
b11000 *$
b11001 *$
b11010 *$
b11011 *$
b11100 *$
b11101 *$
b11110 *$
b11111 *$
b100000 *$
b100001 *$
b100010 *$
b100011 *$
b100100 *$
b100101 *$
b100110 *$
b100111 *$
b101000 *$
b101001 *$
b101010 *$
b101011 *$
b101100 *$
b101101 *$
b101110 *$
b101111 *$
b110000 *$
b110001 *$
b110010 *$
b110011 *$
b110100 *$
b110101 *$
b110110 *$
b110111 *$
b111000 *$
b111001 *$
b111010 *$
b111011 *$
b111100 *$
b111101 *$
b111110 *$
b111111 *$
b1000000 *$
b1000001 *$
b1000010 *$
b1000011 *$
b1000100 *$
b1000101 *$
b1000110 *$
b1000111 *$
b1001000 *$
b1001001 *$
b1001010 *$
b1001011 *$
b1001100 *$
b1001101 *$
b1001110 *$
b1001111 *$
b1010000 *$
b1010001 *$
b1010010 *$
b1010011 *$
b1010100 *$
b1010101 *$
b1010110 *$
b1010111 *$
b1011000 *$
b1011001 *$
b1011010 *$
b1011011 *$
b1011100 *$
b1011101 *$
b1011110 *$
b1011111 *$
b1100000 *$
b1100001 *$
b1100010 *$
b1100011 *$
b1100100 *$
b1100101 *$
b1100110 *$
b1100111 *$
b1101000 *$
b1101001 *$
b1101010 *$
b1101011 *$
b1101100 *$
b1101101 *$
b1101110 *$
b1101111 *$
b1110000 *$
b1110001 *$
b1110010 *$
b1110011 *$
b1110100 *$
b1110101 *$
b1110110 *$
b1110111 *$
b1111000 *$
b1111001 *$
b1111010 *$
b1111011 *$
b1111100 *$
b1111101 *$
b1111110 *$
b1111111 *$
b10000000 *$
b10000001 *$
b10000010 *$
b10000011 *$
b10000100 *$
b10000101 *$
b10000110 *$
b10000111 *$
b10001000 *$
b10001001 *$
b10001010 *$
b10001011 *$
b10001100 *$
b10001101 *$
b10001110 *$
b10001111 *$
b10010000 *$
b10010001 *$
b10010010 *$
b10010011 *$
b10010100 *$
b10010101 *$
b10010110 *$
b10010111 *$
b10011000 *$
b10011001 *$
b10011010 *$
b10011011 *$
b10011100 *$
b10011101 *$
b10011110 *$
b10011111 *$
b10100000 *$
b10100001 *$
b10100010 *$
b10100011 *$
b10100100 *$
b10100101 *$
b10100110 *$
b10100111 *$
b10101000 *$
b10101001 *$
b10101010 *$
b10101011 *$
b10101100 *$
b10101101 *$
b10101110 *$
b10101111 *$
b10110000 *$
b10110001 *$
b10110010 *$
b10110011 *$
b10110100 *$
b10110101 *$
b10110110 *$
b10110111 *$
b10111000 *$
b10111001 *$
b10111010 *$
b10111011 *$
b10111100 *$
b10111101 *$
b10111110 *$
b10111111 *$
b11000000 *$
b11000001 *$
b11000010 *$
b11000011 *$
b11000100 *$
b11000101 *$
b11000110 *$
b11000111 *$
b11001000 *$
b11001001 *$
b11001010 *$
b11001011 *$
b11001100 *$
b11001101 *$
b11001110 *$
b11001111 *$
b11010000 *$
b11010001 *$
b11010010 *$
b11010011 *$
b11010100 *$
b11010101 *$
b11010110 *$
b11010111 *$
b11011000 *$
b11011001 *$
b11011010 *$
b11011011 *$
b11011100 *$
b11011101 *$
b11011110 *$
b11011111 *$
b11100000 *$
b11100001 *$
b11100010 *$
b11100011 *$
b11100100 *$
b11100101 *$
b11100110 *$
b11100111 *$
b11101000 *$
b11101001 *$
b11101010 *$
b11101011 *$
b11101100 *$
b11101101 *$
b11101110 *$
b11101111 *$
b11110000 *$
b11110001 *$
b11110010 *$
b11110011 *$
b11110100 *$
b11110101 *$
b11110110 *$
b11110111 *$
b11111000 *$
b11111001 *$
b11111010 *$
b11111011 *$
b11111100 *$
b11111101 *$
b11111110 *$
b11111111 *$
b100000000 *$
b0 -$
b1 -$
b10 -$
b11 -$
b100 -$
b101 -$
b110 -$
b111 -$
b1000 -$
b1001 -$
b1010 -$
b1011 -$
b1100 -$
b1101 -$
b1110 -$
b1111 -$
b10000 -$
b10001 -$
b10010 -$
b10011 -$
b10100 -$
b10101 -$
b10110 -$
b10111 -$
b11000 -$
b11001 -$
b11010 -$
b11011 -$
b11100 -$
b11101 -$
b11110 -$
b11111 -$
b100000 -$
b100001 -$
b100010 -$
b100011 -$
b100100 -$
b100101 -$
b100110 -$
b100111 -$
b101000 -$
b101001 -$
b101010 -$
b101011 -$
b101100 -$
b101101 -$
b101110 -$
b101111 -$
b110000 -$
b110001 -$
b110010 -$
b110011 -$
b110100 -$
b110101 -$
b110110 -$
b110111 -$
b111000 -$
b111001 -$
b111010 -$
b111011 -$
b111100 -$
b111101 -$
b111110 -$
b111111 -$
b1000000 -$
b1000001 -$
b1000010 -$
b1000011 -$
b1000100 -$
b1000101 -$
b1000110 -$
b1000111 -$
b1001000 -$
b1001001 -$
b1001010 -$
b1001011 -$
b1001100 -$
b1001101 -$
b1001110 -$
b1001111 -$
b1010000 -$
b1010001 -$
b1010010 -$
b1010011 -$
b1010100 -$
b1010101 -$
b1010110 -$
b1010111 -$
b1011000 -$
b1011001 -$
b1011010 -$
b1011011 -$
b1011100 -$
b1011101 -$
b1011110 -$
b1011111 -$
b1100000 -$
b1100001 -$
b1100010 -$
b1100011 -$
b1100100 -$
b1100101 -$
b1100110 -$
b1100111 -$
b1101000 -$
b1101001 -$
b1101010 -$
b1101011 -$
b1101100 -$
b1101101 -$
b1101110 -$
b1101111 -$
b1110000 -$
b1110001 -$
b1110010 -$
b1110011 -$
b1110100 -$
b1110101 -$
b1110110 -$
b1110111 -$
b1111000 -$
b1111001 -$
b1111010 -$
b1111011 -$
b1111100 -$
b1111101 -$
b1111110 -$
b1111111 -$
b10000000 -$
b10000001 -$
b10000010 -$
b10000011 -$
b10000100 -$
b10000101 -$
b10000110 -$
b10000111 -$
b10001000 -$
b10001001 -$
b10001010 -$
b10001011 -$
b10001100 -$
b10001101 -$
b10001110 -$
b10001111 -$
b10010000 -$
b10010001 -$
b10010010 -$
b10010011 -$
b10010100 -$
b10010101 -$
b10010110 -$
b10010111 -$
b10011000 -$
b10011001 -$
b10011010 -$
b10011011 -$
b10011100 -$
b10011101 -$
b10011110 -$
b10011111 -$
b10100000 -$
b10100001 -$
b10100010 -$
b10100011 -$
b10100100 -$
b10100101 -$
b10100110 -$
b10100111 -$
b10101000 -$
b10101001 -$
b10101010 -$
b10101011 -$
b10101100 -$
b10101101 -$
b10101110 -$
b10101111 -$
b10110000 -$
b10110001 -$
b10110010 -$
b10110011 -$
b10110100 -$
b10110101 -$
b10110110 -$
b10110111 -$
b10111000 -$
b10111001 -$
b10111010 -$
b10111011 -$
b10111100 -$
b10111101 -$
b10111110 -$
b10111111 -$
b11000000 -$
b11000001 -$
b11000010 -$
b11000011 -$
b11000100 -$
b11000101 -$
b11000110 -$
b11000111 -$
b11001000 -$
b11001001 -$
b11001010 -$
b11001011 -$
b11001100 -$
b11001101 -$
b11001110 -$
b11001111 -$
b11010000 -$
b11010001 -$
b11010010 -$
b11010011 -$
b11010100 -$
b11010101 -$
b11010110 -$
b11010111 -$
b11011000 -$
b11011001 -$
b11011010 -$
b11011011 -$
b11011100 -$
b11011101 -$
b11011110 -$
b11011111 -$
b11100000 -$
b11100001 -$
b11100010 -$
b11100011 -$
b11100100 -$
b11100101 -$
b11100110 -$
b11100111 -$
b11101000 -$
b11101001 -$
b11101010 -$
b11101011 -$
b11101100 -$
b11101101 -$
b11101110 -$
b11101111 -$
b11110000 -$
b11110001 -$
b11110010 -$
b11110011 -$
b11110100 -$
b11110101 -$
b11110110 -$
b11110111 -$
b11111000 -$
b11111001 -$
b11111010 -$
b11111011 -$
b11111100 -$
b11111101 -$
b11111110 -$
b11111111 -$
b100000000 -$
b0 /$
b1 /$
b10 /$
b11 /$
b100 /$
b101 /$
b110 /$
b111 /$
b1000 /$
b1001 /$
b1010 /$
b1011 /$
b1100 /$
b1101 /$
b1110 /$
b1111 /$
b10000 /$
b10001 /$
b10010 /$
b10011 /$
b10100 /$
b10101 /$
b10110 /$
b10111 /$
b11000 /$
b11001 /$
b11010 /$
b11011 /$
b11100 /$
b11101 /$
b11110 /$
b11111 /$
b100000 /$
b100001 /$
b100010 /$
b100011 /$
b100100 /$
b100101 /$
b100110 /$
b100111 /$
b101000 /$
b101001 /$
b101010 /$
b101011 /$
b101100 /$
b101101 /$
b101110 /$
b101111 /$
b110000 /$
b110001 /$
b110010 /$
b110011 /$
b110100 /$
b110101 /$
b110110 /$
b110111 /$
b111000 /$
b111001 /$
b111010 /$
b111011 /$
b111100 /$
b111101 /$
b111110 /$
b111111 /$
b1000000 /$
b1000001 /$
b1000010 /$
b1000011 /$
b1000100 /$
b1000101 /$
b1000110 /$
b1000111 /$
b1001000 /$
b1001001 /$
b1001010 /$
b1001011 /$
b1001100 /$
b1001101 /$
b1001110 /$
b1001111 /$
b1010000 /$
b1010001 /$
b1010010 /$
b1010011 /$
b1010100 /$
b1010101 /$
b1010110 /$
b1010111 /$
b1011000 /$
b1011001 /$
b1011010 /$
b1011011 /$
b1011100 /$
b1011101 /$
b1011110 /$
b1011111 /$
b1100000 /$
b1100001 /$
b1100010 /$
b1100011 /$
b1100100 /$
b1100101 /$
b1100110 /$
b1100111 /$
b1101000 /$
b1101001 /$
b1101010 /$
b1101011 /$
b1101100 /$
b1101101 /$
b1101110 /$
b1101111 /$
b1110000 /$
b1110001 /$
b1110010 /$
b1110011 /$
b1110100 /$
b1110101 /$
b1110110 /$
b1110111 /$
b1111000 /$
b1111001 /$
b1111010 /$
b1111011 /$
b1111100 /$
b1111101 /$
b1111110 /$
b1111111 /$
b10000000 /$
b10000001 /$
b10000010 /$
b10000011 /$
b10000100 /$
b10000101 /$
b10000110 /$
b10000111 /$
b10001000 /$
b10001001 /$
b10001010 /$
b10001011 /$
b10001100 /$
b10001101 /$
b10001110 /$
b10001111 /$
b10010000 /$
b10010001 /$
b10010010 /$
b10010011 /$
b10010100 /$
b10010101 /$
b10010110 /$
b10010111 /$
b10011000 /$
b10011001 /$
b10011010 /$
b10011011 /$
b10011100 /$
b10011101 /$
b10011110 /$
b10011111 /$
b10100000 /$
b10100001 /$
b10100010 /$
b10100011 /$
b10100100 /$
b10100101 /$
b10100110 /$
b10100111 /$
b10101000 /$
b10101001 /$
b10101010 /$
b10101011 /$
b10101100 /$
b10101101 /$
b10101110 /$
b10101111 /$
b10110000 /$
b10110001 /$
b10110010 /$
b10110011 /$
b10110100 /$
b10110101 /$
b10110110 /$
b10110111 /$
b10111000 /$
b10111001 /$
b10111010 /$
b10111011 /$
b10111100 /$
b10111101 /$
b10111110 /$
b10111111 /$
b11000000 /$
b11000001 /$
b11000010 /$
b11000011 /$
b11000100 /$
b11000101 /$
b11000110 /$
b11000111 /$
b11001000 /$
b11001001 /$
b11001010 /$
b11001011 /$
b11001100 /$
b11001101 /$
b11001110 /$
b11001111 /$
b11010000 /$
b11010001 /$
b11010010 /$
b11010011 /$
b11010100 /$
b11010101 /$
b11010110 /$
b11010111 /$
b11011000 /$
b11011001 /$
b11011010 /$
b11011011 /$
b11011100 /$
b11011101 /$
b11011110 /$
b11011111 /$
b11100000 /$
b11100001 /$
b11100010 /$
b11100011 /$
b11100100 /$
b11100101 /$
b11100110 /$
b11100111 /$
b11101000 /$
b11101001 /$
b11101010 /$
b11101011 /$
b11101100 /$
b11101101 /$
b11101110 /$
b11101111 /$
b11110000 /$
b11110001 /$
b11110010 /$
b11110011 /$
b11110100 /$
b11110101 /$
b11110110 /$
b11110111 /$
b11111000 /$
b11111001 /$
b11111010 /$
b11111011 /$
b11111100 /$
b11111101 /$
b11111110 /$
b11111111 /$
b100000000 /$
b0 ?%
b1 ?%
b10 ?%
b11 ?%
b100 ?%
b101 ?%
b110 ?%
b111 ?%
b1000 ?%
b1001 ?%
b1010 ?%
b1011 ?%
b1100 ?%
b1101 ?%
b1110 ?%
b1111 ?%
b10000 ?%
b10001 ?%
b10010 ?%
b10011 ?%
b10100 ?%
b10101 ?%
b10110 ?%
b10111 ?%
b11000 ?%
b11001 ?%
b11010 ?%
b11011 ?%
b11100 ?%
b11101 ?%
b11110 ?%
b11111 ?%
b100000 ?%
b100001 ?%
b100010 ?%
b100011 ?%
b100100 ?%
b100101 ?%
b100110 ?%
b100111 ?%
b101000 ?%
b101001 ?%
b101010 ?%
b101011 ?%
b101100 ?%
b101101 ?%
b101110 ?%
b101111 ?%
b110000 ?%
b110001 ?%
b110010 ?%
b110011 ?%
b110100 ?%
b110101 ?%
b110110 ?%
b110111 ?%
b111000 ?%
b111001 ?%
b111010 ?%
b111011 ?%
b111100 ?%
b111101 ?%
b111110 ?%
b111111 ?%
b1000000 ?%
b1000001 ?%
b1000010 ?%
b1000011 ?%
b1000100 ?%
b1000101 ?%
b1000110 ?%
b1000111 ?%
b1001000 ?%
b1001001 ?%
b1001010 ?%
b1001011 ?%
b1001100 ?%
b1001101 ?%
b1001110 ?%
b1001111 ?%
b1010000 ?%
b1010001 ?%
b1010010 ?%
b1010011 ?%
b1010100 ?%
b1010101 ?%
b1010110 ?%
b1010111 ?%
b1011000 ?%
b1011001 ?%
b1011010 ?%
b1011011 ?%
b1011100 ?%
b1011101 ?%
b1011110 ?%
b1011111 ?%
b1100000 ?%
b1100001 ?%
b1100010 ?%
b1100011 ?%
b1100100 ?%
b1100101 ?%
b1100110 ?%
b1100111 ?%
b1101000 ?%
b1101001 ?%
b1101010 ?%
b1101011 ?%
b1101100 ?%
b1101101 ?%
b1101110 ?%
b1101111 ?%
b1110000 ?%
b1110001 ?%
b1110010 ?%
b1110011 ?%
b1110100 ?%
b1110101 ?%
b1110110 ?%
b1110111 ?%
b1111000 ?%
b1111001 ?%
b1111010 ?%
b1111011 ?%
b1111100 ?%
b1111101 ?%
b1111110 ?%
b1111111 ?%
b10000000 ?%
b10000001 ?%
b10000010 ?%
b10000011 ?%
b10000100 ?%
b10000101 ?%
b10000110 ?%
b10000111 ?%
b10001000 ?%
b10001001 ?%
b10001010 ?%
b10001011 ?%
b10001100 ?%
b10001101 ?%
b10001110 ?%
b10001111 ?%
b10010000 ?%
b10010001 ?%
b10010010 ?%
b10010011 ?%
b10010100 ?%
b10010101 ?%
b10010110 ?%
b10010111 ?%
b10011000 ?%
b10011001 ?%
b10011010 ?%
b10011011 ?%
b10011100 ?%
b10011101 ?%
b10011110 ?%
b10011111 ?%
b10100000 ?%
b10100001 ?%
b10100010 ?%
b10100011 ?%
b10100100 ?%
b10100101 ?%
b10100110 ?%
b10100111 ?%
b10101000 ?%
b10101001 ?%
b10101010 ?%
b10101011 ?%
b10101100 ?%
b10101101 ?%
b10101110 ?%
b10101111 ?%
b10110000 ?%
b10110001 ?%
b10110010 ?%
b10110011 ?%
b10110100 ?%
b10110101 ?%
b10110110 ?%
b10110111 ?%
b10111000 ?%
b10111001 ?%
b10111010 ?%
b10111011 ?%
b10111100 ?%
b10111101 ?%
b10111110 ?%
b10111111 ?%
b11000000 ?%
b11000001 ?%
b11000010 ?%
b11000011 ?%
b11000100 ?%
b11000101 ?%
b11000110 ?%
b11000111 ?%
b11001000 ?%
b11001001 ?%
b11001010 ?%
b11001011 ?%
b11001100 ?%
b11001101 ?%
b11001110 ?%
b11001111 ?%
b11010000 ?%
b11010001 ?%
b11010010 ?%
b11010011 ?%
b11010100 ?%
b11010101 ?%
b11010110 ?%
b11010111 ?%
b11011000 ?%
b11011001 ?%
b11011010 ?%
b11011011 ?%
b11011100 ?%
b11011101 ?%
b11011110 ?%
b11011111 ?%
b11100000 ?%
b11100001 ?%
b11100010 ?%
b11100011 ?%
b11100100 ?%
b11100101 ?%
b11100110 ?%
b11100111 ?%
b11101000 ?%
b11101001 ?%
b11101010 ?%
b11101011 ?%
b11101100 ?%
b11101101 ?%
b11101110 ?%
b11101111 ?%
b11110000 ?%
b11110001 ?%
b11110010 ?%
b11110011 ?%
b11110100 ?%
b11110101 ?%
b11110110 ?%
b11110111 ?%
b11111000 ?%
b11111001 ?%
b11111010 ?%
b11111011 ?%
b11111100 ?%
b11111101 ?%
b11111110 ?%
b11111111 ?%
b100000000 ?%
b0 B%
b1 B%
b10 B%
b11 B%
b100 B%
b101 B%
b110 B%
b111 B%
b1000 B%
b1001 B%
b1010 B%
b1011 B%
b1100 B%
b1101 B%
b1110 B%
b1111 B%
b10000 B%
b10001 B%
b10010 B%
b10011 B%
b10100 B%
b10101 B%
b10110 B%
b10111 B%
b11000 B%
b11001 B%
b11010 B%
b11011 B%
b11100 B%
b11101 B%
b11110 B%
b11111 B%
b100000 B%
b100001 B%
b100010 B%
b100011 B%
b100100 B%
b100101 B%
b100110 B%
b100111 B%
b101000 B%
b101001 B%
b101010 B%
b101011 B%
b101100 B%
b101101 B%
b101110 B%
b101111 B%
b110000 B%
b110001 B%
b110010 B%
b110011 B%
b110100 B%
b110101 B%
b110110 B%
b110111 B%
b111000 B%
b111001 B%
b111010 B%
b111011 B%
b111100 B%
b111101 B%
b111110 B%
b111111 B%
b1000000 B%
b1000001 B%
b1000010 B%
b1000011 B%
b1000100 B%
b1000101 B%
b1000110 B%
b1000111 B%
b1001000 B%
b1001001 B%
b1001010 B%
b1001011 B%
b1001100 B%
b1001101 B%
b1001110 B%
b1001111 B%
b1010000 B%
b1010001 B%
b1010010 B%
b1010011 B%
b1010100 B%
b1010101 B%
b1010110 B%
b1010111 B%
b1011000 B%
b1011001 B%
b1011010 B%
b1011011 B%
b1011100 B%
b1011101 B%
b1011110 B%
b1011111 B%
b1100000 B%
b1100001 B%
b1100010 B%
b1100011 B%
b1100100 B%
b1100101 B%
b1100110 B%
b1100111 B%
b1101000 B%
b1101001 B%
b1101010 B%
b1101011 B%
b1101100 B%
b1101101 B%
b1101110 B%
b1101111 B%
b1110000 B%
b1110001 B%
b1110010 B%
b1110011 B%
b1110100 B%
b1110101 B%
b1110110 B%
b1110111 B%
b1111000 B%
b1111001 B%
b1111010 B%
b1111011 B%
b1111100 B%
b1111101 B%
b1111110 B%
b1111111 B%
b10000000 B%
b10000001 B%
b10000010 B%
b10000011 B%
b10000100 B%
b10000101 B%
b10000110 B%
b10000111 B%
b10001000 B%
b10001001 B%
b10001010 B%
b10001011 B%
b10001100 B%
b10001101 B%
b10001110 B%
b10001111 B%
b10010000 B%
b10010001 B%
b10010010 B%
b10010011 B%
b10010100 B%
b10010101 B%
b10010110 B%
b10010111 B%
b10011000 B%
b10011001 B%
b10011010 B%
b10011011 B%
b10011100 B%
b10011101 B%
b10011110 B%
b10011111 B%
b10100000 B%
b10100001 B%
b10100010 B%
b10100011 B%
b10100100 B%
b10100101 B%
b10100110 B%
b10100111 B%
b10101000 B%
b10101001 B%
b10101010 B%
b10101011 B%
b10101100 B%
b10101101 B%
b10101110 B%
b10101111 B%
b10110000 B%
b10110001 B%
b10110010 B%
b10110011 B%
b10110100 B%
b10110101 B%
b10110110 B%
b10110111 B%
b10111000 B%
b10111001 B%
b10111010 B%
b10111011 B%
b10111100 B%
b10111101 B%
b10111110 B%
b10111111 B%
b11000000 B%
b11000001 B%
b11000010 B%
b11000011 B%
b11000100 B%
b11000101 B%
b11000110 B%
b11000111 B%
b11001000 B%
b11001001 B%
b11001010 B%
b11001011 B%
b11001100 B%
b11001101 B%
b11001110 B%
b11001111 B%
b11010000 B%
b11010001 B%
b11010010 B%
b11010011 B%
b11010100 B%
b11010101 B%
b11010110 B%
b11010111 B%
b11011000 B%
b11011001 B%
b11011010 B%
b11011011 B%
b11011100 B%
b11011101 B%
b11011110 B%
b11011111 B%
b11100000 B%
b11100001 B%
b11100010 B%
b11100011 B%
b11100100 B%
b11100101 B%
b11100110 B%
b11100111 B%
b11101000 B%
b11101001 B%
b11101010 B%
b11101011 B%
b11101100 B%
b11101101 B%
b11101110 B%
b11101111 B%
b11110000 B%
b11110001 B%
b11110010 B%
b11110011 B%
b11110100 B%
b11110101 B%
b11110110 B%
b11110111 B%
b11111000 B%
b11111001 B%
b11111010 B%
b11111011 B%
b11111100 B%
b11111101 B%
b11111110 B%
b11111111 B%
b100000000 B%
b0 E%
b1 E%
b10 E%
b11 E%
b100 E%
b101 E%
b110 E%
b111 E%
b1000 E%
b1001 E%
b1010 E%
b1011 E%
b1100 E%
b1101 E%
b1110 E%
b1111 E%
b10000 E%
b10001 E%
b10010 E%
b10011 E%
b10100 E%
b10101 E%
b10110 E%
b10111 E%
b11000 E%
b11001 E%
b11010 E%
b11011 E%
b11100 E%
b11101 E%
b11110 E%
b11111 E%
b100000 E%
b100001 E%
b100010 E%
b100011 E%
b100100 E%
b100101 E%
b100110 E%
b100111 E%
b101000 E%
b101001 E%
b101010 E%
b101011 E%
b101100 E%
b101101 E%
b101110 E%
b101111 E%
b110000 E%
b110001 E%
b110010 E%
b110011 E%
b110100 E%
b110101 E%
b110110 E%
b110111 E%
b111000 E%
b111001 E%
b111010 E%
b111011 E%
b111100 E%
b111101 E%
b111110 E%
b111111 E%
b1000000 E%
b1000001 E%
b1000010 E%
b1000011 E%
b1000100 E%
b1000101 E%
b1000110 E%
b1000111 E%
b1001000 E%
b1001001 E%
b1001010 E%
b1001011 E%
b1001100 E%
b1001101 E%
b1001110 E%
b1001111 E%
b1010000 E%
b1010001 E%
b1010010 E%
b1010011 E%
b1010100 E%
b1010101 E%
b1010110 E%
b1010111 E%
b1011000 E%
b1011001 E%
b1011010 E%
b1011011 E%
b1011100 E%
b1011101 E%
b1011110 E%
b1011111 E%
b1100000 E%
b1100001 E%
b1100010 E%
b1100011 E%
b1100100 E%
b1100101 E%
b1100110 E%
b1100111 E%
b1101000 E%
b1101001 E%
b1101010 E%
b1101011 E%
b1101100 E%
b1101101 E%
b1101110 E%
b1101111 E%
b1110000 E%
b1110001 E%
b1110010 E%
b1110011 E%
b1110100 E%
b1110101 E%
b1110110 E%
b1110111 E%
b1111000 E%
b1111001 E%
b1111010 E%
b1111011 E%
b1111100 E%
b1111101 E%
b1111110 E%
b1111111 E%
b10000000 E%
b10000001 E%
b10000010 E%
b10000011 E%
b10000100 E%
b10000101 E%
b10000110 E%
b10000111 E%
b10001000 E%
b10001001 E%
b10001010 E%
b10001011 E%
b10001100 E%
b10001101 E%
b10001110 E%
b10001111 E%
b10010000 E%
b10010001 E%
b10010010 E%
b10010011 E%
b10010100 E%
b10010101 E%
b10010110 E%
b10010111 E%
b10011000 E%
b10011001 E%
b10011010 E%
b10011011 E%
b10011100 E%
b10011101 E%
b10011110 E%
b10011111 E%
b10100000 E%
b10100001 E%
b10100010 E%
b10100011 E%
b10100100 E%
b10100101 E%
b10100110 E%
b10100111 E%
b10101000 E%
b10101001 E%
b10101010 E%
b10101011 E%
b10101100 E%
b10101101 E%
b10101110 E%
b10101111 E%
b10110000 E%
b10110001 E%
b10110010 E%
b10110011 E%
b10110100 E%
b10110101 E%
b10110110 E%
b10110111 E%
b10111000 E%
b10111001 E%
b10111010 E%
b10111011 E%
b10111100 E%
b10111101 E%
b10111110 E%
b10111111 E%
b11000000 E%
b11000001 E%
b11000010 E%
b11000011 E%
b11000100 E%
b11000101 E%
b11000110 E%
b11000111 E%
b11001000 E%
b11001001 E%
b11001010 E%
b11001011 E%
b11001100 E%
b11001101 E%
b11001110 E%
b11001111 E%
b11010000 E%
b11010001 E%
b11010010 E%
b11010011 E%
b11010100 E%
b11010101 E%
b11010110 E%
b11010111 E%
b11011000 E%
b11011001 E%
b11011010 E%
b11011011 E%
b11011100 E%
b11011101 E%
b11011110 E%
b11011111 E%
b11100000 E%
b11100001 E%
b11100010 E%
b11100011 E%
b11100100 E%
b11100101 E%
b11100110 E%
b11100111 E%
b11101000 E%
b11101001 E%
b11101010 E%
b11101011 E%
b11101100 E%
b11101101 E%
b11101110 E%
b11101111 E%
b11110000 E%
b11110001 E%
b11110010 E%
b11110011 E%
b11110100 E%
b11110101 E%
b11110110 E%
b11110111 E%
b11111000 E%
b11111001 E%
b11111010 E%
b11111011 E%
b11111100 E%
b11111101 E%
b11111110 E%
b11111111 E%
b100000000 E%
b0 H%
b1 H%
b10 H%
b11 H%
b100 H%
b101 H%
b110 H%
b111 H%
b1000 H%
b1001 H%
b1010 H%
b1011 H%
b1100 H%
b1101 H%
b1110 H%
b1111 H%
b10000 H%
b10001 H%
b10010 H%
b10011 H%
b10100 H%
b10101 H%
b10110 H%
b10111 H%
b11000 H%
b11001 H%
b11010 H%
b11011 H%
b11100 H%
b11101 H%
b11110 H%
b11111 H%
b100000 H%
b100001 H%
b100010 H%
b100011 H%
b100100 H%
b100101 H%
b100110 H%
b100111 H%
b101000 H%
b101001 H%
b101010 H%
b101011 H%
b101100 H%
b101101 H%
b101110 H%
b101111 H%
b110000 H%
b110001 H%
b110010 H%
b110011 H%
b110100 H%
b110101 H%
b110110 H%
b110111 H%
b111000 H%
b111001 H%
b111010 H%
b111011 H%
b111100 H%
b111101 H%
b111110 H%
b111111 H%
b1000000 H%
b1000001 H%
b1000010 H%
b1000011 H%
b1000100 H%
b1000101 H%
b1000110 H%
b1000111 H%
b1001000 H%
b1001001 H%
b1001010 H%
b1001011 H%
b1001100 H%
b1001101 H%
b1001110 H%
b1001111 H%
b1010000 H%
b1010001 H%
b1010010 H%
b1010011 H%
b1010100 H%
b1010101 H%
b1010110 H%
b1010111 H%
b1011000 H%
b1011001 H%
b1011010 H%
b1011011 H%
b1011100 H%
b1011101 H%
b1011110 H%
b1011111 H%
b1100000 H%
b1100001 H%
b1100010 H%
b1100011 H%
b1100100 H%
b1100101 H%
b1100110 H%
b1100111 H%
b1101000 H%
b1101001 H%
b1101010 H%
b1101011 H%
b1101100 H%
b1101101 H%
b1101110 H%
b1101111 H%
b1110000 H%
b1110001 H%
b1110010 H%
b1110011 H%
b1110100 H%
b1110101 H%
b1110110 H%
b1110111 H%
b1111000 H%
b1111001 H%
b1111010 H%
b1111011 H%
b1111100 H%
b1111101 H%
b1111110 H%
b1111111 H%
b10000000 H%
b10000001 H%
b10000010 H%
b10000011 H%
b10000100 H%
b10000101 H%
b10000110 H%
b10000111 H%
b10001000 H%
b10001001 H%
b10001010 H%
b10001011 H%
b10001100 H%
b10001101 H%
b10001110 H%
b10001111 H%
b10010000 H%
b10010001 H%
b10010010 H%
b10010011 H%
b10010100 H%
b10010101 H%
b10010110 H%
b10010111 H%
b10011000 H%
b10011001 H%
b10011010 H%
b10011011 H%
b10011100 H%
b10011101 H%
b10011110 H%
b10011111 H%
b10100000 H%
b10100001 H%
b10100010 H%
b10100011 H%
b10100100 H%
b10100101 H%
b10100110 H%
b10100111 H%
b10101000 H%
b10101001 H%
b10101010 H%
b10101011 H%
b10101100 H%
b10101101 H%
b10101110 H%
b10101111 H%
b10110000 H%
b10110001 H%
b10110010 H%
b10110011 H%
b10110100 H%
b10110101 H%
b10110110 H%
b10110111 H%
b10111000 H%
b10111001 H%
b10111010 H%
b10111011 H%
b10111100 H%
b10111101 H%
b10111110 H%
b10111111 H%
b11000000 H%
b11000001 H%
b11000010 H%
b11000011 H%
b11000100 H%
b11000101 H%
b11000110 H%
b11000111 H%
b11001000 H%
b11001001 H%
b11001010 H%
b11001011 H%
b11001100 H%
b11001101 H%
b11001110 H%
b11001111 H%
b11010000 H%
b11010001 H%
b11010010 H%
b11010011 H%
b11010100 H%
b11010101 H%
b11010110 H%
b11010111 H%
b11011000 H%
b11011001 H%
b11011010 H%
b11011011 H%
b11011100 H%
b11011101 H%
b11011110 H%
b11011111 H%
b11100000 H%
b11100001 H%
b11100010 H%
b11100011 H%
b11100100 H%
b11100101 H%
b11100110 H%
b11100111 H%
b11101000 H%
b11101001 H%
b11101010 H%
b11101011 H%
b11101100 H%
b11101101 H%
b11101110 H%
b11101111 H%
b11110000 H%
b11110001 H%
b11110010 H%
b11110011 H%
b11110100 H%
b11110101 H%
b11110110 H%
b11110111 H%
b11111000 H%
b11111001 H%
b11111010 H%
b11111011 H%
b11111100 H%
b11111101 H%
b11111110 H%
b11111111 H%
b100000000 H%
b0 K%
b1 K%
b10 K%
b11 K%
b100 K%
b101 K%
b110 K%
b111 K%
b1000 K%
b1001 K%
b1010 K%
b1011 K%
b1100 K%
b1101 K%
b1110 K%
b1111 K%
b10000 K%
b10001 K%
b10010 K%
b10011 K%
b10100 K%
b10101 K%
b10110 K%
b10111 K%
b11000 K%
b11001 K%
b11010 K%
b11011 K%
b11100 K%
b11101 K%
b11110 K%
b11111 K%
b100000 K%
b100001 K%
b100010 K%
b100011 K%
b100100 K%
b100101 K%
b100110 K%
b100111 K%
b101000 K%
b101001 K%
b101010 K%
b101011 K%
b101100 K%
b101101 K%
b101110 K%
b101111 K%
b110000 K%
b110001 K%
b110010 K%
b110011 K%
b110100 K%
b110101 K%
b110110 K%
b110111 K%
b111000 K%
b111001 K%
b111010 K%
b111011 K%
b111100 K%
b111101 K%
b111110 K%
b111111 K%
b1000000 K%
b1000001 K%
b1000010 K%
b1000011 K%
b1000100 K%
b1000101 K%
b1000110 K%
b1000111 K%
b1001000 K%
b1001001 K%
b1001010 K%
b1001011 K%
b1001100 K%
b1001101 K%
b1001110 K%
b1001111 K%
b1010000 K%
b1010001 K%
b1010010 K%
b1010011 K%
b1010100 K%
b1010101 K%
b1010110 K%
b1010111 K%
b1011000 K%
b1011001 K%
b1011010 K%
b1011011 K%
b1011100 K%
b1011101 K%
b1011110 K%
b1011111 K%
b1100000 K%
b1100001 K%
b1100010 K%
b1100011 K%
b1100100 K%
b1100101 K%
b1100110 K%
b1100111 K%
b1101000 K%
b1101001 K%
b1101010 K%
b1101011 K%
b1101100 K%
b1101101 K%
b1101110 K%
b1101111 K%
b1110000 K%
b1110001 K%
b1110010 K%
b1110011 K%
b1110100 K%
b1110101 K%
b1110110 K%
b1110111 K%
b1111000 K%
b1111001 K%
b1111010 K%
b1111011 K%
b1111100 K%
b1111101 K%
b1111110 K%
b1111111 K%
b10000000 K%
b10000001 K%
b10000010 K%
b10000011 K%
b10000100 K%
b10000101 K%
b10000110 K%
b10000111 K%
b10001000 K%
b10001001 K%
b10001010 K%
b10001011 K%
b10001100 K%
b10001101 K%
b10001110 K%
b10001111 K%
b10010000 K%
b10010001 K%
b10010010 K%
b10010011 K%
b10010100 K%
b10010101 K%
b10010110 K%
b10010111 K%
b10011000 K%
b10011001 K%
b10011010 K%
b10011011 K%
b10011100 K%
b10011101 K%
b10011110 K%
b10011111 K%
b10100000 K%
b10100001 K%
b10100010 K%
b10100011 K%
b10100100 K%
b10100101 K%
b10100110 K%
b10100111 K%
b10101000 K%
b10101001 K%
b10101010 K%
b10101011 K%
b10101100 K%
b10101101 K%
b10101110 K%
b10101111 K%
b10110000 K%
b10110001 K%
b10110010 K%
b10110011 K%
b10110100 K%
b10110101 K%
b10110110 K%
b10110111 K%
b10111000 K%
b10111001 K%
b10111010 K%
b10111011 K%
b10111100 K%
b10111101 K%
b10111110 K%
b10111111 K%
b11000000 K%
b11000001 K%
b11000010 K%
b11000011 K%
b11000100 K%
b11000101 K%
b11000110 K%
b11000111 K%
b11001000 K%
b11001001 K%
b11001010 K%
b11001011 K%
b11001100 K%
b11001101 K%
b11001110 K%
b11001111 K%
b11010000 K%
b11010001 K%
b11010010 K%
b11010011 K%
b11010100 K%
b11010101 K%
b11010110 K%
b11010111 K%
b11011000 K%
b11011001 K%
b11011010 K%
b11011011 K%
b11011100 K%
b11011101 K%
b11011110 K%
b11011111 K%
b11100000 K%
b11100001 K%
b11100010 K%
b11100011 K%
b11100100 K%
b11100101 K%
b11100110 K%
b11100111 K%
b11101000 K%
b11101001 K%
b11101010 K%
b11101011 K%
b11101100 K%
b11101101 K%
b11101110 K%
b11101111 K%
b11110000 K%
b11110001 K%
b11110010 K%
b11110011 K%
b11110100 K%
b11110101 K%
b11110110 K%
b11110111 K%
b11111000 K%
b11111001 K%
b11111010 K%
b11111011 K%
b11111100 K%
b11111101 K%
b11111110 K%
b11111111 K%
b100000000 K%
b0 N%
b1 N%
b10 N%
b11 N%
b100 N%
b101 N%
b110 N%
b111 N%
b1000 N%
b1001 N%
b1010 N%
b1011 N%
b1100 N%
b1101 N%
b1110 N%
b1111 N%
b10000 N%
b10001 N%
b10010 N%
b10011 N%
b10100 N%
b10101 N%
b10110 N%
b10111 N%
b11000 N%
b11001 N%
b11010 N%
b11011 N%
b11100 N%
b11101 N%
b11110 N%
b11111 N%
b100000 N%
b100001 N%
b100010 N%
b100011 N%
b100100 N%
b100101 N%
b100110 N%
b100111 N%
b101000 N%
b101001 N%
b101010 N%
b101011 N%
b101100 N%
b101101 N%
b101110 N%
b101111 N%
b110000 N%
b110001 N%
b110010 N%
b110011 N%
b110100 N%
b110101 N%
b110110 N%
b110111 N%
b111000 N%
b111001 N%
b111010 N%
b111011 N%
b111100 N%
b111101 N%
b111110 N%
b111111 N%
b1000000 N%
b1000001 N%
b1000010 N%
b1000011 N%
b1000100 N%
b1000101 N%
b1000110 N%
b1000111 N%
b1001000 N%
b1001001 N%
b1001010 N%
b1001011 N%
b1001100 N%
b1001101 N%
b1001110 N%
b1001111 N%
b1010000 N%
b1010001 N%
b1010010 N%
b1010011 N%
b1010100 N%
b1010101 N%
b1010110 N%
b1010111 N%
b1011000 N%
b1011001 N%
b1011010 N%
b1011011 N%
b1011100 N%
b1011101 N%
b1011110 N%
b1011111 N%
b1100000 N%
b1100001 N%
b1100010 N%
b1100011 N%
b1100100 N%
b1100101 N%
b1100110 N%
b1100111 N%
b1101000 N%
b1101001 N%
b1101010 N%
b1101011 N%
b1101100 N%
b1101101 N%
b1101110 N%
b1101111 N%
b1110000 N%
b1110001 N%
b1110010 N%
b1110011 N%
b1110100 N%
b1110101 N%
b1110110 N%
b1110111 N%
b1111000 N%
b1111001 N%
b1111010 N%
b1111011 N%
b1111100 N%
b1111101 N%
b1111110 N%
b1111111 N%
b10000000 N%
b10000001 N%
b10000010 N%
b10000011 N%
b10000100 N%
b10000101 N%
b10000110 N%
b10000111 N%
b10001000 N%
b10001001 N%
b10001010 N%
b10001011 N%
b10001100 N%
b10001101 N%
b10001110 N%
b10001111 N%
b10010000 N%
b10010001 N%
b10010010 N%
b10010011 N%
b10010100 N%
b10010101 N%
b10010110 N%
b10010111 N%
b10011000 N%
b10011001 N%
b10011010 N%
b10011011 N%
b10011100 N%
b10011101 N%
b10011110 N%
b10011111 N%
b10100000 N%
b10100001 N%
b10100010 N%
b10100011 N%
b10100100 N%
b10100101 N%
b10100110 N%
b10100111 N%
b10101000 N%
b10101001 N%
b10101010 N%
b10101011 N%
b10101100 N%
b10101101 N%
b10101110 N%
b10101111 N%
b10110000 N%
b10110001 N%
b10110010 N%
b10110011 N%
b10110100 N%
b10110101 N%
b10110110 N%
b10110111 N%
b10111000 N%
b10111001 N%
b10111010 N%
b10111011 N%
b10111100 N%
b10111101 N%
b10111110 N%
b10111111 N%
b11000000 N%
b11000001 N%
b11000010 N%
b11000011 N%
b11000100 N%
b11000101 N%
b11000110 N%
b11000111 N%
b11001000 N%
b11001001 N%
b11001010 N%
b11001011 N%
b11001100 N%
b11001101 N%
b11001110 N%
b11001111 N%
b11010000 N%
b11010001 N%
b11010010 N%
b11010011 N%
b11010100 N%
b11010101 N%
b11010110 N%
b11010111 N%
b11011000 N%
b11011001 N%
b11011010 N%
b11011011 N%
b11011100 N%
b11011101 N%
b11011110 N%
b11011111 N%
b11100000 N%
b11100001 N%
b11100010 N%
b11100011 N%
b11100100 N%
b11100101 N%
b11100110 N%
b11100111 N%
b11101000 N%
b11101001 N%
b11101010 N%
b11101011 N%
b11101100 N%
b11101101 N%
b11101110 N%
b11101111 N%
b11110000 N%
b11110001 N%
b11110010 N%
b11110011 N%
b11110100 N%
b11110101 N%
b11110110 N%
b11110111 N%
b11111000 N%
b11111001 N%
b11111010 N%
b11111011 N%
b11111100 N%
b11111101 N%
b11111110 N%
b11111111 N%
b100000000 N%
b0 P%
b1 P%
b10 P%
b11 P%
b100 P%
b101 P%
b110 P%
b111 P%
b1000 P%
b1001 P%
b1010 P%
b1011 P%
b1100 P%
b1101 P%
b1110 P%
b1111 P%
b10000 P%
b10001 P%
b10010 P%
b10011 P%
b10100 P%
b10101 P%
b10110 P%
b10111 P%
b11000 P%
b11001 P%
b11010 P%
b11011 P%
b11100 P%
b11101 P%
b11110 P%
b11111 P%
b100000 P%
b100001 P%
b100010 P%
b100011 P%
b100100 P%
b100101 P%
b100110 P%
b100111 P%
b101000 P%
b101001 P%
b101010 P%
b101011 P%
b101100 P%
b101101 P%
b101110 P%
b101111 P%
b110000 P%
b110001 P%
b110010 P%
b110011 P%
b110100 P%
b110101 P%
b110110 P%
b110111 P%
b111000 P%
b111001 P%
b111010 P%
b111011 P%
b111100 P%
b111101 P%
b111110 P%
b111111 P%
b1000000 P%
b1000001 P%
b1000010 P%
b1000011 P%
b1000100 P%
b1000101 P%
b1000110 P%
b1000111 P%
b1001000 P%
b1001001 P%
b1001010 P%
b1001011 P%
b1001100 P%
b1001101 P%
b1001110 P%
b1001111 P%
b1010000 P%
b1010001 P%
b1010010 P%
b1010011 P%
b1010100 P%
b1010101 P%
b1010110 P%
b1010111 P%
b1011000 P%
b1011001 P%
b1011010 P%
b1011011 P%
b1011100 P%
b1011101 P%
b1011110 P%
b1011111 P%
b1100000 P%
b1100001 P%
b1100010 P%
b1100011 P%
b1100100 P%
b1100101 P%
b1100110 P%
b1100111 P%
b1101000 P%
b1101001 P%
b1101010 P%
b1101011 P%
b1101100 P%
b1101101 P%
b1101110 P%
b1101111 P%
b1110000 P%
b1110001 P%
b1110010 P%
b1110011 P%
b1110100 P%
b1110101 P%
b1110110 P%
b1110111 P%
b1111000 P%
b1111001 P%
b1111010 P%
b1111011 P%
b1111100 P%
b1111101 P%
b1111110 P%
b1111111 P%
b10000000 P%
b10000001 P%
b10000010 P%
b10000011 P%
b10000100 P%
b10000101 P%
b10000110 P%
b10000111 P%
b10001000 P%
b10001001 P%
b10001010 P%
b10001011 P%
b10001100 P%
b10001101 P%
b10001110 P%
b10001111 P%
b10010000 P%
b10010001 P%
b10010010 P%
b10010011 P%
b10010100 P%
b10010101 P%
b10010110 P%
b10010111 P%
b10011000 P%
b10011001 P%
b10011010 P%
b10011011 P%
b10011100 P%
b10011101 P%
b10011110 P%
b10011111 P%
b10100000 P%
b10100001 P%
b10100010 P%
b10100011 P%
b10100100 P%
b10100101 P%
b10100110 P%
b10100111 P%
b10101000 P%
b10101001 P%
b10101010 P%
b10101011 P%
b10101100 P%
b10101101 P%
b10101110 P%
b10101111 P%
b10110000 P%
b10110001 P%
b10110010 P%
b10110011 P%
b10110100 P%
b10110101 P%
b10110110 P%
b10110111 P%
b10111000 P%
b10111001 P%
b10111010 P%
b10111011 P%
b10111100 P%
b10111101 P%
b10111110 P%
b10111111 P%
b11000000 P%
b11000001 P%
b11000010 P%
b11000011 P%
b11000100 P%
b11000101 P%
b11000110 P%
b11000111 P%
b11001000 P%
b11001001 P%
b11001010 P%
b11001011 P%
b11001100 P%
b11001101 P%
b11001110 P%
b11001111 P%
b11010000 P%
b11010001 P%
b11010010 P%
b11010011 P%
b11010100 P%
b11010101 P%
b11010110 P%
b11010111 P%
b11011000 P%
b11011001 P%
b11011010 P%
b11011011 P%
b11011100 P%
b11011101 P%
b11011110 P%
b11011111 P%
b11100000 P%
b11100001 P%
b11100010 P%
b11100011 P%
b11100100 P%
b11100101 P%
b11100110 P%
b11100111 P%
b11101000 P%
b11101001 P%
b11101010 P%
b11101011 P%
b11101100 P%
b11101101 P%
b11101110 P%
b11101111 P%
b11110000 P%
b11110001 P%
b11110010 P%
b11110011 P%
b11110100 P%
b11110101 P%
b11110110 P%
b11110111 P%
b11111000 P%
b11111001 P%
b11111010 P%
b11111011 P%
b11111100 P%
b11111101 P%
b11111110 P%
b11111111 P%
b100000000 P%
b10 #!
#150
0!!
09,
08
0}
#200
1!!
19,
18
1}
b0 |#
b1 |#
b10 |#
b11 |#
b100 |#
b101 |#
b110 |#
b111 |#
b1000 |#
b1001 |#
b1010 |#
b1011 |#
b1100 |#
b1101 |#
b1110 |#
b1111 |#
b10000 |#
b10001 |#
b10010 |#
b10011 |#
b10100 |#
b10101 |#
b10110 |#
b10111 |#
b11000 |#
b11001 |#
b11010 |#
b11011 |#
b11100 |#
b11101 |#
b11110 |#
b11111 |#
b100000 |#
b100001 |#
b100010 |#
b100011 |#
b100100 |#
b100101 |#
b100110 |#
b100111 |#
b101000 |#
b101001 |#
b101010 |#
b101011 |#
b101100 |#
b101101 |#
b101110 |#
b101111 |#
b110000 |#
b110001 |#
b110010 |#
b110011 |#
b110100 |#
b110101 |#
b110110 |#
b110111 |#
b111000 |#
b111001 |#
b111010 |#
b111011 |#
b111100 |#
b111101 |#
b111110 |#
b111111 |#
b1000000 |#
b1000001 |#
b1000010 |#
b1000011 |#
b1000100 |#
b1000101 |#
b1000110 |#
b1000111 |#
b1001000 |#
b1001001 |#
b1001010 |#
b1001011 |#
b1001100 |#
b1001101 |#
b1001110 |#
b1001111 |#
b1010000 |#
b1010001 |#
b1010010 |#
b1010011 |#
b1010100 |#
b1010101 |#
b1010110 |#
b1010111 |#
b1011000 |#
b1011001 |#
b1011010 |#
b1011011 |#
b1011100 |#
b1011101 |#
b1011110 |#
b1011111 |#
b1100000 |#
b1100001 |#
b1100010 |#
b1100011 |#
b1100100 |#
b1100101 |#
b1100110 |#
b1100111 |#
b1101000 |#
b1101001 |#
b1101010 |#
b1101011 |#
b1101100 |#
b1101101 |#
b1101110 |#
b1101111 |#
b1110000 |#
b1110001 |#
b1110010 |#
b1110011 |#
b1110100 |#
b1110101 |#
b1110110 |#
b1110111 |#
b1111000 |#
b1111001 |#
b1111010 |#
b1111011 |#
b1111100 |#
b1111101 |#
b1111110 |#
b1111111 |#
b10000000 |#
b10000001 |#
b10000010 |#
b10000011 |#
b10000100 |#
b10000101 |#
b10000110 |#
b10000111 |#
b10001000 |#
b10001001 |#
b10001010 |#
b10001011 |#
b10001100 |#
b10001101 |#
b10001110 |#
b10001111 |#
b10010000 |#
b10010001 |#
b10010010 |#
b10010011 |#
b10010100 |#
b10010101 |#
b10010110 |#
b10010111 |#
b10011000 |#
b10011001 |#
b10011010 |#
b10011011 |#
b10011100 |#
b10011101 |#
b10011110 |#
b10011111 |#
b10100000 |#
b10100001 |#
b10100010 |#
b10100011 |#
b10100100 |#
b10100101 |#
b10100110 |#
b10100111 |#
b10101000 |#
b10101001 |#
b10101010 |#
b10101011 |#
b10101100 |#
b10101101 |#
b10101110 |#
b10101111 |#
b10110000 |#
b10110001 |#
b10110010 |#
b10110011 |#
b10110100 |#
b10110101 |#
b10110110 |#
b10110111 |#
b10111000 |#
b10111001 |#
b10111010 |#
b10111011 |#
b10111100 |#
b10111101 |#
b10111110 |#
b10111111 |#
b11000000 |#
b11000001 |#
b11000010 |#
b11000011 |#
b11000100 |#
b11000101 |#
b11000110 |#
b11000111 |#
b11001000 |#
b11001001 |#
b11001010 |#
b11001011 |#
b11001100 |#
b11001101 |#
b11001110 |#
b11001111 |#
b11010000 |#
b11010001 |#
b11010010 |#
b11010011 |#
b11010100 |#
b11010101 |#
b11010110 |#
b11010111 |#
b11011000 |#
b11011001 |#
b11011010 |#
b11011011 |#
b11011100 |#
b11011101 |#
b11011110 |#
b11011111 |#
b11100000 |#
b11100001 |#
b11100010 |#
b11100011 |#
b11100100 |#
b11100101 |#
b11100110 |#
b11100111 |#
b11101000 |#
b11101001 |#
b11101010 |#
b11101011 |#
b11101100 |#
b11101101 |#
b11101110 |#
b11101111 |#
b11110000 |#
b11110001 |#
b11110010 |#
b11110011 |#
b11110100 |#
b11110101 |#
b11110110 |#
b11110111 |#
b11111000 |#
b11111001 |#
b11111010 |#
b11111011 |#
b11111100 |#
b11111101 |#
b11111110 |#
b11111111 |#
b100000000 |#
b0 !$
b1 !$
b10 !$
b11 !$
b100 !$
b101 !$
b110 !$
b111 !$
b1000 !$
b1001 !$
b1010 !$
b1011 !$
b1100 !$
b1101 !$
b1110 !$
b1111 !$
b10000 !$
b10001 !$
b10010 !$
b10011 !$
b10100 !$
b10101 !$
b10110 !$
b10111 !$
b11000 !$
b11001 !$
b11010 !$
b11011 !$
b11100 !$
b11101 !$
b11110 !$
b11111 !$
b100000 !$
b100001 !$
b100010 !$
b100011 !$
b100100 !$
b100101 !$
b100110 !$
b100111 !$
b101000 !$
b101001 !$
b101010 !$
b101011 !$
b101100 !$
b101101 !$
b101110 !$
b101111 !$
b110000 !$
b110001 !$
b110010 !$
b110011 !$
b110100 !$
b110101 !$
b110110 !$
b110111 !$
b111000 !$
b111001 !$
b111010 !$
b111011 !$
b111100 !$
b111101 !$
b111110 !$
b111111 !$
b1000000 !$
b1000001 !$
b1000010 !$
b1000011 !$
b1000100 !$
b1000101 !$
b1000110 !$
b1000111 !$
b1001000 !$
b1001001 !$
b1001010 !$
b1001011 !$
b1001100 !$
b1001101 !$
b1001110 !$
b1001111 !$
b1010000 !$
b1010001 !$
b1010010 !$
b1010011 !$
b1010100 !$
b1010101 !$
b1010110 !$
b1010111 !$
b1011000 !$
b1011001 !$
b1011010 !$
b1011011 !$
b1011100 !$
b1011101 !$
b1011110 !$
b1011111 !$
b1100000 !$
b1100001 !$
b1100010 !$
b1100011 !$
b1100100 !$
b1100101 !$
b1100110 !$
b1100111 !$
b1101000 !$
b1101001 !$
b1101010 !$
b1101011 !$
b1101100 !$
b1101101 !$
b1101110 !$
b1101111 !$
b1110000 !$
b1110001 !$
b1110010 !$
b1110011 !$
b1110100 !$
b1110101 !$
b1110110 !$
b1110111 !$
b1111000 !$
b1111001 !$
b1111010 !$
b1111011 !$
b1111100 !$
b1111101 !$
b1111110 !$
b1111111 !$
b10000000 !$
b10000001 !$
b10000010 !$
b10000011 !$
b10000100 !$
b10000101 !$
b10000110 !$
b10000111 !$
b10001000 !$
b10001001 !$
b10001010 !$
b10001011 !$
b10001100 !$
b10001101 !$
b10001110 !$
b10001111 !$
b10010000 !$
b10010001 !$
b10010010 !$
b10010011 !$
b10010100 !$
b10010101 !$
b10010110 !$
b10010111 !$
b10011000 !$
b10011001 !$
b10011010 !$
b10011011 !$
b10011100 !$
b10011101 !$
b10011110 !$
b10011111 !$
b10100000 !$
b10100001 !$
b10100010 !$
b10100011 !$
b10100100 !$
b10100101 !$
b10100110 !$
b10100111 !$
b10101000 !$
b10101001 !$
b10101010 !$
b10101011 !$
b10101100 !$
b10101101 !$
b10101110 !$
b10101111 !$
b10110000 !$
b10110001 !$
b10110010 !$
b10110011 !$
b10110100 !$
b10110101 !$
b10110110 !$
b10110111 !$
b10111000 !$
b10111001 !$
b10111010 !$
b10111011 !$
b10111100 !$
b10111101 !$
b10111110 !$
b10111111 !$
b11000000 !$
b11000001 !$
b11000010 !$
b11000011 !$
b11000100 !$
b11000101 !$
b11000110 !$
b11000111 !$
b11001000 !$
b11001001 !$
b11001010 !$
b11001011 !$
b11001100 !$
b11001101 !$
b11001110 !$
b11001111 !$
b11010000 !$
b11010001 !$
b11010010 !$
b11010011 !$
b11010100 !$
b11010101 !$
b11010110 !$
b11010111 !$
b11011000 !$
b11011001 !$
b11011010 !$
b11011011 !$
b11011100 !$
b11011101 !$
b11011110 !$
b11011111 !$
b11100000 !$
b11100001 !$
b11100010 !$
b11100011 !$
b11100100 !$
b11100101 !$
b11100110 !$
b11100111 !$
b11101000 !$
b11101001 !$
b11101010 !$
b11101011 !$
b11101100 !$
b11101101 !$
b11101110 !$
b11101111 !$
b11110000 !$
b11110001 !$
b11110010 !$
b11110011 !$
b11110100 !$
b11110101 !$
b11110110 !$
b11110111 !$
b11111000 !$
b11111001 !$
b11111010 !$
b11111011 !$
b11111100 !$
b11111101 !$
b11111110 !$
b11111111 !$
b100000000 !$
b0 $$
b1 $$
b10 $$
b11 $$
b100 $$
b101 $$
b110 $$
b111 $$
b1000 $$
b1001 $$
b1010 $$
b1011 $$
b1100 $$
b1101 $$
b1110 $$
b1111 $$
b10000 $$
b10001 $$
b10010 $$
b10011 $$
b10100 $$
b10101 $$
b10110 $$
b10111 $$
b11000 $$
b11001 $$
b11010 $$
b11011 $$
b11100 $$
b11101 $$
b11110 $$
b11111 $$
b100000 $$
b100001 $$
b100010 $$
b100011 $$
b100100 $$
b100101 $$
b100110 $$
b100111 $$
b101000 $$
b101001 $$
b101010 $$
b101011 $$
b101100 $$
b101101 $$
b101110 $$
b101111 $$
b110000 $$
b110001 $$
b110010 $$
b110011 $$
b110100 $$
b110101 $$
b110110 $$
b110111 $$
b111000 $$
b111001 $$
b111010 $$
b111011 $$
b111100 $$
b111101 $$
b111110 $$
b111111 $$
b1000000 $$
b1000001 $$
b1000010 $$
b1000011 $$
b1000100 $$
b1000101 $$
b1000110 $$
b1000111 $$
b1001000 $$
b1001001 $$
b1001010 $$
b1001011 $$
b1001100 $$
b1001101 $$
b1001110 $$
b1001111 $$
b1010000 $$
b1010001 $$
b1010010 $$
b1010011 $$
b1010100 $$
b1010101 $$
b1010110 $$
b1010111 $$
b1011000 $$
b1011001 $$
b1011010 $$
b1011011 $$
b1011100 $$
b1011101 $$
b1011110 $$
b1011111 $$
b1100000 $$
b1100001 $$
b1100010 $$
b1100011 $$
b1100100 $$
b1100101 $$
b1100110 $$
b1100111 $$
b1101000 $$
b1101001 $$
b1101010 $$
b1101011 $$
b1101100 $$
b1101101 $$
b1101110 $$
b1101111 $$
b1110000 $$
b1110001 $$
b1110010 $$
b1110011 $$
b1110100 $$
b1110101 $$
b1110110 $$
b1110111 $$
b1111000 $$
b1111001 $$
b1111010 $$
b1111011 $$
b1111100 $$
b1111101 $$
b1111110 $$
b1111111 $$
b10000000 $$
b10000001 $$
b10000010 $$
b10000011 $$
b10000100 $$
b10000101 $$
b10000110 $$
b10000111 $$
b10001000 $$
b10001001 $$
b10001010 $$
b10001011 $$
b10001100 $$
b10001101 $$
b10001110 $$
b10001111 $$
b10010000 $$
b10010001 $$
b10010010 $$
b10010011 $$
b10010100 $$
b10010101 $$
b10010110 $$
b10010111 $$
b10011000 $$
b10011001 $$
b10011010 $$
b10011011 $$
b10011100 $$
b10011101 $$
b10011110 $$
b10011111 $$
b10100000 $$
b10100001 $$
b10100010 $$
b10100011 $$
b10100100 $$
b10100101 $$
b10100110 $$
b10100111 $$
b10101000 $$
b10101001 $$
b10101010 $$
b10101011 $$
b10101100 $$
b10101101 $$
b10101110 $$
b10101111 $$
b10110000 $$
b10110001 $$
b10110010 $$
b10110011 $$
b10110100 $$
b10110101 $$
b10110110 $$
b10110111 $$
b10111000 $$
b10111001 $$
b10111010 $$
b10111011 $$
b10111100 $$
b10111101 $$
b10111110 $$
b10111111 $$
b11000000 $$
b11000001 $$
b11000010 $$
b11000011 $$
b11000100 $$
b11000101 $$
b11000110 $$
b11000111 $$
b11001000 $$
b11001001 $$
b11001010 $$
b11001011 $$
b11001100 $$
b11001101 $$
b11001110 $$
b11001111 $$
b11010000 $$
b11010001 $$
b11010010 $$
b11010011 $$
b11010100 $$
b11010101 $$
b11010110 $$
b11010111 $$
b11011000 $$
b11011001 $$
b11011010 $$
b11011011 $$
b11011100 $$
b11011101 $$
b11011110 $$
b11011111 $$
b11100000 $$
b11100001 $$
b11100010 $$
b11100011 $$
b11100100 $$
b11100101 $$
b11100110 $$
b11100111 $$
b11101000 $$
b11101001 $$
b11101010 $$
b11101011 $$
b11101100 $$
b11101101 $$
b11101110 $$
b11101111 $$
b11110000 $$
b11110001 $$
b11110010 $$
b11110011 $$
b11110100 $$
b11110101 $$
b11110110 $$
b11110111 $$
b11111000 $$
b11111001 $$
b11111010 $$
b11111011 $$
b11111100 $$
b11111101 $$
b11111110 $$
b11111111 $$
b100000000 $$
b0 '$
b1 '$
b10 '$
b11 '$
b100 '$
b101 '$
b110 '$
b111 '$
b1000 '$
b1001 '$
b1010 '$
b1011 '$
b1100 '$
b1101 '$
b1110 '$
b1111 '$
b10000 '$
b10001 '$
b10010 '$
b10011 '$
b10100 '$
b10101 '$
b10110 '$
b10111 '$
b11000 '$
b11001 '$
b11010 '$
b11011 '$
b11100 '$
b11101 '$
b11110 '$
b11111 '$
b100000 '$
b100001 '$
b100010 '$
b100011 '$
b100100 '$
b100101 '$
b100110 '$
b100111 '$
b101000 '$
b101001 '$
b101010 '$
b101011 '$
b101100 '$
b101101 '$
b101110 '$
b101111 '$
b110000 '$
b110001 '$
b110010 '$
b110011 '$
b110100 '$
b110101 '$
b110110 '$
b110111 '$
b111000 '$
b111001 '$
b111010 '$
b111011 '$
b111100 '$
b111101 '$
b111110 '$
b111111 '$
b1000000 '$
b1000001 '$
b1000010 '$
b1000011 '$
b1000100 '$
b1000101 '$
b1000110 '$
b1000111 '$
b1001000 '$
b1001001 '$
b1001010 '$
b1001011 '$
b1001100 '$
b1001101 '$
b1001110 '$
b1001111 '$
b1010000 '$
b1010001 '$
b1010010 '$
b1010011 '$
b1010100 '$
b1010101 '$
b1010110 '$
b1010111 '$
b1011000 '$
b1011001 '$
b1011010 '$
b1011011 '$
b1011100 '$
b1011101 '$
b1011110 '$
b1011111 '$
b1100000 '$
b1100001 '$
b1100010 '$
b1100011 '$
b1100100 '$
b1100101 '$
b1100110 '$
b1100111 '$
b1101000 '$
b1101001 '$
b1101010 '$
b1101011 '$
b1101100 '$
b1101101 '$
b1101110 '$
b1101111 '$
b1110000 '$
b1110001 '$
b1110010 '$
b1110011 '$
b1110100 '$
b1110101 '$
b1110110 '$
b1110111 '$
b1111000 '$
b1111001 '$
b1111010 '$
b1111011 '$
b1111100 '$
b1111101 '$
b1111110 '$
b1111111 '$
b10000000 '$
b10000001 '$
b10000010 '$
b10000011 '$
b10000100 '$
b10000101 '$
b10000110 '$
b10000111 '$
b10001000 '$
b10001001 '$
b10001010 '$
b10001011 '$
b10001100 '$
b10001101 '$
b10001110 '$
b10001111 '$
b10010000 '$
b10010001 '$
b10010010 '$
b10010011 '$
b10010100 '$
b10010101 '$
b10010110 '$
b10010111 '$
b10011000 '$
b10011001 '$
b10011010 '$
b10011011 '$
b10011100 '$
b10011101 '$
b10011110 '$
b10011111 '$
b10100000 '$
b10100001 '$
b10100010 '$
b10100011 '$
b10100100 '$
b10100101 '$
b10100110 '$
b10100111 '$
b10101000 '$
b10101001 '$
b10101010 '$
b10101011 '$
b10101100 '$
b10101101 '$
b10101110 '$
b10101111 '$
b10110000 '$
b10110001 '$
b10110010 '$
b10110011 '$
b10110100 '$
b10110101 '$
b10110110 '$
b10110111 '$
b10111000 '$
b10111001 '$
b10111010 '$
b10111011 '$
b10111100 '$
b10111101 '$
b10111110 '$
b10111111 '$
b11000000 '$
b11000001 '$
b11000010 '$
b11000011 '$
b11000100 '$
b11000101 '$
b11000110 '$
b11000111 '$
b11001000 '$
b11001001 '$
b11001010 '$
b11001011 '$
b11001100 '$
b11001101 '$
b11001110 '$
b11001111 '$
b11010000 '$
b11010001 '$
b11010010 '$
b11010011 '$
b11010100 '$
b11010101 '$
b11010110 '$
b11010111 '$
b11011000 '$
b11011001 '$
b11011010 '$
b11011011 '$
b11011100 '$
b11011101 '$
b11011110 '$
b11011111 '$
b11100000 '$
b11100001 '$
b11100010 '$
b11100011 '$
b11100100 '$
b11100101 '$
b11100110 '$
b11100111 '$
b11101000 '$
b11101001 '$
b11101010 '$
b11101011 '$
b11101100 '$
b11101101 '$
b11101110 '$
b11101111 '$
b11110000 '$
b11110001 '$
b11110010 '$
b11110011 '$
b11110100 '$
b11110101 '$
b11110110 '$
b11110111 '$
b11111000 '$
b11111001 '$
b11111010 '$
b11111011 '$
b11111100 '$
b11111101 '$
b11111110 '$
b11111111 '$
b100000000 '$
b0 *$
b1 *$
b10 *$
b11 *$
b100 *$
b101 *$
b110 *$
b111 *$
b1000 *$
b1001 *$
b1010 *$
b1011 *$
b1100 *$
b1101 *$
b1110 *$
b1111 *$
b10000 *$
b10001 *$
b10010 *$
b10011 *$
b10100 *$
b10101 *$
b10110 *$
b10111 *$
b11000 *$
b11001 *$
b11010 *$
b11011 *$
b11100 *$
b11101 *$
b11110 *$
b11111 *$
b100000 *$
b100001 *$
b100010 *$
b100011 *$
b100100 *$
b100101 *$
b100110 *$
b100111 *$
b101000 *$
b101001 *$
b101010 *$
b101011 *$
b101100 *$
b101101 *$
b101110 *$
b101111 *$
b110000 *$
b110001 *$
b110010 *$
b110011 *$
b110100 *$
b110101 *$
b110110 *$
b110111 *$
b111000 *$
b111001 *$
b111010 *$
b111011 *$
b111100 *$
b111101 *$
b111110 *$
b111111 *$
b1000000 *$
b1000001 *$
b1000010 *$
b1000011 *$
b1000100 *$
b1000101 *$
b1000110 *$
b1000111 *$
b1001000 *$
b1001001 *$
b1001010 *$
b1001011 *$
b1001100 *$
b1001101 *$
b1001110 *$
b1001111 *$
b1010000 *$
b1010001 *$
b1010010 *$
b1010011 *$
b1010100 *$
b1010101 *$
b1010110 *$
b1010111 *$
b1011000 *$
b1011001 *$
b1011010 *$
b1011011 *$
b1011100 *$
b1011101 *$
b1011110 *$
b1011111 *$
b1100000 *$
b1100001 *$
b1100010 *$
b1100011 *$
b1100100 *$
b1100101 *$
b1100110 *$
b1100111 *$
b1101000 *$
b1101001 *$
b1101010 *$
b1101011 *$
b1101100 *$
b1101101 *$
b1101110 *$
b1101111 *$
b1110000 *$
b1110001 *$
b1110010 *$
b1110011 *$
b1110100 *$
b1110101 *$
b1110110 *$
b1110111 *$
b1111000 *$
b1111001 *$
b1111010 *$
b1111011 *$
b1111100 *$
b1111101 *$
b1111110 *$
b1111111 *$
b10000000 *$
b10000001 *$
b10000010 *$
b10000011 *$
b10000100 *$
b10000101 *$
b10000110 *$
b10000111 *$
b10001000 *$
b10001001 *$
b10001010 *$
b10001011 *$
b10001100 *$
b10001101 *$
b10001110 *$
b10001111 *$
b10010000 *$
b10010001 *$
b10010010 *$
b10010011 *$
b10010100 *$
b10010101 *$
b10010110 *$
b10010111 *$
b10011000 *$
b10011001 *$
b10011010 *$
b10011011 *$
b10011100 *$
b10011101 *$
b10011110 *$
b10011111 *$
b10100000 *$
b10100001 *$
b10100010 *$
b10100011 *$
b10100100 *$
b10100101 *$
b10100110 *$
b10100111 *$
b10101000 *$
b10101001 *$
b10101010 *$
b10101011 *$
b10101100 *$
b10101101 *$
b10101110 *$
b10101111 *$
b10110000 *$
b10110001 *$
b10110010 *$
b10110011 *$
b10110100 *$
b10110101 *$
b10110110 *$
b10110111 *$
b10111000 *$
b10111001 *$
b10111010 *$
b10111011 *$
b10111100 *$
b10111101 *$
b10111110 *$
b10111111 *$
b11000000 *$
b11000001 *$
b11000010 *$
b11000011 *$
b11000100 *$
b11000101 *$
b11000110 *$
b11000111 *$
b11001000 *$
b11001001 *$
b11001010 *$
b11001011 *$
b11001100 *$
b11001101 *$
b11001110 *$
b11001111 *$
b11010000 *$
b11010001 *$
b11010010 *$
b11010011 *$
b11010100 *$
b11010101 *$
b11010110 *$
b11010111 *$
b11011000 *$
b11011001 *$
b11011010 *$
b11011011 *$
b11011100 *$
b11011101 *$
b11011110 *$
b11011111 *$
b11100000 *$
b11100001 *$
b11100010 *$
b11100011 *$
b11100100 *$
b11100101 *$
b11100110 *$
b11100111 *$
b11101000 *$
b11101001 *$
b11101010 *$
b11101011 *$
b11101100 *$
b11101101 *$
b11101110 *$
b11101111 *$
b11110000 *$
b11110001 *$
b11110010 *$
b11110011 *$
b11110100 *$
b11110101 *$
b11110110 *$
b11110111 *$
b11111000 *$
b11111001 *$
b11111010 *$
b11111011 *$
b11111100 *$
b11111101 *$
b11111110 *$
b11111111 *$
b100000000 *$
b0 -$
b1 -$
b10 -$
b11 -$
b100 -$
b101 -$
b110 -$
b111 -$
b1000 -$
b1001 -$
b1010 -$
b1011 -$
b1100 -$
b1101 -$
b1110 -$
b1111 -$
b10000 -$
b10001 -$
b10010 -$
b10011 -$
b10100 -$
b10101 -$
b10110 -$
b10111 -$
b11000 -$
b11001 -$
b11010 -$
b11011 -$
b11100 -$
b11101 -$
b11110 -$
b11111 -$
b100000 -$
b100001 -$
b100010 -$
b100011 -$
b100100 -$
b100101 -$
b100110 -$
b100111 -$
b101000 -$
b101001 -$
b101010 -$
b101011 -$
b101100 -$
b101101 -$
b101110 -$
b101111 -$
b110000 -$
b110001 -$
b110010 -$
b110011 -$
b110100 -$
b110101 -$
b110110 -$
b110111 -$
b111000 -$
b111001 -$
b111010 -$
b111011 -$
b111100 -$
b111101 -$
b111110 -$
b111111 -$
b1000000 -$
b1000001 -$
b1000010 -$
b1000011 -$
b1000100 -$
b1000101 -$
b1000110 -$
b1000111 -$
b1001000 -$
b1001001 -$
b1001010 -$
b1001011 -$
b1001100 -$
b1001101 -$
b1001110 -$
b1001111 -$
b1010000 -$
b1010001 -$
b1010010 -$
b1010011 -$
b1010100 -$
b1010101 -$
b1010110 -$
b1010111 -$
b1011000 -$
b1011001 -$
b1011010 -$
b1011011 -$
b1011100 -$
b1011101 -$
b1011110 -$
b1011111 -$
b1100000 -$
b1100001 -$
b1100010 -$
b1100011 -$
b1100100 -$
b1100101 -$
b1100110 -$
b1100111 -$
b1101000 -$
b1101001 -$
b1101010 -$
b1101011 -$
b1101100 -$
b1101101 -$
b1101110 -$
b1101111 -$
b1110000 -$
b1110001 -$
b1110010 -$
b1110011 -$
b1110100 -$
b1110101 -$
b1110110 -$
b1110111 -$
b1111000 -$
b1111001 -$
b1111010 -$
b1111011 -$
b1111100 -$
b1111101 -$
b1111110 -$
b1111111 -$
b10000000 -$
b10000001 -$
b10000010 -$
b10000011 -$
b10000100 -$
b10000101 -$
b10000110 -$
b10000111 -$
b10001000 -$
b10001001 -$
b10001010 -$
b10001011 -$
b10001100 -$
b10001101 -$
b10001110 -$
b10001111 -$
b10010000 -$
b10010001 -$
b10010010 -$
b10010011 -$
b10010100 -$
b10010101 -$
b10010110 -$
b10010111 -$
b10011000 -$
b10011001 -$
b10011010 -$
b10011011 -$
b10011100 -$
b10011101 -$
b10011110 -$
b10011111 -$
b10100000 -$
b10100001 -$
b10100010 -$
b10100011 -$
b10100100 -$
b10100101 -$
b10100110 -$
b10100111 -$
b10101000 -$
b10101001 -$
b10101010 -$
b10101011 -$
b10101100 -$
b10101101 -$
b10101110 -$
b10101111 -$
b10110000 -$
b10110001 -$
b10110010 -$
b10110011 -$
b10110100 -$
b10110101 -$
b10110110 -$
b10110111 -$
b10111000 -$
b10111001 -$
b10111010 -$
b10111011 -$
b10111100 -$
b10111101 -$
b10111110 -$
b10111111 -$
b11000000 -$
b11000001 -$
b11000010 -$
b11000011 -$
b11000100 -$
b11000101 -$
b11000110 -$
b11000111 -$
b11001000 -$
b11001001 -$
b11001010 -$
b11001011 -$
b11001100 -$
b11001101 -$
b11001110 -$
b11001111 -$
b11010000 -$
b11010001 -$
b11010010 -$
b11010011 -$
b11010100 -$
b11010101 -$
b11010110 -$
b11010111 -$
b11011000 -$
b11011001 -$
b11011010 -$
b11011011 -$
b11011100 -$
b11011101 -$
b11011110 -$
b11011111 -$
b11100000 -$
b11100001 -$
b11100010 -$
b11100011 -$
b11100100 -$
b11100101 -$
b11100110 -$
b11100111 -$
b11101000 -$
b11101001 -$
b11101010 -$
b11101011 -$
b11101100 -$
b11101101 -$
b11101110 -$
b11101111 -$
b11110000 -$
b11110001 -$
b11110010 -$
b11110011 -$
b11110100 -$
b11110101 -$
b11110110 -$
b11110111 -$
b11111000 -$
b11111001 -$
b11111010 -$
b11111011 -$
b11111100 -$
b11111101 -$
b11111110 -$
b11111111 -$
b100000000 -$
b0 /$
b1 /$
b10 /$
b11 /$
b100 /$
b101 /$
b110 /$
b111 /$
b1000 /$
b1001 /$
b1010 /$
b1011 /$
b1100 /$
b1101 /$
b1110 /$
b1111 /$
b10000 /$
b10001 /$
b10010 /$
b10011 /$
b10100 /$
b10101 /$
b10110 /$
b10111 /$
b11000 /$
b11001 /$
b11010 /$
b11011 /$
b11100 /$
b11101 /$
b11110 /$
b11111 /$
b100000 /$
b100001 /$
b100010 /$
b100011 /$
b100100 /$
b100101 /$
b100110 /$
b100111 /$
b101000 /$
b101001 /$
b101010 /$
b101011 /$
b101100 /$
b101101 /$
b101110 /$
b101111 /$
b110000 /$
b110001 /$
b110010 /$
b110011 /$
b110100 /$
b110101 /$
b110110 /$
b110111 /$
b111000 /$
b111001 /$
b111010 /$
b111011 /$
b111100 /$
b111101 /$
b111110 /$
b111111 /$
b1000000 /$
b1000001 /$
b1000010 /$
b1000011 /$
b1000100 /$
b1000101 /$
b1000110 /$
b1000111 /$
b1001000 /$
b1001001 /$
b1001010 /$
b1001011 /$
b1001100 /$
b1001101 /$
b1001110 /$
b1001111 /$
b1010000 /$
b1010001 /$
b1010010 /$
b1010011 /$
b1010100 /$
b1010101 /$
b1010110 /$
b1010111 /$
b1011000 /$
b1011001 /$
b1011010 /$
b1011011 /$
b1011100 /$
b1011101 /$
b1011110 /$
b1011111 /$
b1100000 /$
b1100001 /$
b1100010 /$
b1100011 /$
b1100100 /$
b1100101 /$
b1100110 /$
b1100111 /$
b1101000 /$
b1101001 /$
b1101010 /$
b1101011 /$
b1101100 /$
b1101101 /$
b1101110 /$
b1101111 /$
b1110000 /$
b1110001 /$
b1110010 /$
b1110011 /$
b1110100 /$
b1110101 /$
b1110110 /$
b1110111 /$
b1111000 /$
b1111001 /$
b1111010 /$
b1111011 /$
b1111100 /$
b1111101 /$
b1111110 /$
b1111111 /$
b10000000 /$
b10000001 /$
b10000010 /$
b10000011 /$
b10000100 /$
b10000101 /$
b10000110 /$
b10000111 /$
b10001000 /$
b10001001 /$
b10001010 /$
b10001011 /$
b10001100 /$
b10001101 /$
b10001110 /$
b10001111 /$
b10010000 /$
b10010001 /$
b10010010 /$
b10010011 /$
b10010100 /$
b10010101 /$
b10010110 /$
b10010111 /$
b10011000 /$
b10011001 /$
b10011010 /$
b10011011 /$
b10011100 /$
b10011101 /$
b10011110 /$
b10011111 /$
b10100000 /$
b10100001 /$
b10100010 /$
b10100011 /$
b10100100 /$
b10100101 /$
b10100110 /$
b10100111 /$
b10101000 /$
b10101001 /$
b10101010 /$
b10101011 /$
b10101100 /$
b10101101 /$
b10101110 /$
b10101111 /$
b10110000 /$
b10110001 /$
b10110010 /$
b10110011 /$
b10110100 /$
b10110101 /$
b10110110 /$
b10110111 /$
b10111000 /$
b10111001 /$
b10111010 /$
b10111011 /$
b10111100 /$
b10111101 /$
b10111110 /$
b10111111 /$
b11000000 /$
b11000001 /$
b11000010 /$
b11000011 /$
b11000100 /$
b11000101 /$
b11000110 /$
b11000111 /$
b11001000 /$
b11001001 /$
b11001010 /$
b11001011 /$
b11001100 /$
b11001101 /$
b11001110 /$
b11001111 /$
b11010000 /$
b11010001 /$
b11010010 /$
b11010011 /$
b11010100 /$
b11010101 /$
b11010110 /$
b11010111 /$
b11011000 /$
b11011001 /$
b11011010 /$
b11011011 /$
b11011100 /$
b11011101 /$
b11011110 /$
b11011111 /$
b11100000 /$
b11100001 /$
b11100010 /$
b11100011 /$
b11100100 /$
b11100101 /$
b11100110 /$
b11100111 /$
b11101000 /$
b11101001 /$
b11101010 /$
b11101011 /$
b11101100 /$
b11101101 /$
b11101110 /$
b11101111 /$
b11110000 /$
b11110001 /$
b11110010 /$
b11110011 /$
b11110100 /$
b11110101 /$
b11110110 /$
b11110111 /$
b11111000 /$
b11111001 /$
b11111010 /$
b11111011 /$
b11111100 /$
b11111101 /$
b11111110 /$
b11111111 /$
b100000000 /$
b0 ?%
b1 ?%
b10 ?%
b11 ?%
b100 ?%
b101 ?%
b110 ?%
b111 ?%
b1000 ?%
b1001 ?%
b1010 ?%
b1011 ?%
b1100 ?%
b1101 ?%
b1110 ?%
b1111 ?%
b10000 ?%
b10001 ?%
b10010 ?%
b10011 ?%
b10100 ?%
b10101 ?%
b10110 ?%
b10111 ?%
b11000 ?%
b11001 ?%
b11010 ?%
b11011 ?%
b11100 ?%
b11101 ?%
b11110 ?%
b11111 ?%
b100000 ?%
b100001 ?%
b100010 ?%
b100011 ?%
b100100 ?%
b100101 ?%
b100110 ?%
b100111 ?%
b101000 ?%
b101001 ?%
b101010 ?%
b101011 ?%
b101100 ?%
b101101 ?%
b101110 ?%
b101111 ?%
b110000 ?%
b110001 ?%
b110010 ?%
b110011 ?%
b110100 ?%
b110101 ?%
b110110 ?%
b110111 ?%
b111000 ?%
b111001 ?%
b111010 ?%
b111011 ?%
b111100 ?%
b111101 ?%
b111110 ?%
b111111 ?%
b1000000 ?%
b1000001 ?%
b1000010 ?%
b1000011 ?%
b1000100 ?%
b1000101 ?%
b1000110 ?%
b1000111 ?%
b1001000 ?%
b1001001 ?%
b1001010 ?%
b1001011 ?%
b1001100 ?%
b1001101 ?%
b1001110 ?%
b1001111 ?%
b1010000 ?%
b1010001 ?%
b1010010 ?%
b1010011 ?%
b1010100 ?%
b1010101 ?%
b1010110 ?%
b1010111 ?%
b1011000 ?%
b1011001 ?%
b1011010 ?%
b1011011 ?%
b1011100 ?%
b1011101 ?%
b1011110 ?%
b1011111 ?%
b1100000 ?%
b1100001 ?%
b1100010 ?%
b1100011 ?%
b1100100 ?%
b1100101 ?%
b1100110 ?%
b1100111 ?%
b1101000 ?%
b1101001 ?%
b1101010 ?%
b1101011 ?%
b1101100 ?%
b1101101 ?%
b1101110 ?%
b1101111 ?%
b1110000 ?%
b1110001 ?%
b1110010 ?%
b1110011 ?%
b1110100 ?%
b1110101 ?%
b1110110 ?%
b1110111 ?%
b1111000 ?%
b1111001 ?%
b1111010 ?%
b1111011 ?%
b1111100 ?%
b1111101 ?%
b1111110 ?%
b1111111 ?%
b10000000 ?%
b10000001 ?%
b10000010 ?%
b10000011 ?%
b10000100 ?%
b10000101 ?%
b10000110 ?%
b10000111 ?%
b10001000 ?%
b10001001 ?%
b10001010 ?%
b10001011 ?%
b10001100 ?%
b10001101 ?%
b10001110 ?%
b10001111 ?%
b10010000 ?%
b10010001 ?%
b10010010 ?%
b10010011 ?%
b10010100 ?%
b10010101 ?%
b10010110 ?%
b10010111 ?%
b10011000 ?%
b10011001 ?%
b10011010 ?%
b10011011 ?%
b10011100 ?%
b10011101 ?%
b10011110 ?%
b10011111 ?%
b10100000 ?%
b10100001 ?%
b10100010 ?%
b10100011 ?%
b10100100 ?%
b10100101 ?%
b10100110 ?%
b10100111 ?%
b10101000 ?%
b10101001 ?%
b10101010 ?%
b10101011 ?%
b10101100 ?%
b10101101 ?%
b10101110 ?%
b10101111 ?%
b10110000 ?%
b10110001 ?%
b10110010 ?%
b10110011 ?%
b10110100 ?%
b10110101 ?%
b10110110 ?%
b10110111 ?%
b10111000 ?%
b10111001 ?%
b10111010 ?%
b10111011 ?%
b10111100 ?%
b10111101 ?%
b10111110 ?%
b10111111 ?%
b11000000 ?%
b11000001 ?%
b11000010 ?%
b11000011 ?%
b11000100 ?%
b11000101 ?%
b11000110 ?%
b11000111 ?%
b11001000 ?%
b11001001 ?%
b11001010 ?%
b11001011 ?%
b11001100 ?%
b11001101 ?%
b11001110 ?%
b11001111 ?%
b11010000 ?%
b11010001 ?%
b11010010 ?%
b11010011 ?%
b11010100 ?%
b11010101 ?%
b11010110 ?%
b11010111 ?%
b11011000 ?%
b11011001 ?%
b11011010 ?%
b11011011 ?%
b11011100 ?%
b11011101 ?%
b11011110 ?%
b11011111 ?%
b11100000 ?%
b11100001 ?%
b11100010 ?%
b11100011 ?%
b11100100 ?%
b11100101 ?%
b11100110 ?%
b11100111 ?%
b11101000 ?%
b11101001 ?%
b11101010 ?%
b11101011 ?%
b11101100 ?%
b11101101 ?%
b11101110 ?%
b11101111 ?%
b11110000 ?%
b11110001 ?%
b11110010 ?%
b11110011 ?%
b11110100 ?%
b11110101 ?%
b11110110 ?%
b11110111 ?%
b11111000 ?%
b11111001 ?%
b11111010 ?%
b11111011 ?%
b11111100 ?%
b11111101 ?%
b11111110 ?%
b11111111 ?%
b100000000 ?%
b0 B%
b1 B%
b10 B%
b11 B%
b100 B%
b101 B%
b110 B%
b111 B%
b1000 B%
b1001 B%
b1010 B%
b1011 B%
b1100 B%
b1101 B%
b1110 B%
b1111 B%
b10000 B%
b10001 B%
b10010 B%
b10011 B%
b10100 B%
b10101 B%
b10110 B%
b10111 B%
b11000 B%
b11001 B%
b11010 B%
b11011 B%
b11100 B%
b11101 B%
b11110 B%
b11111 B%
b100000 B%
b100001 B%
b100010 B%
b100011 B%
b100100 B%
b100101 B%
b100110 B%
b100111 B%
b101000 B%
b101001 B%
b101010 B%
b101011 B%
b101100 B%
b101101 B%
b101110 B%
b101111 B%
b110000 B%
b110001 B%
b110010 B%
b110011 B%
b110100 B%
b110101 B%
b110110 B%
b110111 B%
b111000 B%
b111001 B%
b111010 B%
b111011 B%
b111100 B%
b111101 B%
b111110 B%
b111111 B%
b1000000 B%
b1000001 B%
b1000010 B%
b1000011 B%
b1000100 B%
b1000101 B%
b1000110 B%
b1000111 B%
b1001000 B%
b1001001 B%
b1001010 B%
b1001011 B%
b1001100 B%
b1001101 B%
b1001110 B%
b1001111 B%
b1010000 B%
b1010001 B%
b1010010 B%
b1010011 B%
b1010100 B%
b1010101 B%
b1010110 B%
b1010111 B%
b1011000 B%
b1011001 B%
b1011010 B%
b1011011 B%
b1011100 B%
b1011101 B%
b1011110 B%
b1011111 B%
b1100000 B%
b1100001 B%
b1100010 B%
b1100011 B%
b1100100 B%
b1100101 B%
b1100110 B%
b1100111 B%
b1101000 B%
b1101001 B%
b1101010 B%
b1101011 B%
b1101100 B%
b1101101 B%
b1101110 B%
b1101111 B%
b1110000 B%
b1110001 B%
b1110010 B%
b1110011 B%
b1110100 B%
b1110101 B%
b1110110 B%
b1110111 B%
b1111000 B%
b1111001 B%
b1111010 B%
b1111011 B%
b1111100 B%
b1111101 B%
b1111110 B%
b1111111 B%
b10000000 B%
b10000001 B%
b10000010 B%
b10000011 B%
b10000100 B%
b10000101 B%
b10000110 B%
b10000111 B%
b10001000 B%
b10001001 B%
b10001010 B%
b10001011 B%
b10001100 B%
b10001101 B%
b10001110 B%
b10001111 B%
b10010000 B%
b10010001 B%
b10010010 B%
b10010011 B%
b10010100 B%
b10010101 B%
b10010110 B%
b10010111 B%
b10011000 B%
b10011001 B%
b10011010 B%
b10011011 B%
b10011100 B%
b10011101 B%
b10011110 B%
b10011111 B%
b10100000 B%
b10100001 B%
b10100010 B%
b10100011 B%
b10100100 B%
b10100101 B%
b10100110 B%
b10100111 B%
b10101000 B%
b10101001 B%
b10101010 B%
b10101011 B%
b10101100 B%
b10101101 B%
b10101110 B%
b10101111 B%
b10110000 B%
b10110001 B%
b10110010 B%
b10110011 B%
b10110100 B%
b10110101 B%
b10110110 B%
b10110111 B%
b10111000 B%
b10111001 B%
b10111010 B%
b10111011 B%
b10111100 B%
b10111101 B%
b10111110 B%
b10111111 B%
b11000000 B%
b11000001 B%
b11000010 B%
b11000011 B%
b11000100 B%
b11000101 B%
b11000110 B%
b11000111 B%
b11001000 B%
b11001001 B%
b11001010 B%
b11001011 B%
b11001100 B%
b11001101 B%
b11001110 B%
b11001111 B%
b11010000 B%
b11010001 B%
b11010010 B%
b11010011 B%
b11010100 B%
b11010101 B%
b11010110 B%
b11010111 B%
b11011000 B%
b11011001 B%
b11011010 B%
b11011011 B%
b11011100 B%
b11011101 B%
b11011110 B%
b11011111 B%
b11100000 B%
b11100001 B%
b11100010 B%
b11100011 B%
b11100100 B%
b11100101 B%
b11100110 B%
b11100111 B%
b11101000 B%
b11101001 B%
b11101010 B%
b11101011 B%
b11101100 B%
b11101101 B%
b11101110 B%
b11101111 B%
b11110000 B%
b11110001 B%
b11110010 B%
b11110011 B%
b11110100 B%
b11110101 B%
b11110110 B%
b11110111 B%
b11111000 B%
b11111001 B%
b11111010 B%
b11111011 B%
b11111100 B%
b11111101 B%
b11111110 B%
b11111111 B%
b100000000 B%
b0 E%
b1 E%
b10 E%
b11 E%
b100 E%
b101 E%
b110 E%
b111 E%
b1000 E%
b1001 E%
b1010 E%
b1011 E%
b1100 E%
b1101 E%
b1110 E%
b1111 E%
b10000 E%
b10001 E%
b10010 E%
b10011 E%
b10100 E%
b10101 E%
b10110 E%
b10111 E%
b11000 E%
b11001 E%
b11010 E%
b11011 E%
b11100 E%
b11101 E%
b11110 E%
b11111 E%
b100000 E%
b100001 E%
b100010 E%
b100011 E%
b100100 E%
b100101 E%
b100110 E%
b100111 E%
b101000 E%
b101001 E%
b101010 E%
b101011 E%
b101100 E%
b101101 E%
b101110 E%
b101111 E%
b110000 E%
b110001 E%
b110010 E%
b110011 E%
b110100 E%
b110101 E%
b110110 E%
b110111 E%
b111000 E%
b111001 E%
b111010 E%
b111011 E%
b111100 E%
b111101 E%
b111110 E%
b111111 E%
b1000000 E%
b1000001 E%
b1000010 E%
b1000011 E%
b1000100 E%
b1000101 E%
b1000110 E%
b1000111 E%
b1001000 E%
b1001001 E%
b1001010 E%
b1001011 E%
b1001100 E%
b1001101 E%
b1001110 E%
b1001111 E%
b1010000 E%
b1010001 E%
b1010010 E%
b1010011 E%
b1010100 E%
b1010101 E%
b1010110 E%
b1010111 E%
b1011000 E%
b1011001 E%
b1011010 E%
b1011011 E%
b1011100 E%
b1011101 E%
b1011110 E%
b1011111 E%
b1100000 E%
b1100001 E%
b1100010 E%
b1100011 E%
b1100100 E%
b1100101 E%
b1100110 E%
b1100111 E%
b1101000 E%
b1101001 E%
b1101010 E%
b1101011 E%
b1101100 E%
b1101101 E%
b1101110 E%
b1101111 E%
b1110000 E%
b1110001 E%
b1110010 E%
b1110011 E%
b1110100 E%
b1110101 E%
b1110110 E%
b1110111 E%
b1111000 E%
b1111001 E%
b1111010 E%
b1111011 E%
b1111100 E%
b1111101 E%
b1111110 E%
b1111111 E%
b10000000 E%
b10000001 E%
b10000010 E%
b10000011 E%
b10000100 E%
b10000101 E%
b10000110 E%
b10000111 E%
b10001000 E%
b10001001 E%
b10001010 E%
b10001011 E%
b10001100 E%
b10001101 E%
b10001110 E%
b10001111 E%
b10010000 E%
b10010001 E%
b10010010 E%
b10010011 E%
b10010100 E%
b10010101 E%
b10010110 E%
b10010111 E%
b10011000 E%
b10011001 E%
b10011010 E%
b10011011 E%
b10011100 E%
b10011101 E%
b10011110 E%
b10011111 E%
b10100000 E%
b10100001 E%
b10100010 E%
b10100011 E%
b10100100 E%
b10100101 E%
b10100110 E%
b10100111 E%
b10101000 E%
b10101001 E%
b10101010 E%
b10101011 E%
b10101100 E%
b10101101 E%
b10101110 E%
b10101111 E%
b10110000 E%
b10110001 E%
b10110010 E%
b10110011 E%
b10110100 E%
b10110101 E%
b10110110 E%
b10110111 E%
b10111000 E%
b10111001 E%
b10111010 E%
b10111011 E%
b10111100 E%
b10111101 E%
b10111110 E%
b10111111 E%
b11000000 E%
b11000001 E%
b11000010 E%
b11000011 E%
b11000100 E%
b11000101 E%
b11000110 E%
b11000111 E%
b11001000 E%
b11001001 E%
b11001010 E%
b11001011 E%
b11001100 E%
b11001101 E%
b11001110 E%
b11001111 E%
b11010000 E%
b11010001 E%
b11010010 E%
b11010011 E%
b11010100 E%
b11010101 E%
b11010110 E%
b11010111 E%
b11011000 E%
b11011001 E%
b11011010 E%
b11011011 E%
b11011100 E%
b11011101 E%
b11011110 E%
b11011111 E%
b11100000 E%
b11100001 E%
b11100010 E%
b11100011 E%
b11100100 E%
b11100101 E%
b11100110 E%
b11100111 E%
b11101000 E%
b11101001 E%
b11101010 E%
b11101011 E%
b11101100 E%
b11101101 E%
b11101110 E%
b11101111 E%
b11110000 E%
b11110001 E%
b11110010 E%
b11110011 E%
b11110100 E%
b11110101 E%
b11110110 E%
b11110111 E%
b11111000 E%
b11111001 E%
b11111010 E%
b11111011 E%
b11111100 E%
b11111101 E%
b11111110 E%
b11111111 E%
b100000000 E%
b0 H%
b1 H%
b10 H%
b11 H%
b100 H%
b101 H%
b110 H%
b111 H%
b1000 H%
b1001 H%
b1010 H%
b1011 H%
b1100 H%
b1101 H%
b1110 H%
b1111 H%
b10000 H%
b10001 H%
b10010 H%
b10011 H%
b10100 H%
b10101 H%
b10110 H%
b10111 H%
b11000 H%
b11001 H%
b11010 H%
b11011 H%
b11100 H%
b11101 H%
b11110 H%
b11111 H%
b100000 H%
b100001 H%
b100010 H%
b100011 H%
b100100 H%
b100101 H%
b100110 H%
b100111 H%
b101000 H%
b101001 H%
b101010 H%
b101011 H%
b101100 H%
b101101 H%
b101110 H%
b101111 H%
b110000 H%
b110001 H%
b110010 H%
b110011 H%
b110100 H%
b110101 H%
b110110 H%
b110111 H%
b111000 H%
b111001 H%
b111010 H%
b111011 H%
b111100 H%
b111101 H%
b111110 H%
b111111 H%
b1000000 H%
b1000001 H%
b1000010 H%
b1000011 H%
b1000100 H%
b1000101 H%
b1000110 H%
b1000111 H%
b1001000 H%
b1001001 H%
b1001010 H%
b1001011 H%
b1001100 H%
b1001101 H%
b1001110 H%
b1001111 H%
b1010000 H%
b1010001 H%
b1010010 H%
b1010011 H%
b1010100 H%
b1010101 H%
b1010110 H%
b1010111 H%
b1011000 H%
b1011001 H%
b1011010 H%
b1011011 H%
b1011100 H%
b1011101 H%
b1011110 H%
b1011111 H%
b1100000 H%
b1100001 H%
b1100010 H%
b1100011 H%
b1100100 H%
b1100101 H%
b1100110 H%
b1100111 H%
b1101000 H%
b1101001 H%
b1101010 H%
b1101011 H%
b1101100 H%
b1101101 H%
b1101110 H%
b1101111 H%
b1110000 H%
b1110001 H%
b1110010 H%
b1110011 H%
b1110100 H%
b1110101 H%
b1110110 H%
b1110111 H%
b1111000 H%
b1111001 H%
b1111010 H%
b1111011 H%
b1111100 H%
b1111101 H%
b1111110 H%
b1111111 H%
b10000000 H%
b10000001 H%
b10000010 H%
b10000011 H%
b10000100 H%
b10000101 H%
b10000110 H%
b10000111 H%
b10001000 H%
b10001001 H%
b10001010 H%
b10001011 H%
b10001100 H%
b10001101 H%
b10001110 H%
b10001111 H%
b10010000 H%
b10010001 H%
b10010010 H%
b10010011 H%
b10010100 H%
b10010101 H%
b10010110 H%
b10010111 H%
b10011000 H%
b10011001 H%
b10011010 H%
b10011011 H%
b10011100 H%
b10011101 H%
b10011110 H%
b10011111 H%
b10100000 H%
b10100001 H%
b10100010 H%
b10100011 H%
b10100100 H%
b10100101 H%
b10100110 H%
b10100111 H%
b10101000 H%
b10101001 H%
b10101010 H%
b10101011 H%
b10101100 H%
b10101101 H%
b10101110 H%
b10101111 H%
b10110000 H%
b10110001 H%
b10110010 H%
b10110011 H%
b10110100 H%
b10110101 H%
b10110110 H%
b10110111 H%
b10111000 H%
b10111001 H%
b10111010 H%
b10111011 H%
b10111100 H%
b10111101 H%
b10111110 H%
b10111111 H%
b11000000 H%
b11000001 H%
b11000010 H%
b11000011 H%
b11000100 H%
b11000101 H%
b11000110 H%
b11000111 H%
b11001000 H%
b11001001 H%
b11001010 H%
b11001011 H%
b11001100 H%
b11001101 H%
b11001110 H%
b11001111 H%
b11010000 H%
b11010001 H%
b11010010 H%
b11010011 H%
b11010100 H%
b11010101 H%
b11010110 H%
b11010111 H%
b11011000 H%
b11011001 H%
b11011010 H%
b11011011 H%
b11011100 H%
b11011101 H%
b11011110 H%
b11011111 H%
b11100000 H%
b11100001 H%
b11100010 H%
b11100011 H%
b11100100 H%
b11100101 H%
b11100110 H%
b11100111 H%
b11101000 H%
b11101001 H%
b11101010 H%
b11101011 H%
b11101100 H%
b11101101 H%
b11101110 H%
b11101111 H%
b11110000 H%
b11110001 H%
b11110010 H%
b11110011 H%
b11110100 H%
b11110101 H%
b11110110 H%
b11110111 H%
b11111000 H%
b11111001 H%
b11111010 H%
b11111011 H%
b11111100 H%
b11111101 H%
b11111110 H%
b11111111 H%
b100000000 H%
b0 K%
b1 K%
b10 K%
b11 K%
b100 K%
b101 K%
b110 K%
b111 K%
b1000 K%
b1001 K%
b1010 K%
b1011 K%
b1100 K%
b1101 K%
b1110 K%
b1111 K%
b10000 K%
b10001 K%
b10010 K%
b10011 K%
b10100 K%
b10101 K%
b10110 K%
b10111 K%
b11000 K%
b11001 K%
b11010 K%
b11011 K%
b11100 K%
b11101 K%
b11110 K%
b11111 K%
b100000 K%
b100001 K%
b100010 K%
b100011 K%
b100100 K%
b100101 K%
b100110 K%
b100111 K%
b101000 K%
b101001 K%
b101010 K%
b101011 K%
b101100 K%
b101101 K%
b101110 K%
b101111 K%
b110000 K%
b110001 K%
b110010 K%
b110011 K%
b110100 K%
b110101 K%
b110110 K%
b110111 K%
b111000 K%
b111001 K%
b111010 K%
b111011 K%
b111100 K%
b111101 K%
b111110 K%
b111111 K%
b1000000 K%
b1000001 K%
b1000010 K%
b1000011 K%
b1000100 K%
b1000101 K%
b1000110 K%
b1000111 K%
b1001000 K%
b1001001 K%
b1001010 K%
b1001011 K%
b1001100 K%
b1001101 K%
b1001110 K%
b1001111 K%
b1010000 K%
b1010001 K%
b1010010 K%
b1010011 K%
b1010100 K%
b1010101 K%
b1010110 K%
b1010111 K%
b1011000 K%
b1011001 K%
b1011010 K%
b1011011 K%
b1011100 K%
b1011101 K%
b1011110 K%
b1011111 K%
b1100000 K%
b1100001 K%
b1100010 K%
b1100011 K%
b1100100 K%
b1100101 K%
b1100110 K%
b1100111 K%
b1101000 K%
b1101001 K%
b1101010 K%
b1101011 K%
b1101100 K%
b1101101 K%
b1101110 K%
b1101111 K%
b1110000 K%
b1110001 K%
b1110010 K%
b1110011 K%
b1110100 K%
b1110101 K%
b1110110 K%
b1110111 K%
b1111000 K%
b1111001 K%
b1111010 K%
b1111011 K%
b1111100 K%
b1111101 K%
b1111110 K%
b1111111 K%
b10000000 K%
b10000001 K%
b10000010 K%
b10000011 K%
b10000100 K%
b10000101 K%
b10000110 K%
b10000111 K%
b10001000 K%
b10001001 K%
b10001010 K%
b10001011 K%
b10001100 K%
b10001101 K%
b10001110 K%
b10001111 K%
b10010000 K%
b10010001 K%
b10010010 K%
b10010011 K%
b10010100 K%
b10010101 K%
b10010110 K%
b10010111 K%
b10011000 K%
b10011001 K%
b10011010 K%
b10011011 K%
b10011100 K%
b10011101 K%
b10011110 K%
b10011111 K%
b10100000 K%
b10100001 K%
b10100010 K%
b10100011 K%
b10100100 K%
b10100101 K%
b10100110 K%
b10100111 K%
b10101000 K%
b10101001 K%
b10101010 K%
b10101011 K%
b10101100 K%
b10101101 K%
b10101110 K%
b10101111 K%
b10110000 K%
b10110001 K%
b10110010 K%
b10110011 K%
b10110100 K%
b10110101 K%
b10110110 K%
b10110111 K%
b10111000 K%
b10111001 K%
b10111010 K%
b10111011 K%
b10111100 K%
b10111101 K%
b10111110 K%
b10111111 K%
b11000000 K%
b11000001 K%
b11000010 K%
b11000011 K%
b11000100 K%
b11000101 K%
b11000110 K%
b11000111 K%
b11001000 K%
b11001001 K%
b11001010 K%
b11001011 K%
b11001100 K%
b11001101 K%
b11001110 K%
b11001111 K%
b11010000 K%
b11010001 K%
b11010010 K%
b11010011 K%
b11010100 K%
b11010101 K%
b11010110 K%
b11010111 K%
b11011000 K%
b11011001 K%
b11011010 K%
b11011011 K%
b11011100 K%
b11011101 K%
b11011110 K%
b11011111 K%
b11100000 K%
b11100001 K%
b11100010 K%
b11100011 K%
b11100100 K%
b11100101 K%
b11100110 K%
b11100111 K%
b11101000 K%
b11101001 K%
b11101010 K%
b11101011 K%
b11101100 K%
b11101101 K%
b11101110 K%
b11101111 K%
b11110000 K%
b11110001 K%
b11110010 K%
b11110011 K%
b11110100 K%
b11110101 K%
b11110110 K%
b11110111 K%
b11111000 K%
b11111001 K%
b11111010 K%
b11111011 K%
b11111100 K%
b11111101 K%
b11111110 K%
b11111111 K%
b100000000 K%
b0 N%
b1 N%
b10 N%
b11 N%
b100 N%
b101 N%
b110 N%
b111 N%
b1000 N%
b1001 N%
b1010 N%
b1011 N%
b1100 N%
b1101 N%
b1110 N%
b1111 N%
b10000 N%
b10001 N%
b10010 N%
b10011 N%
b10100 N%
b10101 N%
b10110 N%
b10111 N%
b11000 N%
b11001 N%
b11010 N%
b11011 N%
b11100 N%
b11101 N%
b11110 N%
b11111 N%
b100000 N%
b100001 N%
b100010 N%
b100011 N%
b100100 N%
b100101 N%
b100110 N%
b100111 N%
b101000 N%
b101001 N%
b101010 N%
b101011 N%
b101100 N%
b101101 N%
b101110 N%
b101111 N%
b110000 N%
b110001 N%
b110010 N%
b110011 N%
b110100 N%
b110101 N%
b110110 N%
b110111 N%
b111000 N%
b111001 N%
b111010 N%
b111011 N%
b111100 N%
b111101 N%
b111110 N%
b111111 N%
b1000000 N%
b1000001 N%
b1000010 N%
b1000011 N%
b1000100 N%
b1000101 N%
b1000110 N%
b1000111 N%
b1001000 N%
b1001001 N%
b1001010 N%
b1001011 N%
b1001100 N%
b1001101 N%
b1001110 N%
b1001111 N%
b1010000 N%
b1010001 N%
b1010010 N%
b1010011 N%
b1010100 N%
b1010101 N%
b1010110 N%
b1010111 N%
b1011000 N%
b1011001 N%
b1011010 N%
b1011011 N%
b1011100 N%
b1011101 N%
b1011110 N%
b1011111 N%
b1100000 N%
b1100001 N%
b1100010 N%
b1100011 N%
b1100100 N%
b1100101 N%
b1100110 N%
b1100111 N%
b1101000 N%
b1101001 N%
b1101010 N%
b1101011 N%
b1101100 N%
b1101101 N%
b1101110 N%
b1101111 N%
b1110000 N%
b1110001 N%
b1110010 N%
b1110011 N%
b1110100 N%
b1110101 N%
b1110110 N%
b1110111 N%
b1111000 N%
b1111001 N%
b1111010 N%
b1111011 N%
b1111100 N%
b1111101 N%
b1111110 N%
b1111111 N%
b10000000 N%
b10000001 N%
b10000010 N%
b10000011 N%
b10000100 N%
b10000101 N%
b10000110 N%
b10000111 N%
b10001000 N%
b10001001 N%
b10001010 N%
b10001011 N%
b10001100 N%
b10001101 N%
b10001110 N%
b10001111 N%
b10010000 N%
b10010001 N%
b10010010 N%
b10010011 N%
b10010100 N%
b10010101 N%
b10010110 N%
b10010111 N%
b10011000 N%
b10011001 N%
b10011010 N%
b10011011 N%
b10011100 N%
b10011101 N%
b10011110 N%
b10011111 N%
b10100000 N%
b10100001 N%
b10100010 N%
b10100011 N%
b10100100 N%
b10100101 N%
b10100110 N%
b10100111 N%
b10101000 N%
b10101001 N%
b10101010 N%
b10101011 N%
b10101100 N%
b10101101 N%
b10101110 N%
b10101111 N%
b10110000 N%
b10110001 N%
b10110010 N%
b10110011 N%
b10110100 N%
b10110101 N%
b10110110 N%
b10110111 N%
b10111000 N%
b10111001 N%
b10111010 N%
b10111011 N%
b10111100 N%
b10111101 N%
b10111110 N%
b10111111 N%
b11000000 N%
b11000001 N%
b11000010 N%
b11000011 N%
b11000100 N%
b11000101 N%
b11000110 N%
b11000111 N%
b11001000 N%
b11001001 N%
b11001010 N%
b11001011 N%
b11001100 N%
b11001101 N%
b11001110 N%
b11001111 N%
b11010000 N%
b11010001 N%
b11010010 N%
b11010011 N%
b11010100 N%
b11010101 N%
b11010110 N%
b11010111 N%
b11011000 N%
b11011001 N%
b11011010 N%
b11011011 N%
b11011100 N%
b11011101 N%
b11011110 N%
b11011111 N%
b11100000 N%
b11100001 N%
b11100010 N%
b11100011 N%
b11100100 N%
b11100101 N%
b11100110 N%
b11100111 N%
b11101000 N%
b11101001 N%
b11101010 N%
b11101011 N%
b11101100 N%
b11101101 N%
b11101110 N%
b11101111 N%
b11110000 N%
b11110001 N%
b11110010 N%
b11110011 N%
b11110100 N%
b11110101 N%
b11110110 N%
b11110111 N%
b11111000 N%
b11111001 N%
b11111010 N%
b11111011 N%
b11111100 N%
b11111101 N%
b11111110 N%
b11111111 N%
b100000000 N%
b0 P%
b1 P%
b10 P%
b11 P%
b100 P%
b101 P%
b110 P%
b111 P%
b1000 P%
b1001 P%
b1010 P%
b1011 P%
b1100 P%
b1101 P%
b1110 P%
b1111 P%
b10000 P%
b10001 P%
b10010 P%
b10011 P%
b10100 P%
b10101 P%
b10110 P%
b10111 P%
b11000 P%
b11001 P%
b11010 P%
b11011 P%
b11100 P%
b11101 P%
b11110 P%
b11111 P%
b100000 P%
b100001 P%
b100010 P%
b100011 P%
b100100 P%
b100101 P%
b100110 P%
b100111 P%
b101000 P%
b101001 P%
b101010 P%
b101011 P%
b101100 P%
b101101 P%
b101110 P%
b101111 P%
b110000 P%
b110001 P%
b110010 P%
b110011 P%
b110100 P%
b110101 P%
b110110 P%
b110111 P%
b111000 P%
b111001 P%
b111010 P%
b111011 P%
b111100 P%
b111101 P%
b111110 P%
b111111 P%
b1000000 P%
b1000001 P%
b1000010 P%
b1000011 P%
b1000100 P%
b1000101 P%
b1000110 P%
b1000111 P%
b1001000 P%
b1001001 P%
b1001010 P%
b1001011 P%
b1001100 P%
b1001101 P%
b1001110 P%
b1001111 P%
b1010000 P%
b1010001 P%
b1010010 P%
b1010011 P%
b1010100 P%
b1010101 P%
b1010110 P%
b1010111 P%
b1011000 P%
b1011001 P%
b1011010 P%
b1011011 P%
b1011100 P%
b1011101 P%
b1011110 P%
b1011111 P%
b1100000 P%
b1100001 P%
b1100010 P%
b1100011 P%
b1100100 P%
b1100101 P%
b1100110 P%
b1100111 P%
b1101000 P%
b1101001 P%
b1101010 P%
b1101011 P%
b1101100 P%
b1101101 P%
b1101110 P%
b1101111 P%
b1110000 P%
b1110001 P%
b1110010 P%
b1110011 P%
b1110100 P%
b1110101 P%
b1110110 P%
b1110111 P%
b1111000 P%
b1111001 P%
b1111010 P%
b1111011 P%
b1111100 P%
b1111101 P%
b1111110 P%
b1111111 P%
b10000000 P%
b10000001 P%
b10000010 P%
b10000011 P%
b10000100 P%
b10000101 P%
b10000110 P%
b10000111 P%
b10001000 P%
b10001001 P%
b10001010 P%
b10001011 P%
b10001100 P%
b10001101 P%
b10001110 P%
b10001111 P%
b10010000 P%
b10010001 P%
b10010010 P%
b10010011 P%
b10010100 P%
b10010101 P%
b10010110 P%
b10010111 P%
b10011000 P%
b10011001 P%
b10011010 P%
b10011011 P%
b10011100 P%
b10011101 P%
b10011110 P%
b10011111 P%
b10100000 P%
b10100001 P%
b10100010 P%
b10100011 P%
b10100100 P%
b10100101 P%
b10100110 P%
b10100111 P%
b10101000 P%
b10101001 P%
b10101010 P%
b10101011 P%
b10101100 P%
b10101101 P%
b10101110 P%
b10101111 P%
b10110000 P%
b10110001 P%
b10110010 P%
b10110011 P%
b10110100 P%
b10110101 P%
b10110110 P%
b10110111 P%
b10111000 P%
b10111001 P%
b10111010 P%
b10111011 P%
b10111100 P%
b10111101 P%
b10111110 P%
b10111111 P%
b11000000 P%
b11000001 P%
b11000010 P%
b11000011 P%
b11000100 P%
b11000101 P%
b11000110 P%
b11000111 P%
b11001000 P%
b11001001 P%
b11001010 P%
b11001011 P%
b11001100 P%
b11001101 P%
b11001110 P%
b11001111 P%
b11010000 P%
b11010001 P%
b11010010 P%
b11010011 P%
b11010100 P%
b11010101 P%
b11010110 P%
b11010111 P%
b11011000 P%
b11011001 P%
b11011010 P%
b11011011 P%
b11011100 P%
b11011101 P%
b11011110 P%
b11011111 P%
b11100000 P%
b11100001 P%
b11100010 P%
b11100011 P%
b11100100 P%
b11100101 P%
b11100110 P%
b11100111 P%
b11101000 P%
b11101001 P%
b11101010 P%
b11101011 P%
b11101100 P%
b11101101 P%
b11101110 P%
b11101111 P%
b11110000 P%
b11110001 P%
b11110010 P%
b11110011 P%
b11110100 P%
b11110101 P%
b11110110 P%
b11110111 P%
b11111000 P%
b11111001 P%
b11111010 P%
b11111011 P%
b11111100 P%
b11111101 P%
b11111110 P%
b11111111 P%
b100000000 P%
b11 #!
#201
0"!
09
0~
1n#
11%
1V!
1=!
0:,
1g"
1`+
0`+
#250
0!!
09,
08
0}
#287
b0 W
b10111100101111011000110110100001100101011000110110101100100000011100100110010101100001011001000010000001101101011010010111001101110011001011000010000001100100011010010111001001110100011110010010000000111101001000000011000100001010 V
b11101 W
#300
1!!
19,
18
1}
b100 #!
#350
0!!
09,
08
0}
#387
b0 W
b101111001011110110011001101001011100100111001101110100001000000111011101110010011010010111010001100101001000000110100101101110011101000110111100100000011000110110000101100011011010000110010100101100001000000111010001101000011001010110111000100000011100100110010101100001011001000010000001110111011010010111010001101000001000000110010001101001011001100110011001100101011100100110010101101110011101000010000001110100011000010110011100001010 V
b110111 W
#400
1!!
19,
18
1}
b101 #!
#450
0!!
09,
08
0}
#487
16
b101011010010 3
b1010 4
b100 W
b101 S
b1 O
1w
1u
1%,
1",
1~+
1}+
1{+
1y+
1g
1d
1b
1a
1_
1]
1z!
1x!
1w!
1u!
1s!
1;!
18!
16!
02%
0o#
0=!
0V!
1z
18,
15,
13,
0g"
1K
1`+
0`+
b10 j+
1q+
#500
1!!
19,
18
1}
1<'
1:'
19'
17'
15'
1O(
1M(
1L(
1J(
1H(
1b)
1`)
1_)
1])
1[)
1u*
1s*
1r*
1p*
1n*
1r+
b110 #!
#501
1h+
1/*
11*
13*
14*
16*
1z(
1|(
1~(
1!)
1#)
1g'
1i'
1k'
1l'
1n'
1T&
1V&
1X&
1Y&
1[&
1`+
b0 j+
1V+
1W+
1d+
b11 j+
1s+
17"
18"
1L"
1J"
1w#
1:%
1I"
1'!
12
#550
0!!
09,
08
0}
#600
1!!
19,
18
1}
1k"
1t+
b111 #!
#601
1i+
1K"
0J"
0F"
0Q"
01%
0V+
0W+
b0 j+
0d+
1^+
b100 j+
07"
08"
0s+
0q+
1o+
0L"
1C"
1>&
1J"
0w#
0:%
1m&
#650
0!!
09,
08
0}
#700
1!!
19,
18
1}
1+'
1<+
0t+
0r+
1p+
b1000 #!
#701
1g+
0h+
0i+
1B&
1n&
1u&
13&
1*'
1)'
1''
1$'
1#'
1~&
1}&
1y&
15"
0>&
0m&
03&
11"
0^+
b0 j+
1^+
b10 \+
b100 j+
1@"
1}!
18&
07&
1=&
1"(
01"
b0 \+
0^+
b0 j+
1^+
b10 \+
b101 j+
1s+
#750
0!!
09,
08
0}
#800
1!!
19,
18
1}
0+'
1]'
1\'
1Z'
1W'
1V'
1S'
1R'
1N'
1-'
1>(
0<+
1;+
1@+
1t+
b1001 #!
#801
1i+
1F&
1A&
0B&
1#(
1o&
1Q%
1U%
1V%
1Y%
1Z%
1]%
1_%
1`%
0n&
1*(
14&
0*'
0)'
0''
0$'
0#'
0~&
0}&
0y&
10"
1/"
1-"
1*"
1)"
1&"
1%"
1!"
19(
18(
17(
16(
15(
14(
13(
10(
14"
0=&
0"(
04&
11"
b0 \+
0^+
b0 j+
1b+
1^+
b100 \+
1W+
1Z+
1Y+
b101 j+
0@"
1?"
1D"
18"
1<"
1="
1q#
1t#
1u#
1v#
19!
13!
12!
1/!
1.!
1*!
0;!
0}!
1|!
1p#
0q#
19&
08&
1<&
15)
01"
0W+
0Y+
0Z+
b0 \+
0^+
0b+
b0 j+
1b+
1^+
b100 \+
1W+
1Z+
1Y+
b110 j+
0s+
1q+
#850
0!!
09,
08
0}
#900
1!!
19,
18
1}
0]'
0\'
0Z'
0W'
0V'
0S'
0R'
0N'
0-'
1/'
0>(
1l(
1k(
1j(
1i(
1h(
1g(
1f(
1c(
1@(
1Q)
0;+
1:+
0@+
1?+
1D+
0t+
1r+
b1010 #!
#901
1h+
0i+
1J&
1E&
0F&
1@&
0A&
16)
1$(
1c%
1f%
1g%
1h%
1i%
1j%
1k%
1l%
0#(
1p&
0o&
0Q%
0U%
0V%
0Y%
0Z%
0]%
0_%
0`%
1=)
15&
09(
08(
07(
06(
05(
04(
03(
00(
00"
0/"
0-"
1,"
1+"
1("
1'"
0%"
1#"
0!"
1P)
1L)
1K)
1E)
1D)
1C)
1B)
13"
0<&
05)
05&
09!
08!
06!
15!
14!
11!
10!
0.!
1,!
0*!
11"
0W+
0Y+
0Z+
b0 \+
0^+
0b+
b0 j+
1b+
1^+
b110 \+
1W+
b10 X+
1Z+
1Y+
b110 j+
1:"
1@"
1}!
1;!
0p#
1q#
1:&
09&
1=#
1<#
1:#
17#
16#
13#
12#
1.#
1;&
1H*
01"
0W+
b0 X+
0Y+
0Z+
b0 \+
0^+
0b+
b0 j+
1b+
1^+
b110 \+
1W+
b10 X+
1Z+
1Y+
b111 j+
1s+
#950
0!!
09,
08
0}
#1000
1!!
19,
18
1}
0/'
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0c(
0@(
1B(
0Q)
1%*
1!*
1~)
1x)
1w)
1v)
1u)
1S)
1d*
0:+
19+
0?+
1>+
0D+
1C+
1t+
b1011 #!
#1001
1i+
1I&
0J&
1D&
0E&
1?&
0@&
1I*
17)
1r%
1s%
1t%
1u%
1{%
1|%
1"&
06)
1%(
0$(
0c%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0p&
0u&
1P*
16&
0P)
0L)
0K)
0E)
0D)
0C)
0B)
10"
0*"
0)"
0("
0'"
0&"
1%"
1$"
1""
1c*
1a*
1`*
1_*
1]*
1[*
1Z*
1Y*
1W*
1V*
1U*
1T*
05"
12"
0;&
0H*
06&
19!
03!
02!
01!
00!
0/!
1.!
1-!
1+!
11"
0W+
b0 X+
0Y+
0Z+
b0 \+
0^+
0b+
b0 j+
1b+
1W+
b100 X+
1Z+
1Y+
b1000 j+
0C"
0s+
0q+
0o+
1m+
0@"
0?"
0:"
19"
0;!
1:!
0}!
0|!
1r#
0q#
0:&
17&
1I#
1H#
1G#
1F#
1E#
1D#
1C#
1@#
01"
0W+
b0 X+
0Y+
0Z+
0b+
b0 j+
1b+
1W+
b100 X+
1Z+
1Y+
b1000 j+
#1050
0!!
09,
08
0}
#1100
1!!
19,
18
1}
0B(
0%*
0!*
0~)
0x)
0w)
0v)
0u)
0S)
1U)
0d*
18+
16+
15+
14+
12+
10+
1/+
1.+
1,+
1++
1*+
1)+
1f*
09+
0>+
1=+
0C+
1B+
0t+
0r+
0p+
1n+
b1100 #!
#1101
1f+
0g+
0h+
0i+
1H&
0I&
1C&
0D&
0?&
1J*
1#&
1$&
1%&
1&&
1(&
1)&
1*&
1,&
1.&
1/&
10&
12&
0I*
18)
07)
0r%
0s%
0t%
0u%
0{%
0|%
0"&
0%(
0*(
0c*
0a*
0`*
0_*
0]*
0[*
0Z*
0Y*
0W*
0V*
0U*
0T*
1."
1-"
0+"
1*"
1("
1'"
1&"
0%"
1!"
04"
17!
16!
04!
13!
11!
10!
1/!
0.!
1*!
0W+
b0 X+
0Y+
0Z+
0b+
b0 j+
1b+
1W+
b110 X+
1Z+
1Y+
b1001 j+
1s+
1:"
1;!
0r#
1s#
1]#
1Y#
1X#
1R#
1Q#
1P#
1O#
#1150
0!!
09,
08
0}
#1200
1!!
19,
18
1}
0U)
08+
06+
05+
04+
02+
00+
0/+
0.+
0,+
0++
0*+
0)+
0f*
1h*
0=+
0B+
1A+
1t+
b1101 #!
#1201
1i+
1G&
0H&
0C&
1K*
0J*
0#&
0$&
0%&
0&&
0(&
0)&
0*&
0,&
0.&
0/&
00&
02&
08)
0=)
00"
0."
0-"
0,"
0*"
0("
0'"
0&"
0$"
0#"
0""
0!"
03"
09!
07!
06!
05!
03!
01!
00!
0/!
0-!
0,!
0+!
0*!
0W+
b0 X+
0Y+
0Z+
0b+
b0 j+
1b+
1W+
1V+
b1111 j+
0="
0<"
1q+
1o+
0:"
09"
17"
0s#
0t#
0u#
0v#
1w#
1:%
1D!
1m#
1k#
1j#
1i#
1g#
1e#
1d#
1c#
1a#
1`#
1_#
1^#
0:!
18!
16!
1y#
1?!
1M"
1o#
1q#
1t#
1=!
0M"
1f"
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0@#
1i"
1g"
0V+
0W+
0b+
b0 j+
1b+
1W+
1V+
b1111 j+
#1250
0!!
09,
08
0}
#1300
1!!
19,
18
1}
0h*
0A+
1r+
1p+
b1110 #!
#1301
1g+
1h+
0G&
0K*
0P*
02"
0V+
0W+
0b+
b0 j+
1a+
0`+
b10 j+
07"
08"
0D"
0s+
0o+
0m+
0q#
0t#
0w#
0:%
1x#
1L#
1J#
1>!
1S!
1Q!
1H"
0I"
1h"
1`"
1^"
1`+
0a+
b0 j+
1a+
0`+
b10 j+
b1010 %!
0'!
1&!
1/
1-
02
11
#1302
b1 P
06
0z
08,
0K
1`+
0a+
b0 j+
1a+
0`+
0q+
#1350
0!!
09,
08
0}
#1387
15
b11011101010 3
b0 4
b1110 S
b10 O
0w
0u
1#,
0",
1!,
1z+
0y+
1e
0d
1c
1^
0]
0y#
1{!
0z!
1y!
1t!
0s!
0=#
0<#
0:#
07#
06#
03#
02#
0.#
0L#
0J#
0]#
0Y#
0X#
0R#
0Q#
0P#
0O#
0m#
0k#
0j#
0i#
0g#
0e#
0d#
0c#
0a#
0`#
0_#
0^#
0D!
0x#
08!
06!
12%
0o#
0=!
0>!
0?!
1o#
0f"
0S!
0Q!
1=!
1y
17,
0h"
0i"
0`"
0^"
05,
03,
1K
b0 %!
b111101100111011 ;,
1`+
0a+
1a+
0`+
b1 j+
1s+
1J
1I
0H
1G
1F
1E
0D
0C
1B
1A
0@
1?
1>
1=
1<
0;
0/
0-
#1400
1!!
19,
18
1}
1='
0<'
1;'
16'
05'
1P(
0O(
1N(
1I(
0H(
1c)
0b)
1a)
1\)
0[)
1v*
0u*
1t*
1o*
0n*
0r+
0p+
0n+
b1111 #!
#1401
0f+
0g+
0h+
0/*
10*
15*
06*
17*
0z(
1{(
1")
0#)
1$)
0g'
1h'
1m'
0n'
1o'
0T&
1U&
1Z&
0[&
1\&
1F"
1Q"
11%
1V!
1`+
0a+
b0 j+
1V+
1d+
b11 j+
1q+
17"
1L"
0J"
1w#
1:%
1I"
0H"
1'!
0&!
12
01
#1450
0!!
09,
08
0}
#1500
1!!
19,
18
1}
0k"
1r+
b10000 #!
#1501
1h+
0K"
1J"
0F"
0Q"
01%
0V!
0V+
b0 j+
0d+
1^+
b100 j+
07"
0s+
0q+
1o+
0L"
1C"
1>&
0J"
0w#
0:%
1m&
#1550
0!!
09,
08
0}
#1600
1!!
19,
18
1}
1+'
1<+
0t+
0r+
1p+
b10001 #!
#1601
1g+
0h+
0i+
1B&
1n&
1u&
13&
1*'
1)'
1&'
1%'
1#'
1"'
1!'
1|&
1y&
15"
0>&
0m&
03&
11"
0^+
b0 j+
1^+
b10 \+
b100 j+
1@"
1}!
18&
07&
1=&
1"(
01"
b0 \+
0^+
b0 j+
1^+
b10 \+
b101 j+
1s+
#1650
0!!
09,
08
0}
#1700
1!!
19,
18
1}
0+'
1]'
1\'
1Y'
1X'
1V'
1U'
1T'
1Q'
1N'
1-'
1>(
0<+
1;+
1@+
1t+
b10010 #!
#1701
1i+
1F&
1A&
0B&
1#(
1o&
1Q%
1T%
1W%
1X%
1Y%
1[%
1\%
1_%
1`%
0n&
1*(
14&
0*'
0)'
0&'
0%'
0#'
0"'
0!'
0|&
0y&
10"
1/"
1,"
1+"
1)"
1("
1'"
1$"
1!"
1=(
1<(
1:(
19(
18(
15(
14(
12(
11(
10(
1/(
14"
0=&
0"(
04&
11"
b0 \+
0^+
b0 j+
1b+
1^+
b100 \+
1W+
1Z+
1Y+
b101 j+
0@"
1?"
1D"
18"
1<"
1="
1q#
1t#
1u#
1v#
19!
18!
15!
14!
12!
11!
10!
1-!
1*!
0;!
0}!
1|!
1p#
0q#
19&
08&
1<&
15)
01"
0W+
0Y+
0Z+
b0 \+
0^+
0b+
b0 j+
1b+
1^+
b100 \+
1W+
1Z+
1Y+
b110 j+
0s+
1q+
#1750
0!!
09,
08
0}
#1800
1!!
19,
18
1}
0]'
0\'
0Y'
0X'
0V'
0U'
0T'
0Q'
0N'
0-'
1/'
0>(
1p(
1o(
1m(
1l(
1k(
1h(
1g(
1e(
1d(
1c(
1b(
1@(
1Q)
0;+
1:+
0@+
1?+
1D+
0t+
1r+
b10011 #!
#1801
1h+
0i+
1J&
1E&
0F&
1@&
0A&
16)
1$(
1b%
1c%
1d%
1e%
1g%
1h%
1k%
1l%
1m%
1o%
1p%
0#(
1p&
0o&
0Q%
0T%
0W%
0X%
0Y%
0[%
0\%
0_%
0`%
1=)
15&
0=(
0<(
0:(
09(
08(
05(
04(
02(
01(
00(
0/(
1-"
0)"
1%"
1#"
1""
0!"
1O)
1L)
1K)
1H)
1B)
1A)
13"
0<&
05)
05&
16!
02!
1.!
1,!
1+!
0*!
11"
0W+
0Y+
0Z+
b0 \+
0^+
0b+
b0 j+
1b+
1^+
b110 \+
1W+
b10 X+
1Z+
1Y+
b110 j+
1:"
1@"
1}!
1;!
0p#
1q#
1:&
09&
1=#
1<#
19#
18#
16#
15#
14#
11#
1.#
